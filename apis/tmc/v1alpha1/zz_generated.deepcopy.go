//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIServerAccessConfigObservation) DeepCopyInto(out *APIServerAccessConfigObservation) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIServerAccessConfigObservation.
func (in *APIServerAccessConfigObservation) DeepCopy() *APIServerAccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(APIServerAccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIServerAccessConfigParameters) DeepCopyInto(out *APIServerAccessConfigParameters) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIServerAccessConfigParameters.
func (in *APIServerAccessConfigParameters) DeepCopy() *APIServerAccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(APIServerAccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadConfigObservation) DeepCopyInto(out *AadConfigObservation) {
	*out = *in
	if in.AdminGroupIds != nil {
		in, out := &in.AdminGroupIds, &out.AdminGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableAzureRbac != nil {
		in, out := &in.EnableAzureRbac, &out.EnableAzureRbac
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadConfigObservation.
func (in *AadConfigObservation) DeepCopy() *AadConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AadConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadConfigParameters) DeepCopyInto(out *AadConfigParameters) {
	*out = *in
	if in.AdminGroupIds != nil {
		in, out := &in.AdminGroupIds, &out.AdminGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableAzureRbac != nil {
		in, out := &in.EnableAzureRbac, &out.EnableAzureRbac
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadConfigParameters.
func (in *AadConfigParameters) DeepCopy() *AadConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AadConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigObservation) DeepCopyInto(out *AccessConfigObservation) {
	*out = *in
	if in.AadConfig != nil {
		in, out := &in.AadConfig, &out.AadConfig
		*out = make([]AadConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.EnableRbac != nil {
		in, out := &in.EnableRbac, &out.EnableRbac
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigObservation.
func (in *AccessConfigObservation) DeepCopy() *AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigParameters) DeepCopyInto(out *AccessConfigParameters) {
	*out = *in
	if in.AadConfig != nil {
		in, out := &in.AadConfig, &out.AadConfig
		*out = make([]AadConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.EnableRbac != nil {
		in, out := &in.EnableRbac, &out.EnableRbac
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigParameters.
func (in *AccessConfigParameters) DeepCopy() *AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonConfigObservation) DeepCopyInto(out *AddonConfigObservation) {
	*out = *in
	if in.AzureKeyvaultSecretsProviderAddonConfig != nil {
		in, out := &in.AzureKeyvaultSecretsProviderAddonConfig, &out.AzureKeyvaultSecretsProviderAddonConfig
		*out = make([]AzureKeyvaultSecretsProviderAddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzurePolicyAddonConfig != nil {
		in, out := &in.AzurePolicyAddonConfig, &out.AzurePolicyAddonConfig
		*out = make([]AzurePolicyAddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAddonConfig != nil {
		in, out := &in.MonitorAddonConfig, &out.MonitorAddonConfig
		*out = make([]MonitorAddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonConfigObservation.
func (in *AddonConfigObservation) DeepCopy() *AddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonConfigParameters) DeepCopyInto(out *AddonConfigParameters) {
	*out = *in
	if in.AzureKeyvaultSecretsProviderAddonConfig != nil {
		in, out := &in.AzureKeyvaultSecretsProviderAddonConfig, &out.AzureKeyvaultSecretsProviderAddonConfig
		*out = make([]AzureKeyvaultSecretsProviderAddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzurePolicyAddonConfig != nil {
		in, out := &in.AzurePolicyAddonConfig, &out.AzurePolicyAddonConfig
		*out = make([]AzurePolicyAddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAddonConfig != nil {
		in, out := &in.MonitorAddonConfig, &out.MonitorAddonConfig
		*out = make([]MonitorAddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonConfigParameters.
func (in *AddonConfigParameters) DeepCopy() *AddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigsObservation) DeepCopyInto(out *AdvancedConfigsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigsObservation.
func (in *AdvancedConfigsObservation) DeepCopy() *AdvancedConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigsParameters) DeepCopyInto(out *AdvancedConfigsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigsParameters.
func (in *AdvancedConfigsParameters) DeepCopy() *AdvancedConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksCluster) DeepCopyInto(out *AksCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksCluster.
func (in *AksCluster) DeepCopy() *AksCluster {
	if in == nil {
		return nil
	}
	out := new(AksCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterList) DeepCopyInto(out *AksClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AksCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterList.
func (in *AksClusterList) DeepCopy() *AksClusterList {
	if in == nil {
		return nil
	}
	out := new(AksClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterObservation) DeepCopyInto(out *AksClusterObservation) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterObservation.
func (in *AksClusterObservation) DeepCopy() *AksClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AksClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterParameters) DeepCopyInto(out *AksClusterParameters) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterParameters.
func (in *AksClusterParameters) DeepCopy() *AksClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AksClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterSpec) DeepCopyInto(out *AksClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterSpec.
func (in *AksClusterSpec) DeepCopy() *AksClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AksClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterStatus) DeepCopyInto(out *AksClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterStatus.
func (in *AksClusterStatus) DeepCopy() *AksClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AksClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachK8SClusterObservation) DeepCopyInto(out *AttachK8SClusterObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KubeconfigFile != nil {
		in, out := &in.KubeconfigFile, &out.KubeconfigFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachK8SClusterObservation.
func (in *AttachK8SClusterObservation) DeepCopy() *AttachK8SClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AttachK8SClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachK8SClusterParameters) DeepCopyInto(out *AttachK8SClusterParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KubeconfigFile != nil {
		in, out := &in.KubeconfigFile, &out.KubeconfigFile
		*out = new(string)
		**out = **in
	}
	if in.KubeconfigRawSecretRef != nil {
		in, out := &in.KubeconfigRawSecretRef, &out.KubeconfigRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachK8SClusterParameters.
func (in *AttachK8SClusterParameters) DeepCopy() *AttachK8SClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AttachK8SClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingConfigObservation) DeepCopyInto(out *AutoScalingConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingConfigObservation.
func (in *AutoScalingConfigObservation) DeepCopy() *AutoScalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingConfigParameters) DeepCopyInto(out *AutoScalingConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingConfigParameters.
func (in *AutoScalingConfigParameters) DeepCopy() *AutoScalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoUpgradeConfigObservation) DeepCopyInto(out *AutoUpgradeConfigObservation) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoUpgradeConfigObservation.
func (in *AutoUpgradeConfigObservation) DeepCopy() *AutoUpgradeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoUpgradeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoUpgradeConfigParameters) DeepCopyInto(out *AutoUpgradeConfigParameters) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoUpgradeConfigParameters.
func (in *AutoUpgradeConfigParameters) DeepCopy() *AutoUpgradeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoUpgradeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureKeyvaultSecretsProviderAddonConfigObservation) DeepCopyInto(out *AzureKeyvaultSecretsProviderAddonConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecretRotation != nil {
		in, out := &in.EnableSecretRotation, &out.EnableSecretRotation
		*out = new(bool)
		**out = **in
	}
	if in.RotationPollInterval != nil {
		in, out := &in.RotationPollInterval, &out.RotationPollInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureKeyvaultSecretsProviderAddonConfigObservation.
func (in *AzureKeyvaultSecretsProviderAddonConfigObservation) DeepCopy() *AzureKeyvaultSecretsProviderAddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureKeyvaultSecretsProviderAddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureKeyvaultSecretsProviderAddonConfigParameters) DeepCopyInto(out *AzureKeyvaultSecretsProviderAddonConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecretRotation != nil {
		in, out := &in.EnableSecretRotation, &out.EnableSecretRotation
		*out = new(bool)
		**out = **in
	}
	if in.RotationPollInterval != nil {
		in, out := &in.RotationPollInterval, &out.RotationPollInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureKeyvaultSecretsProviderAddonConfigParameters.
func (in *AzureKeyvaultSecretsProviderAddonConfigParameters) DeepCopy() *AzureKeyvaultSecretsProviderAddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureKeyvaultSecretsProviderAddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePolicyAddonConfigObservation) DeepCopyInto(out *AzurePolicyAddonConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePolicyAddonConfigObservation.
func (in *AzurePolicyAddonConfigObservation) DeepCopy() *AzurePolicyAddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzurePolicyAddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePolicyAddonConfigParameters) DeepCopyInto(out *AzurePolicyAddonConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePolicyAddonConfigParameters.
func (in *AzurePolicyAddonConfigParameters) DeepCopy() *AzurePolicyAddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzurePolicyAddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMetaObservation) DeepCopyInto(out *ClusterMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMetaObservation.
func (in *ClusterMetaObservation) DeepCopy() *ClusterMetaObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMetaParameters) DeepCopyInto(out *ClusterMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMetaParameters.
func (in *ClusterMetaParameters) DeepCopy() *ClusterMetaParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.AttachK8SCluster != nil {
		in, out := &in.AttachK8SCluster, &out.AttachK8SCluster
		*out = make([]AttachK8SClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]ClusterMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]ClusterSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AttachK8SCluster != nil {
		in, out := &in.AttachK8SCluster, &out.AttachK8SCluster
		*out = make([]AttachK8SClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]ClusterMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]ClusterSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecObservation) DeepCopyInto(out *ClusterSpecObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.ImageRegistry != nil {
		in, out := &in.ImageRegistry, &out.ImageRegistry
		*out = new(string)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]TkgAwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]TkgServiceVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]TkgVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecObservation.
func (in *ClusterSpecObservation) DeepCopy() *ClusterSpecObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecParameters) DeepCopyInto(out *ClusterSpecParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.ImageRegistry != nil {
		in, out := &in.ImageRegistry, &out.ImageRegistry
		*out = new(string)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]TkgAwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]TkgServiceVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]TkgVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecParameters.
func (in *ClusterSpecParameters) DeepCopy() *ClusterSpecParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Group) DeepCopyInto(out *Cluster_Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Group.
func (in *Cluster_Group) DeepCopy() *Cluster_Group {
	if in == nil {
		return nil
	}
	out := new(Cluster_Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupList) DeepCopyInto(out *Cluster_GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster_Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupList.
func (in *Cluster_GroupList) DeepCopy() *Cluster_GroupList {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupMetaObservation) DeepCopyInto(out *Cluster_GroupMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupMetaObservation.
func (in *Cluster_GroupMetaObservation) DeepCopy() *Cluster_GroupMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupMetaParameters) DeepCopyInto(out *Cluster_GroupMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupMetaParameters.
func (in *Cluster_GroupMetaParameters) DeepCopy() *Cluster_GroupMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupObservation) DeepCopyInto(out *Cluster_GroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_GroupMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupObservation.
func (in *Cluster_GroupObservation) DeepCopy() *Cluster_GroupObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupParameters) DeepCopyInto(out *Cluster_GroupParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_GroupMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupParameters.
func (in *Cluster_GroupParameters) DeepCopy() *Cluster_GroupParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupSpec) DeepCopyInto(out *Cluster_GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupSpec.
func (in *Cluster_GroupSpec) DeepCopy() *Cluster_GroupSpec {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupStatus) DeepCopyInto(out *Cluster_GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupStatus.
func (in *Cluster_GroupStatus) DeepCopy() *Cluster_GroupStatus {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_Pool) DeepCopyInto(out *Cluster_Node_Pool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_Pool.
func (in *Cluster_Node_Pool) DeepCopy() *Cluster_Node_Pool {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_Pool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_Node_Pool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolList) DeepCopyInto(out *Cluster_Node_PoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster_Node_Pool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolList.
func (in *Cluster_Node_PoolList) DeepCopy() *Cluster_Node_PoolList {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_Node_PoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolMetaObservation) DeepCopyInto(out *Cluster_Node_PoolMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolMetaObservation.
func (in *Cluster_Node_PoolMetaObservation) DeepCopy() *Cluster_Node_PoolMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolMetaParameters) DeepCopyInto(out *Cluster_Node_PoolMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolMetaParameters.
func (in *Cluster_Node_PoolMetaParameters) DeepCopy() *Cluster_Node_PoolMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolObservation) DeepCopyInto(out *Cluster_Node_PoolObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_Node_PoolMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Cluster_Node_PoolSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolObservation.
func (in *Cluster_Node_PoolObservation) DeepCopy() *Cluster_Node_PoolObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolParameters) DeepCopyInto(out *Cluster_Node_PoolParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_Node_PoolMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Cluster_Node_PoolSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolParameters.
func (in *Cluster_Node_PoolParameters) DeepCopy() *Cluster_Node_PoolParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpec) DeepCopyInto(out *Cluster_Node_PoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpec.
func (in *Cluster_Node_PoolSpec) DeepCopy() *Cluster_Node_PoolSpec {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecObservation) DeepCopyInto(out *Cluster_Node_PoolSpecObservation) {
	*out = *in
	if in.CloudLabels != nil {
		in, out := &in.CloudLabels, &out.CloudLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]Cluster_Node_PoolSpecTkgAwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]Cluster_Node_PoolSpecTkgServiceVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]Cluster_Node_PoolSpecTkgVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecObservation.
func (in *Cluster_Node_PoolSpecObservation) DeepCopy() *Cluster_Node_PoolSpecObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecParameters) DeepCopyInto(out *Cluster_Node_PoolSpecParameters) {
	*out = *in
	if in.CloudLabels != nil {
		in, out := &in.CloudLabels, &out.CloudLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]Cluster_Node_PoolSpecTkgAwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]Cluster_Node_PoolSpecTkgServiceVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]Cluster_Node_PoolSpecTkgVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecParameters.
func (in *Cluster_Node_PoolSpecParameters) DeepCopy() *Cluster_Node_PoolSpecParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgAwsObservation) DeepCopyInto(out *Cluster_Node_PoolSpecTkgAwsObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgAwsObservation.
func (in *Cluster_Node_PoolSpecTkgAwsObservation) DeepCopy() *Cluster_Node_PoolSpecTkgAwsObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgAwsParameters) DeepCopyInto(out *Cluster_Node_PoolSpecTkgAwsParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgAwsParameters.
func (in *Cluster_Node_PoolSpecTkgAwsParameters) DeepCopy() *Cluster_Node_PoolSpecTkgAwsParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereObservation) DeepCopyInto(out *Cluster_Node_PoolSpecTkgServiceVsphereObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]SpecTkgServiceVsphereVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgServiceVsphereObservation.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereObservation) DeepCopy() *Cluster_Node_PoolSpecTkgServiceVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgServiceVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereParameters) DeepCopyInto(out *Cluster_Node_PoolSpecTkgServiceVsphereParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]SpecTkgServiceVsphereVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgServiceVsphereParameters.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereParameters) DeepCopy() *Cluster_Node_PoolSpecTkgServiceVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgServiceVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgVsphereObservation) DeepCopyInto(out *Cluster_Node_PoolSpecTkgVsphereObservation) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]SpecTkgVsphereVMConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgVsphereObservation.
func (in *Cluster_Node_PoolSpecTkgVsphereObservation) DeepCopy() *Cluster_Node_PoolSpecTkgVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgVsphereParameters) DeepCopyInto(out *Cluster_Node_PoolSpecTkgVsphereParameters) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]SpecTkgVsphereVMConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgVsphereParameters.
func (in *Cluster_Node_PoolSpecTkgVsphereParameters) DeepCopy() *Cluster_Node_PoolSpecTkgVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolStatus) DeepCopyInto(out *Cluster_Node_PoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolStatus.
func (in *Cluster_Node_PoolStatus) DeepCopy() *Cluster_Node_PoolStatus {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.APIServerAccessConfig != nil {
		in, out := &in.APIServerAccessConfig, &out.APIServerAccessConfig
		*out = make([]APIServerAccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddonConfig != nil {
		in, out := &in.AddonConfig, &out.AddonConfig
		*out = make([]AddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoUpgradeConfig != nil {
		in, out := &in.AutoUpgradeConfig, &out.AutoUpgradeConfig
		*out = make([]AutoUpgradeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryptionSet != nil {
		in, out := &in.DiskEncryptionSet, &out.DiskEncryptionSet
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxConfig != nil {
		in, out := &in.LinuxConfig, &out.LinuxConfig
		*out = make([]LinuxConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeResourceGroupName != nil {
		in, out := &in.NodeResourceGroupName, &out.NodeResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.APIServerAccessConfig != nil {
		in, out := &in.APIServerAccessConfig, &out.APIServerAccessConfig
		*out = make([]APIServerAccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddonConfig != nil {
		in, out := &in.AddonConfig, &out.AddonConfig
		*out = make([]AddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoUpgradeConfig != nil {
		in, out := &in.AutoUpgradeConfig, &out.AutoUpgradeConfig
		*out = make([]AutoUpgradeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryptionSet != nil {
		in, out := &in.DiskEncryptionSet, &out.DiskEncryptionSet
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxConfig != nil {
		in, out := &in.LinuxConfig, &out.LinuxConfig
		*out = make([]LinuxConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeResourceGroupName != nil {
		in, out := &in.NodeResourceGroupName, &out.NodeResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneObservation) DeepCopyInto(out *ControlPlaneObservation) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneObservation.
func (in *ControlPlaneObservation) DeepCopy() *ControlPlaneObservation {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneParameters) DeepCopyInto(out *ControlPlaneParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneParameters.
func (in *ControlPlaneParameters) DeepCopy() *ControlPlaneParameters {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionObservation) DeepCopyInto(out *DistributionObservation) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerCredentialName != nil {
		in, out := &in.ProvisionerCredentialName, &out.ProvisionerCredentialName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionObservation.
func (in *DistributionObservation) DeepCopy() *DistributionObservation {
	if in == nil {
		return nil
	}
	out := new(DistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionParameters) DeepCopyInto(out *DistributionParameters) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerCredentialName != nil {
		in, out := &in.ProvisionerCredentialName, &out.ProvisionerCredentialName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionParameters.
func (in *DistributionParameters) DeepCopy() *DistributionParameters {
	if in == nil {
		return nil
	}
	out := new(DistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InfoObservation) DeepCopyInto(out *InfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InfoObservation.
func (in *InfoObservation) DeepCopy() *InfoObservation {
	if in == nil {
		return nil
	}
	out := new(InfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InfoParameters) DeepCopyInto(out *InfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InfoParameters.
func (in *InfoParameters) DeepCopy() *InfoParameters {
	if in == nil {
		return nil
	}
	out := new(InfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxConfigObservation) DeepCopyInto(out *LinuxConfigObservation) {
	*out = *in
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxConfigObservation.
func (in *LinuxConfigObservation) DeepCopy() *LinuxConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxConfigParameters) DeepCopyInto(out *LinuxConfigParameters) {
	*out = *in
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxConfigParameters.
func (in *LinuxConfigParameters) DeepCopy() *LinuxConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaObservation) DeepCopyInto(out *MetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaObservation.
func (in *MetaObservation) DeepCopy() *MetaObservation {
	if in == nil {
		return nil
	}
	out := new(MetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaParameters) DeepCopyInto(out *MetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaParameters.
func (in *MetaParameters) DeepCopy() *MetaParameters {
	if in == nil {
		return nil
	}
	out := new(MetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAddonConfigObservation) DeepCopyInto(out *MonitorAddonConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAddonConfigObservation.
func (in *MonitorAddonConfigObservation) DeepCopy() *MonitorAddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorAddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAddonConfigParameters) DeepCopyInto(out *MonitorAddonConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAddonConfigParameters.
func (in *MonitorAddonConfigParameters) DeepCopy() *MonitorAddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorAddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkClusterObservation) DeepCopyInto(out *NetworkClusterObservation) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]PodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkClusterObservation.
func (in *NetworkClusterObservation) DeepCopy() *NetworkClusterObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkClusterParameters) DeepCopyInto(out *NetworkClusterParameters) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]PodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkClusterParameters.
func (in *NetworkClusterParameters) DeepCopy() *NetworkClusterParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigObservation) DeepCopyInto(out *NetworkConfigObservation) {
	*out = *in
	if in.DNSPrefix != nil {
		in, out := &in.DNSPrefix, &out.DNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.DNSServiceIP != nil {
		in, out := &in.DNSServiceIP, &out.DNSServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigObservation.
func (in *NetworkConfigObservation) DeepCopy() *NetworkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigParameters) DeepCopyInto(out *NetworkConfigParameters) {
	*out = *in
	if in.DNSPrefix != nil {
		in, out := &in.DNSPrefix, &out.DNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.DNSServiceIP != nil {
		in, out := &in.DNSServiceIP, &out.DNSServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigParameters.
func (in *NetworkConfigParameters) DeepCopy() *NetworkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]NetworkClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = make([]ProviderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]NetworkClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = make([]ProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPodsObservation) DeepCopyInto(out *NetworkPodsObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPodsObservation.
func (in *NetworkPodsObservation) DeepCopy() *NetworkPodsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkPodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPodsParameters) DeepCopyInto(out *NetworkPodsParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPodsParameters.
func (in *NetworkPodsParameters) DeepCopy() *NetworkPodsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesObservation) DeepCopyInto(out *NetworkServicesObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesObservation.
func (in *NetworkServicesObservation) DeepCopy() *NetworkServicesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesParameters) DeepCopyInto(out *NetworkServicesParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesParameters.
func (in *NetworkServicesParameters) DeepCopy() *NetworkServicesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePlacementObservation) DeepCopyInto(out *NodePlacementObservation) {
	*out = *in
	if in.AwsAvailabilityZone != nil {
		in, out := &in.AwsAvailabilityZone, &out.AwsAvailabilityZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePlacementObservation.
func (in *NodePlacementObservation) DeepCopy() *NodePlacementObservation {
	if in == nil {
		return nil
	}
	out := new(NodePlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePlacementParameters) DeepCopyInto(out *NodePlacementParameters) {
	*out = *in
	if in.AwsAvailabilityZone != nil {
		in, out := &in.AwsAvailabilityZone, &out.AwsAvailabilityZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePlacementParameters.
func (in *NodePlacementParameters) DeepCopy() *NodePlacementParameters {
	if in == nil {
		return nil
	}
	out := new(NodePlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsInfoObservation) DeepCopyInto(out *NodePoolsInfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsInfoObservation.
func (in *NodePoolsInfoObservation) DeepCopy() *NodePoolsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsInfoParameters) DeepCopyInto(out *NodePoolsInfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsInfoParameters.
func (in *NodePoolsInfoParameters) DeepCopy() *NodePoolsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsObservation) DeepCopyInto(out *NodePoolsObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]InfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodePoolsSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsObservation.
func (in *NodePoolsObservation) DeepCopy() *NodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsParameters) DeepCopyInto(out *NodePoolsParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]InfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodePoolsSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsParameters.
func (in *NodePoolsParameters) DeepCopy() *NodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsSpecObservation) DeepCopyInto(out *NodePoolsSpecObservation) {
	*out = *in
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]SpecTkgAwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsSpecObservation.
func (in *NodePoolsSpecObservation) DeepCopy() *NodePoolsSpecObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsSpecParameters) DeepCopyInto(out *NodePoolsSpecParameters) {
	*out = *in
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]SpecTkgAwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsSpecParameters.
func (in *NodePoolsSpecParameters) DeepCopy() *NodePoolsSpecParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolObservation) DeepCopyInto(out *NodepoolObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodepoolSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolObservation.
func (in *NodepoolObservation) DeepCopy() *NodepoolObservation {
	if in == nil {
		return nil
	}
	out := new(NodepoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolParameters) DeepCopyInto(out *NodepoolParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodepoolSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolParameters.
func (in *NodepoolParameters) DeepCopy() *NodepoolParameters {
	if in == nil {
		return nil
	}
	out := new(NodepoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolSpecObservation) DeepCopyInto(out *NodepoolSpecObservation) {
	*out = *in
	if in.AutoScalingConfig != nil {
		in, out := &in.AutoScalingConfig, &out.AutoScalingConfig
		*out = make([]AutoScalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(string)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpgradeConfig != nil {
		in, out := &in.UpgradeConfig, &out.UpgradeConfig
		*out = make([]UpgradeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolSpecObservation.
func (in *NodepoolSpecObservation) DeepCopy() *NodepoolSpecObservation {
	if in == nil {
		return nil
	}
	out := new(NodepoolSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolSpecParameters) DeepCopyInto(out *NodepoolSpecParameters) {
	*out = *in
	if in.AutoScalingConfig != nil {
		in, out := &in.AutoScalingConfig, &out.AutoScalingConfig
		*out = make([]AutoScalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(string)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpgradeConfig != nil {
		in, out := &in.UpgradeConfig, &out.UpgradeConfig
		*out = make([]UpgradeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolSpecParameters.
func (in *NodepoolSpecParameters) DeepCopy() *NodepoolSpecParameters {
	if in == nil {
		return nil
	}
	out := new(NodepoolSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodsObservation) DeepCopyInto(out *PodsObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodsObservation.
func (in *PodsObservation) DeepCopy() *PodsObservation {
	if in == nil {
		return nil
	}
	out := new(PodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodsParameters) DeepCopyInto(out *PodsParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodsParameters.
func (in *PodsParameters) DeepCopy() *PodsParameters {
	if in == nil {
		return nil
	}
	out := new(PodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderObservation) DeepCopyInto(out *ProviderObservation) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]SubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderObservation.
func (in *ProviderObservation) DeepCopy() *ProviderObservation {
	if in == nil {
		return nil
	}
	out := new(ProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderParameters) DeepCopyInto(out *ProviderParameters) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]SubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderParameters.
func (in *ProviderParameters) DeepCopy() *ProviderParameters {
	if in == nil {
		return nil
	}
	out := new(ProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityObservation) DeepCopyInto(out *SecurityObservation) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityObservation.
func (in *SecurityObservation) DeepCopy() *SecurityObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityParameters) DeepCopyInto(out *SecurityParameters) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityParameters.
func (in *SecurityParameters) DeepCopy() *SecurityParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkObservation) DeepCopyInto(out *SettingsNetworkObservation) {
	*out = *in
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]NetworkPodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]NetworkServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkObservation.
func (in *SettingsNetworkObservation) DeepCopy() *SettingsNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkParameters) DeepCopyInto(out *SettingsNetworkParameters) {
	*out = *in
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]NetworkPodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]NetworkServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkParameters.
func (in *SettingsNetworkParameters) DeepCopy() *SettingsNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkPodsObservation) DeepCopyInto(out *SettingsNetworkPodsObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkPodsObservation.
func (in *SettingsNetworkPodsObservation) DeepCopy() *SettingsNetworkPodsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkPodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkPodsParameters) DeepCopyInto(out *SettingsNetworkPodsParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkPodsParameters.
func (in *SettingsNetworkPodsParameters) DeepCopy() *SettingsNetworkPodsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkPodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkServicesObservation) DeepCopyInto(out *SettingsNetworkServicesObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkServicesObservation.
func (in *SettingsNetworkServicesObservation) DeepCopy() *SettingsNetworkServicesObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkServicesParameters) DeepCopyInto(out *SettingsNetworkServicesParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkServicesParameters.
func (in *SettingsNetworkServicesParameters) DeepCopy() *SettingsNetworkServicesParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityObservation) DeepCopyInto(out *SettingsSecurityObservation) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityObservation.
func (in *SettingsSecurityObservation) DeepCopy() *SettingsSecurityObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityParameters) DeepCopyInto(out *SettingsSecurityParameters) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityParameters.
func (in *SettingsSecurityParameters) DeepCopy() *SettingsSecurityParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuObservation) DeepCopyInto(out *SkuObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuObservation.
func (in *SkuObservation) DeepCopy() *SkuObservation {
	if in == nil {
		return nil
	}
	out := new(SkuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuParameters) DeepCopyInto(out *SkuParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuParameters.
func (in *SkuParameters) DeepCopy() *SkuParameters {
	if in == nil {
		return nil
	}
	out := new(SkuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.AgentName != nil {
		in, out := &in.AgentName, &out.AgentName
		*out = new(string)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodepool != nil {
		in, out := &in.Nodepool, &out.Nodepool
		*out = make([]NodepoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.AgentName != nil {
		in, out := &in.AgentName, &out.AgentName
		*out = new(string)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodepool != nil {
		in, out := &in.Nodepool, &out.Nodepool
		*out = make([]NodepoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgAwsObservation) DeepCopyInto(out *SpecTkgAwsObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.NodePlacement != nil {
		in, out := &in.NodePlacement, &out.NodePlacement
		*out = make([]NodePlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodepoolSubnetID != nil {
		in, out := &in.NodepoolSubnetID, &out.NodepoolSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgAwsObservation.
func (in *SpecTkgAwsObservation) DeepCopy() *SpecTkgAwsObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgAwsParameters) DeepCopyInto(out *SpecTkgAwsParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.NodePlacement != nil {
		in, out := &in.NodePlacement, &out.NodePlacement
		*out = make([]NodePlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgAwsParameters.
func (in *SpecTkgAwsParameters) DeepCopy() *SpecTkgAwsParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereObservation) DeepCopyInto(out *SpecTkgServiceVsphereObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TkgServiceVsphereVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereObservation.
func (in *SpecTkgServiceVsphereObservation) DeepCopy() *SpecTkgServiceVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereParameters) DeepCopyInto(out *SpecTkgServiceVsphereParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TkgServiceVsphereVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereParameters.
func (in *SpecTkgServiceVsphereParameters) DeepCopy() *SpecTkgServiceVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereVolumesObservation) DeepCopyInto(out *SpecTkgServiceVsphereVolumesObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereVolumesObservation.
func (in *SpecTkgServiceVsphereVolumesObservation) DeepCopy() *SpecTkgServiceVsphereVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereVolumesParameters) DeepCopyInto(out *SpecTkgServiceVsphereVolumesParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereVolumesParameters.
func (in *SpecTkgServiceVsphereVolumesParameters) DeepCopy() *SpecTkgServiceVsphereVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereObservation) DeepCopyInto(out *SpecTkgVsphereObservation) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]TkgVsphereVMConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereObservation.
func (in *SpecTkgVsphereObservation) DeepCopy() *SpecTkgVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereParameters) DeepCopyInto(out *SpecTkgVsphereParameters) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]TkgVsphereVMConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereParameters.
func (in *SpecTkgVsphereParameters) DeepCopy() *SpecTkgVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereVMConfigObservation) DeepCopyInto(out *SpecTkgVsphereVMConfigObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereVMConfigObservation.
func (in *SpecTkgVsphereVMConfigObservation) DeepCopy() *SpecTkgVsphereVMConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereVMConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereVMConfigParameters) DeepCopyInto(out *SpecTkgVsphereVMConfigParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereVMConfigParameters.
func (in *SpecTkgVsphereVMConfigParameters) DeepCopy() *SpecTkgVsphereVMConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereVMConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigObservation) DeepCopyInto(out *StorageConfigObservation) {
	*out = *in
	if in.EnableDiskCsiDriver != nil {
		in, out := &in.EnableDiskCsiDriver, &out.EnableDiskCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableFileCsiDriver != nil {
		in, out := &in.EnableFileCsiDriver, &out.EnableFileCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableSnapshotController != nil {
		in, out := &in.EnableSnapshotController, &out.EnableSnapshotController
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigObservation.
func (in *StorageConfigObservation) DeepCopy() *StorageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StorageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigParameters) DeepCopyInto(out *StorageConfigParameters) {
	*out = *in
	if in.EnableDiskCsiDriver != nil {
		in, out := &in.EnableDiskCsiDriver, &out.EnableDiskCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableFileCsiDriver != nil {
		in, out := &in.EnableFileCsiDriver, &out.EnableFileCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableSnapshotController != nil {
		in, out := &in.EnableSnapshotController, &out.EnableSnapshotController
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigParameters.
func (in *StorageConfigParameters) DeepCopy() *StorageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageObservation) DeepCopyInto(out *StorageObservation) {
	*out = *in
	if in.Classes != nil {
		in, out := &in.Classes, &out.Classes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultClass != nil {
		in, out := &in.DefaultClass, &out.DefaultClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageObservation.
func (in *StorageObservation) DeepCopy() *StorageObservation {
	if in == nil {
		return nil
	}
	out := new(StorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageParameters) DeepCopyInto(out *StorageParameters) {
	*out = *in
	if in.Classes != nil {
		in, out := &in.Classes, &out.Classes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultClass != nil {
		in, out := &in.DefaultClass, &out.DefaultClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageParameters.
func (in *StorageParameters) DeepCopy() *StorageParameters {
	if in == nil {
		return nil
	}
	out := new(StorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetsObservation) DeepCopyInto(out *SubnetsObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CidrBlockSubnet != nil {
		in, out := &in.CidrBlockSubnet, &out.CidrBlockSubnet
		*out = new(string)
		**out = **in
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetsObservation.
func (in *SubnetsObservation) DeepCopy() *SubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetsParameters) DeepCopyInto(out *SubnetsParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CidrBlockSubnet != nil {
		in, out := &in.CidrBlockSubnet, &out.CidrBlockSubnet
		*out = new(string)
		**out = **in
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetsParameters.
func (in *SubnetsParameters) DeepCopy() *SubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgAwsObservation) DeepCopyInto(out *TkgAwsObservation) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]AdvancedConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]DistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TopologyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgAwsObservation.
func (in *TkgAwsObservation) DeepCopy() *TkgAwsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgAwsParameters) DeepCopyInto(out *TkgAwsParameters) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]AdvancedConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]DistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TopologyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgAwsParameters.
func (in *TkgAwsParameters) DeepCopy() *TkgAwsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereDistributionObservation) DeepCopyInto(out *TkgServiceVsphereDistributionObservation) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereDistributionObservation.
func (in *TkgServiceVsphereDistributionObservation) DeepCopy() *TkgServiceVsphereDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereDistributionParameters) DeepCopyInto(out *TkgServiceVsphereDistributionParameters) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereDistributionParameters.
func (in *TkgServiceVsphereDistributionParameters) DeepCopy() *TkgServiceVsphereDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereObservation) DeepCopyInto(out *TkgServiceVsphereObservation) {
	*out = *in
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgServiceVsphereDistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgServiceVsphereSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgServiceVsphereTopologyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereObservation.
func (in *TkgServiceVsphereObservation) DeepCopy() *TkgServiceVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereParameters) DeepCopyInto(out *TkgServiceVsphereParameters) {
	*out = *in
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgServiceVsphereDistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgServiceVsphereSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgServiceVsphereTopologyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereParameters.
func (in *TkgServiceVsphereParameters) DeepCopy() *TkgServiceVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereSettingsObservation) DeepCopyInto(out *TkgServiceVsphereSettingsObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SettingsNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereSettingsObservation.
func (in *TkgServiceVsphereSettingsObservation) DeepCopy() *TkgServiceVsphereSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereSettingsParameters) DeepCopyInto(out *TkgServiceVsphereSettingsParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SettingsNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereSettingsParameters.
func (in *TkgServiceVsphereSettingsParameters) DeepCopy() *TkgServiceVsphereSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereTopologyObservation) DeepCopyInto(out *TkgServiceVsphereTopologyObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TopologyControlPlaneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TopologyNodePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereTopologyObservation.
func (in *TkgServiceVsphereTopologyObservation) DeepCopy() *TkgServiceVsphereTopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereTopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereTopologyParameters) DeepCopyInto(out *TkgServiceVsphereTopologyParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TopologyControlPlaneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TopologyNodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereTopologyParameters.
func (in *TkgServiceVsphereTopologyParameters) DeepCopy() *TkgServiceVsphereTopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereTopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereVolumesObservation) DeepCopyInto(out *TkgServiceVsphereVolumesObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereVolumesObservation.
func (in *TkgServiceVsphereVolumesObservation) DeepCopy() *TkgServiceVsphereVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereVolumesParameters) DeepCopyInto(out *TkgServiceVsphereVolumesParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereVolumesParameters.
func (in *TkgServiceVsphereVolumesParameters) DeepCopy() *TkgServiceVsphereVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereAdvancedConfigsObservation) DeepCopyInto(out *TkgVsphereAdvancedConfigsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereAdvancedConfigsObservation.
func (in *TkgVsphereAdvancedConfigsObservation) DeepCopy() *TkgVsphereAdvancedConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereAdvancedConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereAdvancedConfigsParameters) DeepCopyInto(out *TkgVsphereAdvancedConfigsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereAdvancedConfigsParameters.
func (in *TkgVsphereAdvancedConfigsParameters) DeepCopy() *TkgVsphereAdvancedConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereAdvancedConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereDistributionObservation) DeepCopyInto(out *TkgVsphereDistributionObservation) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereDistributionObservation.
func (in *TkgVsphereDistributionObservation) DeepCopy() *TkgVsphereDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereDistributionParameters) DeepCopyInto(out *TkgVsphereDistributionParameters) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereDistributionParameters.
func (in *TkgVsphereDistributionParameters) DeepCopy() *TkgVsphereDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereObservation) DeepCopyInto(out *TkgVsphereObservation) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]TkgVsphereAdvancedConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgVsphereDistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgVsphereSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgVsphereTopologyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereObservation.
func (in *TkgVsphereObservation) DeepCopy() *TkgVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereParameters) DeepCopyInto(out *TkgVsphereParameters) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]TkgVsphereAdvancedConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgVsphereDistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgVsphereSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgVsphereTopologyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereParameters.
func (in *TkgVsphereParameters) DeepCopy() *TkgVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsNetworkObservation) DeepCopyInto(out *TkgVsphereSettingsNetworkObservation) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.ControlPlaneEndPoint != nil {
		in, out := &in.ControlPlaneEndPoint, &out.ControlPlaneEndPoint
		*out = new(string)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]SettingsNetworkPodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]SettingsNetworkServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsNetworkObservation.
func (in *TkgVsphereSettingsNetworkObservation) DeepCopy() *TkgVsphereSettingsNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsNetworkParameters) DeepCopyInto(out *TkgVsphereSettingsNetworkParameters) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.ControlPlaneEndPoint != nil {
		in, out := &in.ControlPlaneEndPoint, &out.ControlPlaneEndPoint
		*out = new(string)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]SettingsNetworkPodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]SettingsNetworkServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsNetworkParameters.
func (in *TkgVsphereSettingsNetworkParameters) DeepCopy() *TkgVsphereSettingsNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsObservation) DeepCopyInto(out *TkgVsphereSettingsObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]TkgVsphereSettingsNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SettingsSecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsObservation.
func (in *TkgVsphereSettingsObservation) DeepCopy() *TkgVsphereSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsParameters) DeepCopyInto(out *TkgVsphereSettingsParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]TkgVsphereSettingsNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SettingsSecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsParameters.
func (in *TkgVsphereSettingsParameters) DeepCopy() *TkgVsphereSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyControlPlaneObservation) DeepCopyInto(out *TkgVsphereTopologyControlPlaneObservation) {
	*out = *in
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]VMConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyControlPlaneObservation.
func (in *TkgVsphereTopologyControlPlaneObservation) DeepCopy() *TkgVsphereTopologyControlPlaneObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyControlPlaneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyControlPlaneParameters) DeepCopyInto(out *TkgVsphereTopologyControlPlaneParameters) {
	*out = *in
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]VMConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyControlPlaneParameters.
func (in *TkgVsphereTopologyControlPlaneParameters) DeepCopy() *TkgVsphereTopologyControlPlaneParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyControlPlaneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsObservation) DeepCopyInto(out *TkgVsphereTopologyNodePoolsObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]TopologyNodePoolsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TkgVsphereTopologyNodePoolsSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsObservation.
func (in *TkgVsphereTopologyNodePoolsObservation) DeepCopy() *TkgVsphereTopologyNodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsParameters) DeepCopyInto(out *TkgVsphereTopologyNodePoolsParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]TopologyNodePoolsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TkgVsphereTopologyNodePoolsSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsParameters.
func (in *TkgVsphereTopologyNodePoolsParameters) DeepCopy() *TkgVsphereTopologyNodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsSpecObservation) DeepCopyInto(out *TkgVsphereTopologyNodePoolsSpecObservation) {
	*out = *in
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]SpecTkgVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsSpecObservation.
func (in *TkgVsphereTopologyNodePoolsSpecObservation) DeepCopy() *TkgVsphereTopologyNodePoolsSpecObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsSpecParameters) DeepCopyInto(out *TkgVsphereTopologyNodePoolsSpecParameters) {
	*out = *in
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]SpecTkgVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsSpecParameters.
func (in *TkgVsphereTopologyNodePoolsSpecParameters) DeepCopy() *TkgVsphereTopologyNodePoolsSpecParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyObservation) DeepCopyInto(out *TkgVsphereTopologyObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TkgVsphereTopologyControlPlaneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TkgVsphereTopologyNodePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyObservation.
func (in *TkgVsphereTopologyObservation) DeepCopy() *TkgVsphereTopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyParameters) DeepCopyInto(out *TkgVsphereTopologyParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TkgVsphereTopologyControlPlaneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TkgVsphereTopologyNodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyParameters.
func (in *TkgVsphereTopologyParameters) DeepCopy() *TkgVsphereTopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereVMConfigObservation) DeepCopyInto(out *TkgVsphereVMConfigObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereVMConfigObservation.
func (in *TkgVsphereVMConfigObservation) DeepCopy() *TkgVsphereVMConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereVMConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereVMConfigParameters) DeepCopyInto(out *TkgVsphereVMConfigParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereVMConfigParameters.
func (in *TkgVsphereVMConfigParameters) DeepCopy() *TkgVsphereVMConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereVMConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyControlPlaneObservation) DeepCopyInto(out *TopologyControlPlaneObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyControlPlaneObservation.
func (in *TopologyControlPlaneObservation) DeepCopy() *TopologyControlPlaneObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyControlPlaneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyControlPlaneParameters) DeepCopyInto(out *TopologyControlPlaneParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyControlPlaneParameters.
func (in *TopologyControlPlaneParameters) DeepCopy() *TopologyControlPlaneParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyControlPlaneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsInfoObservation) DeepCopyInto(out *TopologyNodePoolsInfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsInfoObservation.
func (in *TopologyNodePoolsInfoObservation) DeepCopy() *TopologyNodePoolsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsInfoParameters) DeepCopyInto(out *TopologyNodePoolsInfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsInfoParameters.
func (in *TopologyNodePoolsInfoParameters) DeepCopy() *TopologyNodePoolsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsObservation) DeepCopyInto(out *TopologyNodePoolsObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]NodePoolsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TopologyNodePoolsSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsObservation.
func (in *TopologyNodePoolsObservation) DeepCopy() *TopologyNodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsParameters) DeepCopyInto(out *TopologyNodePoolsParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]NodePoolsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TopologyNodePoolsSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsParameters.
func (in *TopologyNodePoolsParameters) DeepCopy() *TopologyNodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsSpecObservation) DeepCopyInto(out *TopologyNodePoolsSpecObservation) {
	*out = *in
	if in.CloudLabel != nil {
		in, out := &in.CloudLabel, &out.CloudLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabel != nil {
		in, out := &in.NodeLabel, &out.NodeLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]SpecTkgServiceVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsSpecObservation.
func (in *TopologyNodePoolsSpecObservation) DeepCopy() *TopologyNodePoolsSpecObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsSpecParameters) DeepCopyInto(out *TopologyNodePoolsSpecParameters) {
	*out = *in
	if in.CloudLabel != nil {
		in, out := &in.CloudLabel, &out.CloudLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabel != nil {
		in, out := &in.NodeLabel, &out.NodeLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]SpecTkgServiceVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsSpecParameters.
func (in *TopologyNodePoolsSpecParameters) DeepCopy() *TopologyNodePoolsSpecParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyObservation) DeepCopyInto(out *TopologyObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]ControlPlaneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]NodePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyObservation.
func (in *TopologyObservation) DeepCopy() *TopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyParameters) DeepCopyInto(out *TopologyParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]ControlPlaneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]NodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyParameters.
func (in *TopologyParameters) DeepCopy() *TopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeConfigObservation) DeepCopyInto(out *UpgradeConfigObservation) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeConfigObservation.
func (in *UpgradeConfigObservation) DeepCopy() *UpgradeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeConfigParameters) DeepCopyInto(out *UpgradeConfigParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeConfigParameters.
func (in *UpgradeConfigParameters) DeepCopy() *UpgradeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMConfigObservation) DeepCopyInto(out *VMConfigObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMConfigObservation.
func (in *VMConfigObservation) DeepCopy() *VMConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VMConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMConfigParameters) DeepCopyInto(out *VMConfigParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMConfigParameters.
func (in *VMConfigParameters) DeepCopy() *VMConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VMConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCObservation) DeepCopyInto(out *VPCObservation) {
	*out = *in
	if in.CidrBlockVPC != nil {
		in, out := &in.CidrBlockVPC, &out.CidrBlockVPC
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCObservation.
func (in *VPCObservation) DeepCopy() *VPCObservation {
	if in == nil {
		return nil
	}
	out := new(VPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCParameters) DeepCopyInto(out *VPCParameters) {
	*out = *in
	if in.CidrBlockVPC != nil {
		in, out := &in.CidrBlockVPC, &out.CidrBlockVPC
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCParameters.
func (in *VPCParameters) DeepCopy() *VPCParameters {
	if in == nil {
		return nil
	}
	out := new(VPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceNetwork != nil {
		in, out := &in.WorkspaceNetwork, &out.WorkspaceNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceNetwork != nil {
		in, out := &in.WorkspaceNetwork, &out.WorkspaceNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}
