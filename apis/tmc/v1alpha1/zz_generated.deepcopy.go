//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIInfoObservation) DeepCopyInto(out *AMIInfoObservation) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.OverrideBootstrapCmd != nil {
		in, out := &in.OverrideBootstrapCmd, &out.OverrideBootstrapCmd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIInfoObservation.
func (in *AMIInfoObservation) DeepCopy() *AMIInfoObservation {
	if in == nil {
		return nil
	}
	out := new(AMIInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIInfoParameters) DeepCopyInto(out *AMIInfoParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.OverrideBootstrapCmd != nil {
		in, out := &in.OverrideBootstrapCmd, &out.OverrideBootstrapCmd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIInfoParameters.
func (in *AMIInfoParameters) DeepCopy() *AMIInfoParameters {
	if in == nil {
		return nil
	}
	out := new(AMIInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIServerAccessConfigObservation) DeepCopyInto(out *APIServerAccessConfigObservation) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIServerAccessConfigObservation.
func (in *APIServerAccessConfigObservation) DeepCopy() *APIServerAccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(APIServerAccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIServerAccessConfigParameters) DeepCopyInto(out *APIServerAccessConfigParameters) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIServerAccessConfigParameters.
func (in *APIServerAccessConfigParameters) DeepCopy() *APIServerAccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(APIServerAccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadConfigObservation) DeepCopyInto(out *AadConfigObservation) {
	*out = *in
	if in.AdminGroupIds != nil {
		in, out := &in.AdminGroupIds, &out.AdminGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableAzureRbac != nil {
		in, out := &in.EnableAzureRbac, &out.EnableAzureRbac
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadConfigObservation.
func (in *AadConfigObservation) DeepCopy() *AadConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AadConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadConfigParameters) DeepCopyInto(out *AadConfigParameters) {
	*out = *in
	if in.AdminGroupIds != nil {
		in, out := &in.AdminGroupIds, &out.AdminGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableAzureRbac != nil {
		in, out := &in.EnableAzureRbac, &out.EnableAzureRbac
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadConfigParameters.
func (in *AadConfigParameters) DeepCopy() *AadConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AadConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigObservation) DeepCopyInto(out *AccessConfigObservation) {
	*out = *in
	if in.AadConfig != nil {
		in, out := &in.AadConfig, &out.AadConfig
		*out = make([]AadConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.EnableRbac != nil {
		in, out := &in.EnableRbac, &out.EnableRbac
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigObservation.
func (in *AccessConfigObservation) DeepCopy() *AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigParameters) DeepCopyInto(out *AccessConfigParameters) {
	*out = *in
	if in.AadConfig != nil {
		in, out := &in.AadConfig, &out.AadConfig
		*out = make([]AadConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.EnableRbac != nil {
		in, out := &in.EnableRbac, &out.EnableRbac
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigParameters.
func (in *AccessConfigParameters) DeepCopy() *AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonConfigObservation) DeepCopyInto(out *AddonConfigObservation) {
	*out = *in
	if in.AzureKeyvaultSecretsProviderAddonConfig != nil {
		in, out := &in.AzureKeyvaultSecretsProviderAddonConfig, &out.AzureKeyvaultSecretsProviderAddonConfig
		*out = make([]AzureKeyvaultSecretsProviderAddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzurePolicyAddonConfig != nil {
		in, out := &in.AzurePolicyAddonConfig, &out.AzurePolicyAddonConfig
		*out = make([]AzurePolicyAddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAddonConfig != nil {
		in, out := &in.MonitorAddonConfig, &out.MonitorAddonConfig
		*out = make([]MonitorAddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonConfigObservation.
func (in *AddonConfigObservation) DeepCopy() *AddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonConfigParameters) DeepCopyInto(out *AddonConfigParameters) {
	*out = *in
	if in.AzureKeyvaultSecretsProviderAddonConfig != nil {
		in, out := &in.AzureKeyvaultSecretsProviderAddonConfig, &out.AzureKeyvaultSecretsProviderAddonConfig
		*out = make([]AzureKeyvaultSecretsProviderAddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzurePolicyAddonConfig != nil {
		in, out := &in.AzurePolicyAddonConfig, &out.AzurePolicyAddonConfig
		*out = make([]AzurePolicyAddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAddonConfig != nil {
		in, out := &in.MonitorAddonConfig, &out.MonitorAddonConfig
		*out = make([]MonitorAddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonConfigParameters.
func (in *AddonConfigParameters) DeepCopy() *AddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigsObservation) DeepCopyInto(out *AdvancedConfigsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigsObservation.
func (in *AdvancedConfigsObservation) DeepCopy() *AdvancedConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigsParameters) DeepCopyInto(out *AdvancedConfigsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigsParameters.
func (in *AdvancedConfigsParameters) DeepCopy() *AdvancedConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksCluster) DeepCopyInto(out *AksCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksCluster.
func (in *AksCluster) DeepCopy() *AksCluster {
	if in == nil {
		return nil
	}
	out := new(AksCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterList) DeepCopyInto(out *AksClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AksCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterList.
func (in *AksClusterList) DeepCopy() *AksClusterList {
	if in == nil {
		return nil
	}
	out := new(AksClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterObservation) DeepCopyInto(out *AksClusterObservation) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterObservation.
func (in *AksClusterObservation) DeepCopy() *AksClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AksClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterParameters) DeepCopyInto(out *AksClusterParameters) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterParameters.
func (in *AksClusterParameters) DeepCopy() *AksClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AksClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterSpec) DeepCopyInto(out *AksClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterSpec.
func (in *AksClusterSpec) DeepCopy() *AksClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AksClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterStatus) DeepCopyInto(out *AksClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterStatus.
func (in *AksClusterStatus) DeepCopy() *AksClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AksClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAllEgressObservation) DeepCopyInto(out *AllowAllEgressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAllEgressObservation.
func (in *AllowAllEgressObservation) DeepCopy() *AllowAllEgressObservation {
	if in == nil {
		return nil
	}
	out := new(AllowAllEgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAllEgressParameters) DeepCopyInto(out *AllowAllEgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAllEgressParameters.
func (in *AllowAllEgressParameters) DeepCopy() *AllowAllEgressParameters {
	if in == nil {
		return nil
	}
	out := new(AllowAllEgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAllObservation) DeepCopyInto(out *AllowAllObservation) {
	*out = *in
	if in.FromOwnNamespace != nil {
		in, out := &in.FromOwnNamespace, &out.FromOwnNamespace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAllObservation.
func (in *AllowAllObservation) DeepCopy() *AllowAllObservation {
	if in == nil {
		return nil
	}
	out := new(AllowAllObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAllParameters) DeepCopyInto(out *AllowAllParameters) {
	*out = *in
	if in.FromOwnNamespace != nil {
		in, out := &in.FromOwnNamespace, &out.FromOwnNamespace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAllParameters.
func (in *AllowAllParameters) DeepCopy() *AllowAllParameters {
	if in == nil {
		return nil
	}
	out := new(AllowAllParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAllToPodsObservation) DeepCopyInto(out *AllowAllToPodsObservation) {
	*out = *in
	if in.FromOwnNamespace != nil {
		in, out := &in.FromOwnNamespace, &out.FromOwnNamespace
		*out = new(bool)
		**out = **in
	}
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAllToPodsObservation.
func (in *AllowAllToPodsObservation) DeepCopy() *AllowAllToPodsObservation {
	if in == nil {
		return nil
	}
	out := new(AllowAllToPodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAllToPodsParameters) DeepCopyInto(out *AllowAllToPodsParameters) {
	*out = *in
	if in.FromOwnNamespace != nil {
		in, out := &in.FromOwnNamespace, &out.FromOwnNamespace
		*out = new(bool)
		**out = **in
	}
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAllToPodsParameters.
func (in *AllowAllToPodsParameters) DeepCopy() *AllowAllToPodsParameters {
	if in == nil {
		return nil
	}
	out := new(AllowAllToPodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedHostPathsObservation) DeepCopyInto(out *AllowedHostPathsObservation) {
	*out = *in
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedHostPathsObservation.
func (in *AllowedHostPathsObservation) DeepCopy() *AllowedHostPathsObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedHostPathsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedHostPathsParameters) DeepCopyInto(out *AllowedHostPathsParameters) {
	*out = *in
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedHostPathsParameters.
func (in *AllowedHostPathsParameters) DeepCopy() *AllowedHostPathsParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedHostPathsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedHostPortRangeObservation) DeepCopyInto(out *AllowedHostPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedHostPortRangeObservation.
func (in *AllowedHostPortRangeObservation) DeepCopy() *AllowedHostPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedHostPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedHostPortRangeParameters) DeepCopyInto(out *AllowedHostPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedHostPortRangeParameters.
func (in *AllowedHostPortRangeParameters) DeepCopy() *AllowedHostPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedHostPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedNameTagObservation) DeepCopyInto(out *AllowedNameTagObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedNameTagObservation.
func (in *AllowedNameTagObservation) DeepCopy() *AllowedNameTagObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedNameTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedNameTagParameters) DeepCopyInto(out *AllowedNameTagParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedNameTagParameters.
func (in *AllowedNameTagParameters) DeepCopy() *AllowedNameTagParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedNameTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedSeLinuxOptionsObservation) DeepCopyInto(out *AllowedSeLinuxOptionsObservation) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedSeLinuxOptionsObservation.
func (in *AllowedSeLinuxOptionsObservation) DeepCopy() *AllowedSeLinuxOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedSeLinuxOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedSeLinuxOptionsParameters) DeepCopyInto(out *AllowedSeLinuxOptionsParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedSeLinuxOptionsParameters.
func (in *AllowedSeLinuxOptionsParameters) DeepCopy() *AllowedSeLinuxOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedSeLinuxOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachK8SClusterObservation) DeepCopyInto(out *AttachK8SClusterObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KubeconfigFile != nil {
		in, out := &in.KubeconfigFile, &out.KubeconfigFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachK8SClusterObservation.
func (in *AttachK8SClusterObservation) DeepCopy() *AttachK8SClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AttachK8SClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachK8SClusterParameters) DeepCopyInto(out *AttachK8SClusterParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KubeconfigFile != nil {
		in, out := &in.KubeconfigFile, &out.KubeconfigFile
		*out = new(string)
		**out = **in
	}
	if in.KubeconfigRawSecretRef != nil {
		in, out := &in.KubeconfigRawSecretRef, &out.KubeconfigRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachK8SClusterParameters.
func (in *AttachK8SClusterParameters) DeepCopy() *AttachK8SClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AttachK8SClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingConfigObservation) DeepCopyInto(out *AutoScalingConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingConfigObservation.
func (in *AutoScalingConfigObservation) DeepCopy() *AutoScalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingConfigParameters) DeepCopyInto(out *AutoScalingConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingConfigParameters.
func (in *AutoScalingConfigParameters) DeepCopy() *AutoScalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoUpgradeConfigObservation) DeepCopyInto(out *AutoUpgradeConfigObservation) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoUpgradeConfigObservation.
func (in *AutoUpgradeConfigObservation) DeepCopy() *AutoUpgradeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoUpgradeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoUpgradeConfigParameters) DeepCopyInto(out *AutoUpgradeConfigParameters) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoUpgradeConfigParameters.
func (in *AutoUpgradeConfigParameters) DeepCopy() *AutoUpgradeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoUpgradeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCredentialObservation) DeepCopyInto(out *AwsCredentialObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.GenericCredential != nil {
		in, out := &in.GenericCredential, &out.GenericCredential
		*out = new(string)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = make([]IAMRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCredentialObservation.
func (in *AwsCredentialObservation) DeepCopy() *AwsCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCredentialParameters) DeepCopyInto(out *AwsCredentialParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.GenericCredential != nil {
		in, out := &in.GenericCredential, &out.GenericCredential
		*out = new(string)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = make([]IAMRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCredentialParameters.
func (in *AwsCredentialParameters) DeepCopy() *AwsCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureKeyvaultSecretsProviderAddonConfigObservation) DeepCopyInto(out *AzureKeyvaultSecretsProviderAddonConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecretRotation != nil {
		in, out := &in.EnableSecretRotation, &out.EnableSecretRotation
		*out = new(bool)
		**out = **in
	}
	if in.RotationPollInterval != nil {
		in, out := &in.RotationPollInterval, &out.RotationPollInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureKeyvaultSecretsProviderAddonConfigObservation.
func (in *AzureKeyvaultSecretsProviderAddonConfigObservation) DeepCopy() *AzureKeyvaultSecretsProviderAddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureKeyvaultSecretsProviderAddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureKeyvaultSecretsProviderAddonConfigParameters) DeepCopyInto(out *AzureKeyvaultSecretsProviderAddonConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecretRotation != nil {
		in, out := &in.EnableSecretRotation, &out.EnableSecretRotation
		*out = new(bool)
		**out = **in
	}
	if in.RotationPollInterval != nil {
		in, out := &in.RotationPollInterval, &out.RotationPollInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureKeyvaultSecretsProviderAddonConfigParameters.
func (in *AzureKeyvaultSecretsProviderAddonConfigParameters) DeepCopy() *AzureKeyvaultSecretsProviderAddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureKeyvaultSecretsProviderAddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePolicyAddonConfigObservation) DeepCopyInto(out *AzurePolicyAddonConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePolicyAddonConfigObservation.
func (in *AzurePolicyAddonConfigObservation) DeepCopy() *AzurePolicyAddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzurePolicyAddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePolicyAddonConfigParameters) DeepCopyInto(out *AzurePolicyAddonConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePolicyAddonConfigParameters.
func (in *AzurePolicyAddonConfigParameters) DeepCopy() *AzurePolicyAddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzurePolicyAddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineObservation) DeepCopyInto(out *BaselineObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.DisableNativePsp != nil {
		in, out := &in.DisableNativePsp, &out.DisableNativePsp
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineObservation.
func (in *BaselineObservation) DeepCopy() *BaselineObservation {
	if in == nil {
		return nil
	}
	out := new(BaselineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineParameters) DeepCopyInto(out *BaselineParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.DisableNativePsp != nil {
		in, out := &in.DisableNativePsp, &out.DisableNativePsp
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineParameters.
func (in *BaselineParameters) DeepCopy() *BaselineParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockLatestTagObservation) DeepCopyInto(out *BlockLatestTagObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockLatestTagObservation.
func (in *BlockLatestTagObservation) DeepCopy() *BlockLatestTagObservation {
	if in == nil {
		return nil
	}
	out := new(BlockLatestTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockLatestTagParameters) DeepCopyInto(out *BlockLatestTagParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockLatestTagParameters.
func (in *BlockLatestTagParameters) DeepCopy() *BlockLatestTagParameters {
	if in == nil {
		return nil
	}
	out := new(BlockLatestTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupObservation) DeepCopyInto(out *ClusterGroupObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupObservation.
func (in *ClusterGroupObservation) DeepCopy() *ClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupParameters) DeepCopyInto(out *ClusterGroupParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupParameters.
func (in *ClusterGroupParameters) DeepCopy() *ClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMetaObservation) DeepCopyInto(out *ClusterMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMetaObservation.
func (in *ClusterMetaObservation) DeepCopy() *ClusterMetaObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMetaParameters) DeepCopyInto(out *ClusterMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMetaParameters.
func (in *ClusterMetaParameters) DeepCopy() *ClusterMetaParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.AttachK8SCluster != nil {
		in, out := &in.AttachK8SCluster, &out.AttachK8SCluster
		*out = make([]AttachK8SClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]ClusterMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]ClusterSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AttachK8SCluster != nil {
		in, out := &in.AttachK8SCluster, &out.AttachK8SCluster
		*out = make([]AttachK8SClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]ClusterMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]ClusterSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecObservation) DeepCopyInto(out *ClusterSpecObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.ImageRegistry != nil {
		in, out := &in.ImageRegistry, &out.ImageRegistry
		*out = new(string)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]TkgAwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]TkgServiceVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]TkgVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecObservation.
func (in *ClusterSpecObservation) DeepCopy() *ClusterSpecObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecParameters) DeepCopyInto(out *ClusterSpecParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.ImageRegistry != nil {
		in, out := &in.ImageRegistry, &out.ImageRegistry
		*out = new(string)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]TkgAwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]TkgServiceVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]TkgVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecParameters.
func (in *ClusterSpecParameters) DeepCopy() *ClusterSpecParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Group) DeepCopyInto(out *Cluster_Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Group.
func (in *Cluster_Group) DeepCopy() *Cluster_Group {
	if in == nil {
		return nil
	}
	out := new(Cluster_Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupList) DeepCopyInto(out *Cluster_GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster_Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupList.
func (in *Cluster_GroupList) DeepCopy() *Cluster_GroupList {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupMetaObservation) DeepCopyInto(out *Cluster_GroupMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupMetaObservation.
func (in *Cluster_GroupMetaObservation) DeepCopy() *Cluster_GroupMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupMetaParameters) DeepCopyInto(out *Cluster_GroupMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupMetaParameters.
func (in *Cluster_GroupMetaParameters) DeepCopy() *Cluster_GroupMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupObservation) DeepCopyInto(out *Cluster_GroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_GroupMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupObservation.
func (in *Cluster_GroupObservation) DeepCopy() *Cluster_GroupObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupParameters) DeepCopyInto(out *Cluster_GroupParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_GroupMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupParameters.
func (in *Cluster_GroupParameters) DeepCopy() *Cluster_GroupParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupSpec) DeepCopyInto(out *Cluster_GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupSpec.
func (in *Cluster_GroupSpec) DeepCopy() *Cluster_GroupSpec {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_GroupStatus) DeepCopyInto(out *Cluster_GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_GroupStatus.
func (in *Cluster_GroupStatus) DeepCopy() *Cluster_GroupStatus {
	if in == nil {
		return nil
	}
	out := new(Cluster_GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_Pool) DeepCopyInto(out *Cluster_Node_Pool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_Pool.
func (in *Cluster_Node_Pool) DeepCopy() *Cluster_Node_Pool {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_Pool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_Node_Pool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolList) DeepCopyInto(out *Cluster_Node_PoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster_Node_Pool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolList.
func (in *Cluster_Node_PoolList) DeepCopy() *Cluster_Node_PoolList {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster_Node_PoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolMetaObservation) DeepCopyInto(out *Cluster_Node_PoolMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolMetaObservation.
func (in *Cluster_Node_PoolMetaObservation) DeepCopy() *Cluster_Node_PoolMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolMetaParameters) DeepCopyInto(out *Cluster_Node_PoolMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolMetaParameters.
func (in *Cluster_Node_PoolMetaParameters) DeepCopy() *Cluster_Node_PoolMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolObservation) DeepCopyInto(out *Cluster_Node_PoolObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_Node_PoolMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Cluster_Node_PoolSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolObservation.
func (in *Cluster_Node_PoolObservation) DeepCopy() *Cluster_Node_PoolObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolParameters) DeepCopyInto(out *Cluster_Node_PoolParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Cluster_Node_PoolMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Cluster_Node_PoolSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolParameters.
func (in *Cluster_Node_PoolParameters) DeepCopy() *Cluster_Node_PoolParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpec) DeepCopyInto(out *Cluster_Node_PoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpec.
func (in *Cluster_Node_PoolSpec) DeepCopy() *Cluster_Node_PoolSpec {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecObservation) DeepCopyInto(out *Cluster_Node_PoolSpecObservation) {
	*out = *in
	if in.CloudLabels != nil {
		in, out := &in.CloudLabels, &out.CloudLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]Cluster_Node_PoolSpecTkgAwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]Cluster_Node_PoolSpecTkgServiceVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]Cluster_Node_PoolSpecTkgVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecObservation.
func (in *Cluster_Node_PoolSpecObservation) DeepCopy() *Cluster_Node_PoolSpecObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecParameters) DeepCopyInto(out *Cluster_Node_PoolSpecParameters) {
	*out = *in
	if in.CloudLabels != nil {
		in, out := &in.CloudLabels, &out.CloudLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]Cluster_Node_PoolSpecTkgAwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]Cluster_Node_PoolSpecTkgServiceVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]Cluster_Node_PoolSpecTkgVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecParameters.
func (in *Cluster_Node_PoolSpecParameters) DeepCopy() *Cluster_Node_PoolSpecParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgAwsObservation) DeepCopyInto(out *Cluster_Node_PoolSpecTkgAwsObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgAwsObservation.
func (in *Cluster_Node_PoolSpecTkgAwsObservation) DeepCopy() *Cluster_Node_PoolSpecTkgAwsObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgAwsParameters) DeepCopyInto(out *Cluster_Node_PoolSpecTkgAwsParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgAwsParameters.
func (in *Cluster_Node_PoolSpecTkgAwsParameters) DeepCopy() *Cluster_Node_PoolSpecTkgAwsParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereObservation) DeepCopyInto(out *Cluster_Node_PoolSpecTkgServiceVsphereObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]SpecTkgServiceVsphereVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgServiceVsphereObservation.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereObservation) DeepCopy() *Cluster_Node_PoolSpecTkgServiceVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgServiceVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereParameters) DeepCopyInto(out *Cluster_Node_PoolSpecTkgServiceVsphereParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]SpecTkgServiceVsphereVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgServiceVsphereParameters.
func (in *Cluster_Node_PoolSpecTkgServiceVsphereParameters) DeepCopy() *Cluster_Node_PoolSpecTkgServiceVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgServiceVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgVsphereObservation) DeepCopyInto(out *Cluster_Node_PoolSpecTkgVsphereObservation) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]SpecTkgVsphereVMConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgVsphereObservation.
func (in *Cluster_Node_PoolSpecTkgVsphereObservation) DeepCopy() *Cluster_Node_PoolSpecTkgVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolSpecTkgVsphereParameters) DeepCopyInto(out *Cluster_Node_PoolSpecTkgVsphereParameters) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]SpecTkgVsphereVMConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolSpecTkgVsphereParameters.
func (in *Cluster_Node_PoolSpecTkgVsphereParameters) DeepCopy() *Cluster_Node_PoolSpecTkgVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolSpecTkgVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Node_PoolStatus) DeepCopyInto(out *Cluster_Node_PoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Node_PoolStatus.
func (in *Cluster_Node_PoolStatus) DeepCopy() *Cluster_Node_PoolStatus {
	if in == nil {
		return nil
	}
	out := new(Cluster_Node_PoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.APIServerAccessConfig != nil {
		in, out := &in.APIServerAccessConfig, &out.APIServerAccessConfig
		*out = make([]APIServerAccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddonConfig != nil {
		in, out := &in.AddonConfig, &out.AddonConfig
		*out = make([]AddonConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoUpgradeConfig != nil {
		in, out := &in.AutoUpgradeConfig, &out.AutoUpgradeConfig
		*out = make([]AutoUpgradeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryptionSet != nil {
		in, out := &in.DiskEncryptionSet, &out.DiskEncryptionSet
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxConfig != nil {
		in, out := &in.LinuxConfig, &out.LinuxConfig
		*out = make([]LinuxConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeResourceGroupName != nil {
		in, out := &in.NodeResourceGroupName, &out.NodeResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.APIServerAccessConfig != nil {
		in, out := &in.APIServerAccessConfig, &out.APIServerAccessConfig
		*out = make([]APIServerAccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddonConfig != nil {
		in, out := &in.AddonConfig, &out.AddonConfig
		*out = make([]AddonConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoUpgradeConfig != nil {
		in, out := &in.AutoUpgradeConfig, &out.AutoUpgradeConfig
		*out = make([]AutoUpgradeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryptionSet != nil {
		in, out := &in.DiskEncryptionSet, &out.DiskEncryptionSet
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxConfig != nil {
		in, out := &in.LinuxConfig, &out.LinuxConfig
		*out = make([]LinuxConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeResourceGroupName != nil {
		in, out := &in.NodeResourceGroupName, &out.NodeResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigVPCObservation) DeepCopyInto(out *ConfigVPCObservation) {
	*out = *in
	if in.EnablePrivateAccess != nil {
		in, out := &in.EnablePrivateAccess, &out.EnablePrivateAccess
		*out = new(bool)
		**out = **in
	}
	if in.EnablePublicAccess != nil {
		in, out := &in.EnablePublicAccess, &out.EnablePublicAccess
		*out = new(bool)
		**out = **in
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigVPCObservation.
func (in *ConfigVPCObservation) DeepCopy() *ConfigVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigVPCParameters) DeepCopyInto(out *ConfigVPCParameters) {
	*out = *in
	if in.EnablePrivateAccess != nil {
		in, out := &in.EnablePrivateAccess, &out.EnablePrivateAccess
		*out = new(bool)
		**out = **in
	}
	if in.EnablePublicAccess != nil {
		in, out := &in.EnablePublicAccess, &out.EnablePublicAccess
		*out = new(bool)
		**out = **in
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigVPCParameters.
func (in *ConfigVPCParameters) DeepCopy() *ConfigVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneObservation) DeepCopyInto(out *ControlPlaneObservation) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneObservation.
func (in *ControlPlaneObservation) DeepCopy() *ControlPlaneObservation {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneParameters) DeepCopyInto(out *ControlPlaneParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneParameters.
func (in *ControlPlaneParameters) DeepCopy() *ControlPlaneParameters {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Credential) DeepCopyInto(out *Credential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Credential.
func (in *Credential) DeepCopy() *Credential {
	if in == nil {
		return nil
	}
	out := new(Credential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Credential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialList) DeepCopyInto(out *CredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Credential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialList.
func (in *CredentialList) DeepCopy() *CredentialList {
	if in == nil {
		return nil
	}
	out := new(CredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialMetaObservation) DeepCopyInto(out *CredentialMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialMetaObservation.
func (in *CredentialMetaObservation) DeepCopy() *CredentialMetaObservation {
	if in == nil {
		return nil
	}
	out := new(CredentialMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialMetaParameters) DeepCopyInto(out *CredentialMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialMetaParameters.
func (in *CredentialMetaParameters) DeepCopy() *CredentialMetaParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialObservation) DeepCopyInto(out *CredentialObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]CredentialMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]CredentialSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialObservation.
func (in *CredentialObservation) DeepCopy() *CredentialObservation {
	if in == nil {
		return nil
	}
	out := new(CredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialParameters) DeepCopyInto(out *CredentialParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]CredentialMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]CredentialSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialParameters.
func (in *CredentialParameters) DeepCopy() *CredentialParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialSpec) DeepCopyInto(out *CredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialSpec.
func (in *CredentialSpec) DeepCopy() *CredentialSpec {
	if in == nil {
		return nil
	}
	out := new(CredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialSpecObservation) DeepCopyInto(out *CredentialSpecObservation) {
	*out = *in
	if in.Capability != nil {
		in, out := &in.Capability, &out.Capability
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]DataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialSpecObservation.
func (in *CredentialSpecObservation) DeepCopy() *CredentialSpecObservation {
	if in == nil {
		return nil
	}
	out := new(CredentialSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialSpecParameters) DeepCopyInto(out *CredentialSpecParameters) {
	*out = *in
	if in.Capability != nil {
		in, out := &in.Capability, &out.Capability
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]DataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialSpecParameters.
func (in *CredentialSpecParameters) DeepCopy() *CredentialSpecParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialStatus) DeepCopyInto(out *CredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialStatus.
func (in *CredentialStatus) DeepCopy() *CredentialStatus {
	if in == nil {
		return nil
	}
	out := new(CredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEgressObservation) DeepCopyInto(out *CustomEgressObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]CustomEgressRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEgressObservation.
func (in *CustomEgressObservation) DeepCopy() *CustomEgressObservation {
	if in == nil {
		return nil
	}
	out := new(CustomEgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEgressParameters) DeepCopyInto(out *CustomEgressParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]CustomEgressRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEgressParameters.
func (in *CustomEgressParameters) DeepCopy() *CustomEgressParameters {
	if in == nil {
		return nil
	}
	out := new(CustomEgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEgressRulesObservation) DeepCopyInto(out *CustomEgressRulesObservation) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]PortsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleSpec != nil {
		in, out := &in.RuleSpec, &out.RuleSpec
		*out = make([]RuleSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEgressRulesObservation.
func (in *CustomEgressRulesObservation) DeepCopy() *CustomEgressRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CustomEgressRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomEgressRulesParameters) DeepCopyInto(out *CustomEgressRulesParameters) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]PortsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleSpec != nil {
		in, out := &in.RuleSpec, &out.RuleSpec
		*out = make([]RuleSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomEgressRulesParameters.
func (in *CustomEgressRulesParameters) DeepCopy() *CustomEgressRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CustomEgressRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIPIPBlockObservation) DeepCopyInto(out *CustomIPIPBlockObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIPIPBlockObservation.
func (in *CustomIPIPBlockObservation) DeepCopy() *CustomIPIPBlockObservation {
	if in == nil {
		return nil
	}
	out := new(CustomIPIPBlockObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIPIPBlockParameters) DeepCopyInto(out *CustomIPIPBlockParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIPIPBlockParameters.
func (in *CustomIPIPBlockParameters) DeepCopy() *CustomIPIPBlockParameters {
	if in == nil {
		return nil
	}
	out := new(CustomIPIPBlockParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIPObservation) DeepCopyInto(out *CustomIPObservation) {
	*out = *in
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = make([]IPBlockObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIPObservation.
func (in *CustomIPObservation) DeepCopy() *CustomIPObservation {
	if in == nil {
		return nil
	}
	out := new(CustomIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIPParameters) DeepCopyInto(out *CustomIPParameters) {
	*out = *in
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = make([]IPBlockParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIPParameters.
func (in *CustomIPParameters) DeepCopy() *CustomIPParameters {
	if in == nil {
		return nil
	}
	out := new(CustomIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIngressObservation) DeepCopyInto(out *CustomIngressObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]CustomIngressRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIngressObservation.
func (in *CustomIngressObservation) DeepCopy() *CustomIngressObservation {
	if in == nil {
		return nil
	}
	out := new(CustomIngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIngressParameters) DeepCopyInto(out *CustomIngressParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]CustomIngressRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIngressParameters.
func (in *CustomIngressParameters) DeepCopy() *CustomIngressParameters {
	if in == nil {
		return nil
	}
	out := new(CustomIngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIngressRulesObservation) DeepCopyInto(out *CustomIngressRulesObservation) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]RulesPortsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleSpec != nil {
		in, out := &in.RuleSpec, &out.RuleSpec
		*out = make([]RulesRuleSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIngressRulesObservation.
func (in *CustomIngressRulesObservation) DeepCopy() *CustomIngressRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CustomIngressRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomIngressRulesParameters) DeepCopyInto(out *CustomIngressRulesParameters) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]RulesPortsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleSpec != nil {
		in, out := &in.RuleSpec, &out.RuleSpec
		*out = make([]RulesRuleSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomIngressRulesParameters.
func (in *CustomIngressRulesParameters) DeepCopy() *CustomIngressRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CustomIngressRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomObservation) DeepCopyInto(out *CustomObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]CustomRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomObservation.
func (in *CustomObservation) DeepCopy() *CustomObservation {
	if in == nil {
		return nil
	}
	out := new(CustomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomParameters) DeepCopyInto(out *CustomParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]CustomRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomParameters.
func (in *CustomParameters) DeepCopy() *CustomParameters {
	if in == nil {
		return nil
	}
	out := new(CustomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRulesObservation) DeepCopyInto(out *CustomRulesObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Imagename != nil {
		in, out := &in.Imagename, &out.Imagename
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Requiredigest != nil {
		in, out := &in.Requiredigest, &out.Requiredigest
		*out = new(bool)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]RulesTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRulesObservation.
func (in *CustomRulesObservation) DeepCopy() *CustomRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CustomRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRulesParameters) DeepCopyInto(out *CustomRulesParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Imagename != nil {
		in, out := &in.Imagename, &out.Imagename
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Requiredigest != nil {
		in, out := &in.Requiredigest, &out.Requiredigest
		*out = new(bool)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]RulesTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRulesParameters.
func (in *CustomRulesParameters) DeepCopy() *CustomRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CustomRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSelectorObservation) DeepCopyInto(out *CustomSelectorObservation) {
	*out = *in
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSelectorObservation.
func (in *CustomSelectorObservation) DeepCopy() *CustomSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(CustomSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSelectorParameters) DeepCopyInto(out *CustomSelectorParameters) {
	*out = *in
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSelectorParameters.
func (in *CustomSelectorParameters) DeepCopy() *CustomSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(CustomSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_Policy) DeepCopyInto(out *Custom_Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_Policy.
func (in *Custom_Policy) DeepCopy() *Custom_Policy {
	if in == nil {
		return nil
	}
	out := new(Custom_Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Custom_Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicyList) DeepCopyInto(out *Custom_PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Custom_Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicyList.
func (in *Custom_PolicyList) DeepCopy() *Custom_PolicyList {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Custom_PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicyMetaObservation) DeepCopyInto(out *Custom_PolicyMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicyMetaObservation.
func (in *Custom_PolicyMetaObservation) DeepCopy() *Custom_PolicyMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicyMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicyMetaParameters) DeepCopyInto(out *Custom_PolicyMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicyMetaParameters.
func (in *Custom_PolicyMetaParameters) DeepCopy() *Custom_PolicyMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicyMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicyObservation) DeepCopyInto(out *Custom_PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Custom_PolicyMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]ScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Custom_PolicySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicyObservation.
func (in *Custom_PolicyObservation) DeepCopy() *Custom_PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicyParameters) DeepCopyInto(out *Custom_PolicyParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Custom_PolicyMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]ScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Custom_PolicySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicyParameters.
func (in *Custom_PolicyParameters) DeepCopy() *Custom_PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicySpec) DeepCopyInto(out *Custom_PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicySpec.
func (in *Custom_PolicySpec) DeepCopy() *Custom_PolicySpec {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicySpecObservation) DeepCopyInto(out *Custom_PolicySpecObservation) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]InputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]NamespaceSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicySpecObservation.
func (in *Custom_PolicySpecObservation) DeepCopy() *Custom_PolicySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicySpecParameters) DeepCopyInto(out *Custom_PolicySpecParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]InputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]NamespaceSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicySpecParameters.
func (in *Custom_PolicySpecParameters) DeepCopy() *Custom_PolicySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Custom_PolicyStatus) DeepCopyInto(out *Custom_PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Custom_PolicyStatus.
func (in *Custom_PolicyStatus) DeepCopy() *Custom_PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(Custom_PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataObservation) DeepCopyInto(out *DataObservation) {
	*out = *in
	if in.AwsCredential != nil {
		in, out := &in.AwsCredential, &out.AwsCredential
		*out = make([]AwsCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GenericCredential != nil {
		in, out := &in.GenericCredential, &out.GenericCredential
		*out = new(string)
		**out = **in
	}
	if in.KeyValue != nil {
		in, out := &in.KeyValue, &out.KeyValue
		*out = make([]KeyValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataObservation.
func (in *DataObservation) DeepCopy() *DataObservation {
	if in == nil {
		return nil
	}
	out := new(DataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataParameters) DeepCopyInto(out *DataParameters) {
	*out = *in
	if in.AwsCredential != nil {
		in, out := &in.AwsCredential, &out.AwsCredential
		*out = make([]AwsCredentialParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GenericCredential != nil {
		in, out := &in.GenericCredential, &out.GenericCredential
		*out = new(string)
		**out = **in
	}
	if in.KeyValue != nil {
		in, out := &in.KeyValue, &out.KeyValue
		*out = make([]KeyValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataParameters.
func (in *DataParameters) DeepCopy() *DataParameters {
	if in == nil {
		return nil
	}
	out := new(DataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyAllEgressObservation) DeepCopyInto(out *DenyAllEgressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyAllEgressObservation.
func (in *DenyAllEgressObservation) DeepCopy() *DenyAllEgressObservation {
	if in == nil {
		return nil
	}
	out := new(DenyAllEgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyAllEgressParameters) DeepCopyInto(out *DenyAllEgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyAllEgressParameters.
func (in *DenyAllEgressParameters) DeepCopy() *DenyAllEgressParameters {
	if in == nil {
		return nil
	}
	out := new(DenyAllEgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyAllObservation) DeepCopyInto(out *DenyAllObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyAllObservation.
func (in *DenyAllObservation) DeepCopy() *DenyAllObservation {
	if in == nil {
		return nil
	}
	out := new(DenyAllObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyAllParameters) DeepCopyInto(out *DenyAllParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyAllParameters.
func (in *DenyAllParameters) DeepCopy() *DenyAllParameters {
	if in == nil {
		return nil
	}
	out := new(DenyAllParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyAllToPodsObservation) DeepCopyInto(out *DenyAllToPodsObservation) {
	*out = *in
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyAllToPodsObservation.
func (in *DenyAllToPodsObservation) DeepCopy() *DenyAllToPodsObservation {
	if in == nil {
		return nil
	}
	out := new(DenyAllToPodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyAllToPodsParameters) DeepCopyInto(out *DenyAllToPodsParameters) {
	*out = *in
	if in.ToPodLabels != nil {
		in, out := &in.ToPodLabels, &out.ToPodLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyAllToPodsParameters.
func (in *DenyAllToPodsParameters) DeepCopy() *DenyAllToPodsParameters {
	if in == nil {
		return nil
	}
	out := new(DenyAllToPodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisallowedSubjectsObservation) DeepCopyInto(out *DisallowedSubjectsObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisallowedSubjectsObservation.
func (in *DisallowedSubjectsObservation) DeepCopy() *DisallowedSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(DisallowedSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisallowedSubjectsParameters) DeepCopyInto(out *DisallowedSubjectsParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisallowedSubjectsParameters.
func (in *DisallowedSubjectsParameters) DeepCopy() *DisallowedSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(DisallowedSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionObservation) DeepCopyInto(out *DistributionObservation) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerCredentialName != nil {
		in, out := &in.ProvisionerCredentialName, &out.ProvisionerCredentialName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionObservation.
func (in *DistributionObservation) DeepCopy() *DistributionObservation {
	if in == nil {
		return nil
	}
	out := new(DistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionParameters) DeepCopyInto(out *DistributionParameters) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerCredentialName != nil {
		in, out := &in.ProvisionerCredentialName, &out.ProvisionerCredentialName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionParameters.
func (in *DistributionParameters) DeepCopy() *DistributionParameters {
	if in == nil {
		return nil
	}
	out := new(DistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigJSONObservation) DeepCopyInto(out *DockerConfigJSONObservation) {
	*out = *in
	if in.ImageRegistryURL != nil {
		in, out := &in.ImageRegistryURL, &out.ImageRegistryURL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigJSONObservation.
func (in *DockerConfigJSONObservation) DeepCopy() *DockerConfigJSONObservation {
	if in == nil {
		return nil
	}
	out := new(DockerConfigJSONObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigJSONParameters) DeepCopyInto(out *DockerConfigJSONParameters) {
	*out = *in
	if in.ImageRegistryURL != nil {
		in, out := &in.ImageRegistryURL, &out.ImageRegistryURL
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigJSONParameters.
func (in *DockerConfigJSONParameters) DeepCopy() *DockerConfigJSONParameters {
	if in == nil {
		return nil
	}
	out := new(DockerConfigJSONParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSCluster) DeepCopyInto(out *EKSCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSCluster.
func (in *EKSCluster) DeepCopy() *EKSCluster {
	if in == nil {
		return nil
	}
	out := new(EKSCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EKSCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterList) DeepCopyInto(out *EKSClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EKSCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterList.
func (in *EKSClusterList) DeepCopy() *EKSClusterList {
	if in == nil {
		return nil
	}
	out := new(EKSClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EKSClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterMetaObservation) DeepCopyInto(out *EKSClusterMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterMetaObservation.
func (in *EKSClusterMetaObservation) DeepCopy() *EKSClusterMetaObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterMetaParameters) DeepCopyInto(out *EKSClusterMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterMetaParameters.
func (in *EKSClusterMetaParameters) DeepCopy() *EKSClusterMetaParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterObservation) DeepCopyInto(out *EKSClusterObservation) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]EKSClusterMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]EKSClusterSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterObservation.
func (in *EKSClusterObservation) DeepCopy() *EKSClusterObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterParameters) DeepCopyInto(out *EKSClusterParameters) {
	*out = *in
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]EKSClusterMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadyWaitTimeout != nil {
		in, out := &in.ReadyWaitTimeout, &out.ReadyWaitTimeout
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]EKSClusterSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterParameters.
func (in *EKSClusterParameters) DeepCopy() *EKSClusterParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterSpec) DeepCopyInto(out *EKSClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterSpec.
func (in *EKSClusterSpec) DeepCopy() *EKSClusterSpec {
	if in == nil {
		return nil
	}
	out := new(EKSClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterSpecObservation) DeepCopyInto(out *EKSClusterSpecObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]SpecConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodepool != nil {
		in, out := &in.Nodepool, &out.Nodepool
		*out = make([]SpecNodepoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterSpecObservation.
func (in *EKSClusterSpecObservation) DeepCopy() *EKSClusterSpecObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterSpecParameters) DeepCopyInto(out *EKSClusterSpecParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]SpecConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodepool != nil {
		in, out := &in.Nodepool, &out.Nodepool
		*out = make([]SpecNodepoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterSpecParameters.
func (in *EKSClusterSpecParameters) DeepCopy() *EKSClusterSpecParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterStatus) DeepCopyInto(out *EKSClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterStatus.
func (in *EKSClusterStatus) DeepCopy() *EKSClusterStatus {
	if in == nil {
		return nil
	}
	out := new(EKSClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FsGroupObservation) DeepCopyInto(out *FsGroupObservation) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FsGroupObservation.
func (in *FsGroupObservation) DeepCopy() *FsGroupObservation {
	if in == nil {
		return nil
	}
	out := new(FsGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FsGroupParameters) DeepCopyInto(out *FsGroupParameters) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FsGroupParameters.
func (in *FsGroupParameters) DeepCopy() *FsGroupParameters {
	if in == nil {
		return nil
	}
	out := new(FsGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneratedResourcesObservation) DeepCopyInto(out *GeneratedResourcesObservation) {
	*out = *in
	if in.ClusterRoleName != nil {
		in, out := &in.ClusterRoleName, &out.ClusterRoleName
		*out = new(string)
		**out = **in
	}
	if in.RoleBindingName != nil {
		in, out := &in.RoleBindingName, &out.RoleBindingName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneratedResourcesObservation.
func (in *GeneratedResourcesObservation) DeepCopy() *GeneratedResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(GeneratedResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneratedResourcesParameters) DeepCopyInto(out *GeneratedResourcesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneratedResourcesParameters.
func (in *GeneratedResourcesParameters) DeepCopy() *GeneratedResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(GeneratedResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_Repository) DeepCopyInto(out *Git_Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_Repository.
func (in *Git_Repository) DeepCopy() *Git_Repository {
	if in == nil {
		return nil
	}
	out := new(Git_Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Git_Repository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryList) DeepCopyInto(out *Git_RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Git_Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryList.
func (in *Git_RepositoryList) DeepCopy() *Git_RepositoryList {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Git_RepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryMetaObservation) DeepCopyInto(out *Git_RepositoryMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryMetaObservation.
func (in *Git_RepositoryMetaObservation) DeepCopy() *Git_RepositoryMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryMetaParameters) DeepCopyInto(out *Git_RepositoryMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryMetaParameters.
func (in *Git_RepositoryMetaParameters) DeepCopy() *Git_RepositoryMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryObservation) DeepCopyInto(out *Git_RepositoryObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Git_RepositoryMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Git_RepositoryScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Git_RepositorySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryObservation.
func (in *Git_RepositoryObservation) DeepCopy() *Git_RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryParameters) DeepCopyInto(out *Git_RepositoryParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Git_RepositoryMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Git_RepositoryScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Git_RepositorySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryParameters.
func (in *Git_RepositoryParameters) DeepCopy() *Git_RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryScopeClusterObservation) DeepCopyInto(out *Git_RepositoryScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryScopeClusterObservation.
func (in *Git_RepositoryScopeClusterObservation) DeepCopy() *Git_RepositoryScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryScopeClusterParameters) DeepCopyInto(out *Git_RepositoryScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryScopeClusterParameters.
func (in *Git_RepositoryScopeClusterParameters) DeepCopy() *Git_RepositoryScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryScopeObservation) DeepCopyInto(out *Git_RepositoryScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Git_RepositoryScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]ScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryScopeObservation.
func (in *Git_RepositoryScopeObservation) DeepCopy() *Git_RepositoryScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryScopeParameters) DeepCopyInto(out *Git_RepositoryScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Git_RepositoryScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]ScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryScopeParameters.
func (in *Git_RepositoryScopeParameters) DeepCopy() *Git_RepositoryScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositorySpec) DeepCopyInto(out *Git_RepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositorySpec.
func (in *Git_RepositorySpec) DeepCopy() *Git_RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(Git_RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositorySpecObservation) DeepCopyInto(out *Git_RepositorySpecObservation) {
	*out = *in
	if in.GitImplementation != nil {
		in, out := &in.GitImplementation, &out.GitImplementation
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = make([]RefObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositorySpecObservation.
func (in *Git_RepositorySpecObservation) DeepCopy() *Git_RepositorySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Git_RepositorySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositorySpecParameters) DeepCopyInto(out *Git_RepositorySpecParameters) {
	*out = *in
	if in.GitImplementation != nil {
		in, out := &in.GitImplementation, &out.GitImplementation
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = make([]RefParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositorySpecParameters.
func (in *Git_RepositorySpecParameters) DeepCopy() *Git_RepositorySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Git_RepositorySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Git_RepositoryStatus) DeepCopyInto(out *Git_RepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Git_RepositoryStatus.
func (in *Git_RepositoryStatus) DeepCopy() *Git_RepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(Git_RepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMRoleObservation) DeepCopyInto(out *IAMRoleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ExtID != nil {
		in, out := &in.ExtID, &out.ExtID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMRoleObservation.
func (in *IAMRoleObservation) DeepCopy() *IAMRoleObservation {
	if in == nil {
		return nil
	}
	out := new(IAMRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMRoleParameters) DeepCopyInto(out *IAMRoleParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ExtID != nil {
		in, out := &in.ExtID, &out.ExtID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMRoleParameters.
func (in *IAMRoleParameters) DeepCopy() *IAMRoleParameters {
	if in == nil {
		return nil
	}
	out := new(IAMRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBlockObservation) DeepCopyInto(out *IPBlockObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBlockObservation.
func (in *IPBlockObservation) DeepCopy() *IPBlockObservation {
	if in == nil {
		return nil
	}
	out := new(IPBlockObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBlockParameters) DeepCopyInto(out *IPBlockParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBlockParameters.
func (in *IPBlockParameters) DeepCopy() *IPBlockParameters {
	if in == nil {
		return nil
	}
	out := new(IPBlockParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_Policy) DeepCopyInto(out *Iam_Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_Policy.
func (in *Iam_Policy) DeepCopy() *Iam_Policy {
	if in == nil {
		return nil
	}
	out := new(Iam_Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Iam_Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyList) DeepCopyInto(out *Iam_PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Iam_Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyList.
func (in *Iam_PolicyList) DeepCopy() *Iam_PolicyList {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Iam_PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyMetaObservation) DeepCopyInto(out *Iam_PolicyMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyMetaObservation.
func (in *Iam_PolicyMetaObservation) DeepCopy() *Iam_PolicyMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyMetaParameters) DeepCopyInto(out *Iam_PolicyMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyMetaParameters.
func (in *Iam_PolicyMetaParameters) DeepCopy() *Iam_PolicyMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyObservation) DeepCopyInto(out *Iam_PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Iam_PolicyMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleBindings != nil {
		in, out := &in.RoleBindings, &out.RoleBindings
		*out = make([]RoleBindingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Iam_PolicyScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyObservation.
func (in *Iam_PolicyObservation) DeepCopy() *Iam_PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyParameters) DeepCopyInto(out *Iam_PolicyParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Iam_PolicyMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleBindings != nil {
		in, out := &in.RoleBindings, &out.RoleBindings
		*out = make([]RoleBindingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Iam_PolicyScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyParameters.
func (in *Iam_PolicyParameters) DeepCopy() *Iam_PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeClusterGroupObservation) DeepCopyInto(out *Iam_PolicyScopeClusterGroupObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeClusterGroupObservation.
func (in *Iam_PolicyScopeClusterGroupObservation) DeepCopy() *Iam_PolicyScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeClusterGroupParameters) DeepCopyInto(out *Iam_PolicyScopeClusterGroupParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeClusterGroupParameters.
func (in *Iam_PolicyScopeClusterGroupParameters) DeepCopy() *Iam_PolicyScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeClusterObservation) DeepCopyInto(out *Iam_PolicyScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeClusterObservation.
func (in *Iam_PolicyScopeClusterObservation) DeepCopy() *Iam_PolicyScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeClusterParameters) DeepCopyInto(out *Iam_PolicyScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeClusterParameters.
func (in *Iam_PolicyScopeClusterParameters) DeepCopy() *Iam_PolicyScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeObservation) DeepCopyInto(out *Iam_PolicyScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Iam_PolicyScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Iam_PolicyScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]ScopeOrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Iam_PolicyScopeWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeObservation.
func (in *Iam_PolicyScopeObservation) DeepCopy() *Iam_PolicyScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeParameters) DeepCopyInto(out *Iam_PolicyScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Iam_PolicyScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Iam_PolicyScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]ScopeOrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Iam_PolicyScopeWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeParameters.
func (in *Iam_PolicyScopeParameters) DeepCopy() *Iam_PolicyScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeWorkspaceObservation) DeepCopyInto(out *Iam_PolicyScopeWorkspaceObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeWorkspaceObservation.
func (in *Iam_PolicyScopeWorkspaceObservation) DeepCopy() *Iam_PolicyScopeWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyScopeWorkspaceParameters) DeepCopyInto(out *Iam_PolicyScopeWorkspaceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyScopeWorkspaceParameters.
func (in *Iam_PolicyScopeWorkspaceParameters) DeepCopy() *Iam_PolicyScopeWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyScopeWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicySpec) DeepCopyInto(out *Iam_PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicySpec.
func (in *Iam_PolicySpec) DeepCopy() *Iam_PolicySpec {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Iam_PolicyStatus) DeepCopyInto(out *Iam_PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Iam_PolicyStatus.
func (in *Iam_PolicyStatus) DeepCopy() *Iam_PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(Iam_PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_Policy) DeepCopyInto(out *Image_Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_Policy.
func (in *Image_Policy) DeepCopy() *Image_Policy {
	if in == nil {
		return nil
	}
	out := new(Image_Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Image_Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyList) DeepCopyInto(out *Image_PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Image_Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyList.
func (in *Image_PolicyList) DeepCopy() *Image_PolicyList {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Image_PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyMetaObservation) DeepCopyInto(out *Image_PolicyMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyMetaObservation.
func (in *Image_PolicyMetaObservation) DeepCopy() *Image_PolicyMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyMetaParameters) DeepCopyInto(out *Image_PolicyMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyMetaParameters.
func (in *Image_PolicyMetaParameters) DeepCopy() *Image_PolicyMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyObservation) DeepCopyInto(out *Image_PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Image_PolicyMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Image_PolicyScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Image_PolicySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyObservation.
func (in *Image_PolicyObservation) DeepCopy() *Image_PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyParameters) DeepCopyInto(out *Image_PolicyParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Image_PolicyMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Image_PolicyScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Image_PolicySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyParameters.
func (in *Image_PolicyParameters) DeepCopy() *Image_PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeClusterGroupObservation) DeepCopyInto(out *Image_PolicyScopeClusterGroupObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeClusterGroupObservation.
func (in *Image_PolicyScopeClusterGroupObservation) DeepCopy() *Image_PolicyScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeClusterGroupParameters) DeepCopyInto(out *Image_PolicyScopeClusterGroupParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeClusterGroupParameters.
func (in *Image_PolicyScopeClusterGroupParameters) DeepCopy() *Image_PolicyScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeClusterObservation) DeepCopyInto(out *Image_PolicyScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeClusterObservation.
func (in *Image_PolicyScopeClusterObservation) DeepCopy() *Image_PolicyScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeClusterParameters) DeepCopyInto(out *Image_PolicyScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeClusterParameters.
func (in *Image_PolicyScopeClusterParameters) DeepCopy() *Image_PolicyScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeObservation) DeepCopyInto(out *Image_PolicyScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Image_PolicyScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Image_PolicyScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Image_PolicyScopeOrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Image_PolicyScopeWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeObservation.
func (in *Image_PolicyScopeObservation) DeepCopy() *Image_PolicyScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeOrganizationObservation) DeepCopyInto(out *Image_PolicyScopeOrganizationObservation) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeOrganizationObservation.
func (in *Image_PolicyScopeOrganizationObservation) DeepCopy() *Image_PolicyScopeOrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeOrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeOrganizationParameters) DeepCopyInto(out *Image_PolicyScopeOrganizationParameters) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeOrganizationParameters.
func (in *Image_PolicyScopeOrganizationParameters) DeepCopy() *Image_PolicyScopeOrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeOrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeParameters) DeepCopyInto(out *Image_PolicyScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Image_PolicyScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Image_PolicyScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Image_PolicyScopeOrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Image_PolicyScopeWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeParameters.
func (in *Image_PolicyScopeParameters) DeepCopy() *Image_PolicyScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeWorkspaceObservation) DeepCopyInto(out *Image_PolicyScopeWorkspaceObservation) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeWorkspaceObservation.
func (in *Image_PolicyScopeWorkspaceObservation) DeepCopy() *Image_PolicyScopeWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyScopeWorkspaceParameters) DeepCopyInto(out *Image_PolicyScopeWorkspaceParameters) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyScopeWorkspaceParameters.
func (in *Image_PolicyScopeWorkspaceParameters) DeepCopy() *Image_PolicyScopeWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyScopeWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicySpec) DeepCopyInto(out *Image_PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicySpec.
func (in *Image_PolicySpec) DeepCopy() *Image_PolicySpec {
	if in == nil {
		return nil
	}
	out := new(Image_PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicySpecObservation) DeepCopyInto(out *Image_PolicySpecObservation) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]SpecInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]SpecNamespaceSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicySpecObservation.
func (in *Image_PolicySpecObservation) DeepCopy() *Image_PolicySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Image_PolicySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicySpecParameters) DeepCopyInto(out *Image_PolicySpecParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]SpecInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]SpecNamespaceSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicySpecParameters.
func (in *Image_PolicySpecParameters) DeepCopy() *Image_PolicySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Image_PolicySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image_PolicyStatus) DeepCopyInto(out *Image_PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image_PolicyStatus.
func (in *Image_PolicyStatus) DeepCopy() *Image_PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(Image_PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImgpkgBundleObservation) DeepCopyInto(out *ImgpkgBundleObservation) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImgpkgBundleObservation.
func (in *ImgpkgBundleObservation) DeepCopy() *ImgpkgBundleObservation {
	if in == nil {
		return nil
	}
	out := new(ImgpkgBundleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImgpkgBundleParameters) DeepCopyInto(out *ImgpkgBundleParameters) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImgpkgBundleParameters.
func (in *ImgpkgBundleParameters) DeepCopy() *ImgpkgBundleParameters {
	if in == nil {
		return nil
	}
	out := new(ImgpkgBundleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InfoObservation) DeepCopyInto(out *InfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InfoObservation.
func (in *InfoObservation) DeepCopy() *InfoObservation {
	if in == nil {
		return nil
	}
	out := new(InfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InfoParameters) DeepCopyInto(out *InfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InfoParameters.
func (in *InfoParameters) DeepCopy() *InfoParameters {
	if in == nil {
		return nil
	}
	out := new(InfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputCustomObservation) DeepCopyInto(out *InputCustomObservation) {
	*out = *in
	if in.LimitsCPU != nil {
		in, out := &in.LimitsCPU, &out.LimitsCPU
		*out = new(string)
		**out = **in
	}
	if in.LimitsMemory != nil {
		in, out := &in.LimitsMemory, &out.LimitsMemory
		*out = new(string)
		**out = **in
	}
	if in.PersistentVolumeClaims != nil {
		in, out := &in.PersistentVolumeClaims, &out.PersistentVolumeClaims
		*out = new(float64)
		**out = **in
	}
	if in.PersistentVolumeClaimsPerClass != nil {
		in, out := &in.PersistentVolumeClaimsPerClass, &out.PersistentVolumeClaimsPerClass
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestsCPU != nil {
		in, out := &in.RequestsCPU, &out.RequestsCPU
		*out = new(string)
		**out = **in
	}
	if in.RequestsMemory != nil {
		in, out := &in.RequestsMemory, &out.RequestsMemory
		*out = new(string)
		**out = **in
	}
	if in.RequestsStorage != nil {
		in, out := &in.RequestsStorage, &out.RequestsStorage
		*out = new(string)
		**out = **in
	}
	if in.RequestsStoragePerClass != nil {
		in, out := &in.RequestsStoragePerClass, &out.RequestsStoragePerClass
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceCounts != nil {
		in, out := &in.ResourceCounts, &out.ResourceCounts
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputCustomObservation.
func (in *InputCustomObservation) DeepCopy() *InputCustomObservation {
	if in == nil {
		return nil
	}
	out := new(InputCustomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputCustomParameters) DeepCopyInto(out *InputCustomParameters) {
	*out = *in
	if in.LimitsCPU != nil {
		in, out := &in.LimitsCPU, &out.LimitsCPU
		*out = new(string)
		**out = **in
	}
	if in.LimitsMemory != nil {
		in, out := &in.LimitsMemory, &out.LimitsMemory
		*out = new(string)
		**out = **in
	}
	if in.PersistentVolumeClaims != nil {
		in, out := &in.PersistentVolumeClaims, &out.PersistentVolumeClaims
		*out = new(float64)
		**out = **in
	}
	if in.PersistentVolumeClaimsPerClass != nil {
		in, out := &in.PersistentVolumeClaimsPerClass, &out.PersistentVolumeClaimsPerClass
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestsCPU != nil {
		in, out := &in.RequestsCPU, &out.RequestsCPU
		*out = new(string)
		**out = **in
	}
	if in.RequestsMemory != nil {
		in, out := &in.RequestsMemory, &out.RequestsMemory
		*out = new(string)
		**out = **in
	}
	if in.RequestsStorage != nil {
		in, out := &in.RequestsStorage, &out.RequestsStorage
		*out = new(string)
		**out = **in
	}
	if in.RequestsStoragePerClass != nil {
		in, out := &in.RequestsStoragePerClass, &out.RequestsStoragePerClass
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceCounts != nil {
		in, out := &in.ResourceCounts, &out.ResourceCounts
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputCustomParameters.
func (in *InputCustomParameters) DeepCopy() *InputCustomParameters {
	if in == nil {
		return nil
	}
	out := new(InputCustomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputObservation) DeepCopyInto(out *InputObservation) {
	*out = *in
	if in.TmcBlockNodeportService != nil {
		in, out := &in.TmcBlockNodeportService, &out.TmcBlockNodeportService
		*out = make([]TmcBlockNodeportServiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcBlockResources != nil {
		in, out := &in.TmcBlockResources, &out.TmcBlockResources
		*out = make([]TmcBlockResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcBlockRolebindingSubjects != nil {
		in, out := &in.TmcBlockRolebindingSubjects, &out.TmcBlockRolebindingSubjects
		*out = make([]TmcBlockRolebindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcExternalIps != nil {
		in, out := &in.TmcExternalIps, &out.TmcExternalIps
		*out = make([]TmcExternalIpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcHTTPSIngress != nil {
		in, out := &in.TmcHTTPSIngress, &out.TmcHTTPSIngress
		*out = make([]TmcHTTPSIngressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcRequireLabels != nil {
		in, out := &in.TmcRequireLabels, &out.TmcRequireLabels
		*out = make([]TmcRequireLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputObservation.
func (in *InputObservation) DeepCopy() *InputObservation {
	if in == nil {
		return nil
	}
	out := new(InputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputParameters) DeepCopyInto(out *InputParameters) {
	*out = *in
	if in.TmcBlockNodeportService != nil {
		in, out := &in.TmcBlockNodeportService, &out.TmcBlockNodeportService
		*out = make([]TmcBlockNodeportServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcBlockResources != nil {
		in, out := &in.TmcBlockResources, &out.TmcBlockResources
		*out = make([]TmcBlockResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcBlockRolebindingSubjects != nil {
		in, out := &in.TmcBlockRolebindingSubjects, &out.TmcBlockRolebindingSubjects
		*out = make([]TmcBlockRolebindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcExternalIps != nil {
		in, out := &in.TmcExternalIps, &out.TmcExternalIps
		*out = make([]TmcExternalIpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcHTTPSIngress != nil {
		in, out := &in.TmcHTTPSIngress, &out.TmcHTTPSIngress
		*out = make([]TmcHTTPSIngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TmcRequireLabels != nil {
		in, out := &in.TmcRequireLabels, &out.TmcRequireLabels
		*out = make([]TmcRequireLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputParameters.
func (in *InputParameters) DeepCopy() *InputParameters {
	if in == nil {
		return nil
	}
	out := new(InputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Integration) DeepCopyInto(out *Integration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Integration.
func (in *Integration) DeepCopy() *Integration {
	if in == nil {
		return nil
	}
	out := new(Integration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Integration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationList) DeepCopyInto(out *IntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Integration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationList.
func (in *IntegrationList) DeepCopy() *IntegrationList {
	if in == nil {
		return nil
	}
	out := new(IntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationMetaObservation) DeepCopyInto(out *IntegrationMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationMetaObservation.
func (in *IntegrationMetaObservation) DeepCopy() *IntegrationMetaObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationMetaParameters) DeepCopyInto(out *IntegrationMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationMetaParameters.
func (in *IntegrationMetaParameters) DeepCopy() *IntegrationMetaParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationObservation) DeepCopyInto(out *IntegrationObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationName != nil {
		in, out := &in.IntegrationName, &out.IntegrationName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]IntegrationMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]IntegrationSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationObservation.
func (in *IntegrationObservation) DeepCopy() *IntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationParameters) DeepCopyInto(out *IntegrationParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.IntegrationName != nil {
		in, out := &in.IntegrationName, &out.IntegrationName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]IntegrationMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]IntegrationSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationParameters.
func (in *IntegrationParameters) DeepCopy() *IntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSpec) DeepCopyInto(out *IntegrationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSpec.
func (in *IntegrationSpec) DeepCopy() *IntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSpecObservation) DeepCopyInto(out *IntegrationSpecObservation) {
	*out = *in
	if in.Configurations != nil {
		in, out := &in.Configurations, &out.Configurations
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSpecObservation.
func (in *IntegrationSpecObservation) DeepCopy() *IntegrationSpecObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSpecParameters) DeepCopyInto(out *IntegrationSpecParameters) {
	*out = *in
	if in.Configurations != nil {
		in, out := &in.Configurations, &out.Configurations
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSpecParameters.
func (in *IntegrationSpecParameters) DeepCopy() *IntegrationSpecParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationStatus) DeepCopyInto(out *IntegrationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationStatus.
func (in *IntegrationStatus) DeepCopy() *IntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValueObservation) DeepCopyInto(out *KeyValueObservation) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValueObservation.
func (in *KeyValueObservation) DeepCopy() *KeyValueObservation {
	if in == nil {
		return nil
	}
	out := new(KeyValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValueParameters) DeepCopyInto(out *KeyValueParameters) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValueParameters.
func (in *KeyValueParameters) DeepCopy() *KeyValueParameters {
	if in == nil {
		return nil
	}
	out := new(KeyValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesNetworkConfigObservation) DeepCopyInto(out *KubernetesNetworkConfigObservation) {
	*out = *in
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesNetworkConfigObservation.
func (in *KubernetesNetworkConfigObservation) DeepCopy() *KubernetesNetworkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesNetworkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesNetworkConfigParameters) DeepCopyInto(out *KubernetesNetworkConfigParameters) {
	*out = *in
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesNetworkConfigParameters.
func (in *KubernetesNetworkConfigParameters) DeepCopy() *KubernetesNetworkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesNetworkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_Secret) DeepCopyInto(out *Kubernetes_Secret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_Secret.
func (in *Kubernetes_Secret) DeepCopy() *Kubernetes_Secret {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Kubernetes_Secret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretList) DeepCopyInto(out *Kubernetes_SecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Kubernetes_Secret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretList.
func (in *Kubernetes_SecretList) DeepCopy() *Kubernetes_SecretList {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Kubernetes_SecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretMetaObservation) DeepCopyInto(out *Kubernetes_SecretMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretMetaObservation.
func (in *Kubernetes_SecretMetaObservation) DeepCopy() *Kubernetes_SecretMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretMetaParameters) DeepCopyInto(out *Kubernetes_SecretMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretMetaParameters.
func (in *Kubernetes_SecretMetaParameters) DeepCopy() *Kubernetes_SecretMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretObservation) DeepCopyInto(out *Kubernetes_SecretObservation) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Kubernetes_SecretMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Kubernetes_SecretScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Kubernetes_SecretSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretObservation.
func (in *Kubernetes_SecretObservation) DeepCopy() *Kubernetes_SecretObservation {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretParameters) DeepCopyInto(out *Kubernetes_SecretParameters) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = new(bool)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Kubernetes_SecretMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Kubernetes_SecretScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Kubernetes_SecretSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretParameters.
func (in *Kubernetes_SecretParameters) DeepCopy() *Kubernetes_SecretParameters {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretScopeClusterObservation) DeepCopyInto(out *Kubernetes_SecretScopeClusterObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretScopeClusterObservation.
func (in *Kubernetes_SecretScopeClusterObservation) DeepCopy() *Kubernetes_SecretScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretScopeClusterParameters) DeepCopyInto(out *Kubernetes_SecretScopeClusterParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretScopeClusterParameters.
func (in *Kubernetes_SecretScopeClusterParameters) DeepCopy() *Kubernetes_SecretScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretScopeObservation) DeepCopyInto(out *Kubernetes_SecretScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Kubernetes_SecretScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretScopeObservation.
func (in *Kubernetes_SecretScopeObservation) DeepCopy() *Kubernetes_SecretScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretScopeParameters) DeepCopyInto(out *Kubernetes_SecretScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Kubernetes_SecretScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretScopeParameters.
func (in *Kubernetes_SecretScopeParameters) DeepCopy() *Kubernetes_SecretScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretSpec) DeepCopyInto(out *Kubernetes_SecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretSpec.
func (in *Kubernetes_SecretSpec) DeepCopy() *Kubernetes_SecretSpec {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretSpecObservation) DeepCopyInto(out *Kubernetes_SecretSpecObservation) {
	*out = *in
	if in.DockerConfigJSON != nil {
		in, out := &in.DockerConfigJSON, &out.DockerConfigJSON
		*out = make([]DockerConfigJSONObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretSpecObservation.
func (in *Kubernetes_SecretSpecObservation) DeepCopy() *Kubernetes_SecretSpecObservation {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretSpecParameters) DeepCopyInto(out *Kubernetes_SecretSpecParameters) {
	*out = *in
	if in.DockerConfigJSON != nil {
		in, out := &in.DockerConfigJSON, &out.DockerConfigJSON
		*out = make([]DockerConfigJSONParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretSpecParameters.
func (in *Kubernetes_SecretSpecParameters) DeepCopy() *Kubernetes_SecretSpecParameters {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kubernetes_SecretStatus) DeepCopyInto(out *Kubernetes_SecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kubernetes_SecretStatus.
func (in *Kubernetes_SecretStatus) DeepCopy() *Kubernetes_SecretStatus {
	if in == nil {
		return nil
	}
	out := new(Kubernetes_SecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kustomization) DeepCopyInto(out *Kustomization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kustomization.
func (in *Kustomization) DeepCopy() *Kustomization {
	if in == nil {
		return nil
	}
	out := new(Kustomization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Kustomization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationList) DeepCopyInto(out *KustomizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Kustomization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationList.
func (in *KustomizationList) DeepCopy() *KustomizationList {
	if in == nil {
		return nil
	}
	out := new(KustomizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KustomizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationMetaObservation) DeepCopyInto(out *KustomizationMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationMetaObservation.
func (in *KustomizationMetaObservation) DeepCopy() *KustomizationMetaObservation {
	if in == nil {
		return nil
	}
	out := new(KustomizationMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationMetaParameters) DeepCopyInto(out *KustomizationMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationMetaParameters.
func (in *KustomizationMetaParameters) DeepCopy() *KustomizationMetaParameters {
	if in == nil {
		return nil
	}
	out := new(KustomizationMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationObservation) DeepCopyInto(out *KustomizationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]KustomizationMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]KustomizationScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]KustomizationSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationObservation.
func (in *KustomizationObservation) DeepCopy() *KustomizationObservation {
	if in == nil {
		return nil
	}
	out := new(KustomizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationParameters) DeepCopyInto(out *KustomizationParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]KustomizationMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]KustomizationScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]KustomizationSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationParameters.
func (in *KustomizationParameters) DeepCopy() *KustomizationParameters {
	if in == nil {
		return nil
	}
	out := new(KustomizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationScopeClusterGroupObservation) DeepCopyInto(out *KustomizationScopeClusterGroupObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationScopeClusterGroupObservation.
func (in *KustomizationScopeClusterGroupObservation) DeepCopy() *KustomizationScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(KustomizationScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationScopeClusterGroupParameters) DeepCopyInto(out *KustomizationScopeClusterGroupParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationScopeClusterGroupParameters.
func (in *KustomizationScopeClusterGroupParameters) DeepCopy() *KustomizationScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(KustomizationScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationScopeClusterObservation) DeepCopyInto(out *KustomizationScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationScopeClusterObservation.
func (in *KustomizationScopeClusterObservation) DeepCopy() *KustomizationScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(KustomizationScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationScopeClusterParameters) DeepCopyInto(out *KustomizationScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationScopeClusterParameters.
func (in *KustomizationScopeClusterParameters) DeepCopy() *KustomizationScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(KustomizationScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationScopeObservation) DeepCopyInto(out *KustomizationScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]KustomizationScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]KustomizationScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationScopeObservation.
func (in *KustomizationScopeObservation) DeepCopy() *KustomizationScopeObservation {
	if in == nil {
		return nil
	}
	out := new(KustomizationScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationScopeParameters) DeepCopyInto(out *KustomizationScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]KustomizationScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]KustomizationScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationScopeParameters.
func (in *KustomizationScopeParameters) DeepCopy() *KustomizationScopeParameters {
	if in == nil {
		return nil
	}
	out := new(KustomizationScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationSpec) DeepCopyInto(out *KustomizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationSpec.
func (in *KustomizationSpec) DeepCopy() *KustomizationSpec {
	if in == nil {
		return nil
	}
	out := new(KustomizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationSpecObservation) DeepCopyInto(out *KustomizationSpecObservation) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Prune != nil {
		in, out := &in.Prune, &out.Prune
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetNamespace != nil {
		in, out := &in.TargetNamespace, &out.TargetNamespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationSpecObservation.
func (in *KustomizationSpecObservation) DeepCopy() *KustomizationSpecObservation {
	if in == nil {
		return nil
	}
	out := new(KustomizationSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationSpecParameters) DeepCopyInto(out *KustomizationSpecParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Prune != nil {
		in, out := &in.Prune, &out.Prune
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetNamespace != nil {
		in, out := &in.TargetNamespace, &out.TargetNamespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationSpecParameters.
func (in *KustomizationSpecParameters) DeepCopy() *KustomizationSpecParameters {
	if in == nil {
		return nil
	}
	out := new(KustomizationSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizationStatus) DeepCopyInto(out *KustomizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizationStatus.
func (in *KustomizationStatus) DeepCopy() *KustomizationStatus {
	if in == nil {
		return nil
	}
	out := new(KustomizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsObservation) DeepCopyInto(out *LabelsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsObservation.
func (in *LabelsObservation) DeepCopy() *LabelsObservation {
	if in == nil {
		return nil
	}
	out := new(LabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsParameters) DeepCopyInto(out *LabelsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsParameters.
func (in *LabelsParameters) DeepCopy() *LabelsParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LargeObservation) DeepCopyInto(out *LargeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LargeObservation.
func (in *LargeObservation) DeepCopy() *LargeObservation {
	if in == nil {
		return nil
	}
	out := new(LargeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LargeParameters) DeepCopyInto(out *LargeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LargeParameters.
func (in *LargeParameters) DeepCopy() *LargeParameters {
	if in == nil {
		return nil
	}
	out := new(LargeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation) DeepCopyInto(out *LaunchTemplateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation.
func (in *LaunchTemplateObservation) DeepCopy() *LaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters) DeepCopyInto(out *LaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters.
func (in *LaunchTemplateParameters) DeepCopy() *LaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxCapabilitiesObservation) DeepCopyInto(out *LinuxCapabilitiesObservation) {
	*out = *in
	if in.AllowedCapabilities != nil {
		in, out := &in.AllowedCapabilities, &out.AllowedCapabilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequiredDropCapabilities != nil {
		in, out := &in.RequiredDropCapabilities, &out.RequiredDropCapabilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxCapabilitiesObservation.
func (in *LinuxCapabilitiesObservation) DeepCopy() *LinuxCapabilitiesObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxCapabilitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxCapabilitiesParameters) DeepCopyInto(out *LinuxCapabilitiesParameters) {
	*out = *in
	if in.AllowedCapabilities != nil {
		in, out := &in.AllowedCapabilities, &out.AllowedCapabilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequiredDropCapabilities != nil {
		in, out := &in.RequiredDropCapabilities, &out.RequiredDropCapabilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxCapabilitiesParameters.
func (in *LinuxCapabilitiesParameters) DeepCopy() *LinuxCapabilitiesParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxCapabilitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxConfigObservation) DeepCopyInto(out *LinuxConfigObservation) {
	*out = *in
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxConfigObservation.
func (in *LinuxConfigObservation) DeepCopy() *LinuxConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxConfigParameters) DeepCopyInto(out *LinuxConfigParameters) {
	*out = *in
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxConfigParameters.
func (in *LinuxConfigParameters) DeepCopy() *LinuxConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.APIServer != nil {
		in, out := &in.APIServer, &out.APIServer
		*out = new(bool)
		**out = **in
	}
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Authenticator != nil {
		in, out := &in.Authenticator, &out.Authenticator
		*out = new(bool)
		**out = **in
	}
	if in.ControllerManager != nil {
		in, out := &in.ControllerManager, &out.ControllerManager
		*out = new(bool)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.APIServer != nil {
		in, out := &in.APIServer, &out.APIServer
		*out = new(bool)
		**out = **in
	}
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Authenticator != nil {
		in, out := &in.Authenticator, &out.Authenticator
		*out = new(bool)
		**out = **in
	}
	if in.ControllerManager != nil {
		in, out := &in.ControllerManager, &out.ControllerManager
		*out = new(bool)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsObservation) DeepCopyInto(out *MatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsObservation.
func (in *MatchExpressionsObservation) DeepCopy() *MatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsParameters) DeepCopyInto(out *MatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsParameters.
func (in *MatchExpressionsParameters) DeepCopy() *MatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MediumObservation) DeepCopyInto(out *MediumObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MediumObservation.
func (in *MediumObservation) DeepCopy() *MediumObservation {
	if in == nil {
		return nil
	}
	out := new(MediumObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MediumParameters) DeepCopyInto(out *MediumParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MediumParameters.
func (in *MediumParameters) DeepCopy() *MediumParameters {
	if in == nil {
		return nil
	}
	out := new(MediumParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaObservation) DeepCopyInto(out *MetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaObservation.
func (in *MetaObservation) DeepCopy() *MetaObservation {
	if in == nil {
		return nil
	}
	out := new(MetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaParameters) DeepCopyInto(out *MetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaParameters.
func (in *MetaParameters) DeepCopy() *MetaParameters {
	if in == nil {
		return nil
	}
	out := new(MetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAddonConfigObservation) DeepCopyInto(out *MonitorAddonConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAddonConfigObservation.
func (in *MonitorAddonConfigObservation) DeepCopy() *MonitorAddonConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorAddonConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAddonConfigParameters) DeepCopyInto(out *MonitorAddonConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAddonConfigParameters.
func (in *MonitorAddonConfigParameters) DeepCopy() *MonitorAddonConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorAddonConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace) DeepCopyInto(out *Namespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace.
func (in *Namespace) DeepCopy() *Namespace {
	if in == nil {
		return nil
	}
	out := new(Namespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Namespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceList) DeepCopyInto(out *NamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Namespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceList.
func (in *NamespaceList) DeepCopy() *NamespaceList {
	if in == nil {
		return nil
	}
	out := new(NamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceMetaObservation) DeepCopyInto(out *NamespaceMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceMetaObservation.
func (in *NamespaceMetaObservation) DeepCopy() *NamespaceMetaObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceMetaParameters) DeepCopyInto(out *NamespaceMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceMetaParameters.
func (in *NamespaceMetaParameters) DeepCopy() *NamespaceMetaParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceObservation) DeepCopyInto(out *NamespaceObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceObservation.
func (in *NamespaceObservation) DeepCopy() *NamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceObservation_2) DeepCopyInto(out *NamespaceObservation_2) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]NamespaceMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NamespaceSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceObservation_2.
func (in *NamespaceObservation_2) DeepCopy() *NamespaceObservation_2 {
	if in == nil {
		return nil
	}
	out := new(NamespaceObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceParameters) DeepCopyInto(out *NamespaceParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceParameters.
func (in *NamespaceParameters) DeepCopy() *NamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceParameters_2) DeepCopyInto(out *NamespaceParameters_2) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]NamespaceMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NamespaceSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceParameters_2.
func (in *NamespaceParameters_2) DeepCopy() *NamespaceParameters_2 {
	if in == nil {
		return nil
	}
	out := new(NamespaceParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSelectorMatchExpressionsObservation) DeepCopyInto(out *NamespaceSelectorMatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSelectorMatchExpressionsObservation.
func (in *NamespaceSelectorMatchExpressionsObservation) DeepCopy() *NamespaceSelectorMatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceSelectorMatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSelectorMatchExpressionsParameters) DeepCopyInto(out *NamespaceSelectorMatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSelectorMatchExpressionsParameters.
func (in *NamespaceSelectorMatchExpressionsParameters) DeepCopy() *NamespaceSelectorMatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceSelectorMatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSelectorObservation) DeepCopyInto(out *NamespaceSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSelectorObservation.
func (in *NamespaceSelectorObservation) DeepCopy() *NamespaceSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSelectorParameters) DeepCopyInto(out *NamespaceSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSelectorParameters.
func (in *NamespaceSelectorParameters) DeepCopy() *NamespaceSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSpec) DeepCopyInto(out *NamespaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSpec.
func (in *NamespaceSpec) DeepCopy() *NamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSpecObservation) DeepCopyInto(out *NamespaceSpecObservation) {
	*out = *in
	if in.Attach != nil {
		in, out := &in.Attach, &out.Attach
		*out = new(bool)
		**out = **in
	}
	if in.WorkspaceName != nil {
		in, out := &in.WorkspaceName, &out.WorkspaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSpecObservation.
func (in *NamespaceSpecObservation) DeepCopy() *NamespaceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSpecParameters) DeepCopyInto(out *NamespaceSpecParameters) {
	*out = *in
	if in.Attach != nil {
		in, out := &in.Attach, &out.Attach
		*out = new(bool)
		**out = **in
	}
	if in.WorkspaceName != nil {
		in, out := &in.WorkspaceName, &out.WorkspaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSpecParameters.
func (in *NamespaceSpecParameters) DeepCopy() *NamespaceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceStatus) DeepCopyInto(out *NamespaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceStatus.
func (in *NamespaceStatus) DeepCopy() *NamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(NamespaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_Policy) DeepCopyInto(out *Namespace_Quota_Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_Policy.
func (in *Namespace_Quota_Policy) DeepCopy() *Namespace_Quota_Policy {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Namespace_Quota_Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyList) DeepCopyInto(out *Namespace_Quota_PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Namespace_Quota_Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyList.
func (in *Namespace_Quota_PolicyList) DeepCopy() *Namespace_Quota_PolicyList {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Namespace_Quota_PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyMetaObservation) DeepCopyInto(out *Namespace_Quota_PolicyMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyMetaObservation.
func (in *Namespace_Quota_PolicyMetaObservation) DeepCopy() *Namespace_Quota_PolicyMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyMetaParameters) DeepCopyInto(out *Namespace_Quota_PolicyMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyMetaParameters.
func (in *Namespace_Quota_PolicyMetaParameters) DeepCopy() *Namespace_Quota_PolicyMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyObservation) DeepCopyInto(out *Namespace_Quota_PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Namespace_Quota_PolicyMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Namespace_Quota_PolicyScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Namespace_Quota_PolicySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyObservation.
func (in *Namespace_Quota_PolicyObservation) DeepCopy() *Namespace_Quota_PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyParameters) DeepCopyInto(out *Namespace_Quota_PolicyParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Namespace_Quota_PolicyMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Namespace_Quota_PolicyScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Namespace_Quota_PolicySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyParameters.
func (in *Namespace_Quota_PolicyParameters) DeepCopy() *Namespace_Quota_PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeClusterGroupObservation) DeepCopyInto(out *Namespace_Quota_PolicyScopeClusterGroupObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeClusterGroupObservation.
func (in *Namespace_Quota_PolicyScopeClusterGroupObservation) DeepCopy() *Namespace_Quota_PolicyScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeClusterGroupParameters) DeepCopyInto(out *Namespace_Quota_PolicyScopeClusterGroupParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeClusterGroupParameters.
func (in *Namespace_Quota_PolicyScopeClusterGroupParameters) DeepCopy() *Namespace_Quota_PolicyScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeClusterObservation) DeepCopyInto(out *Namespace_Quota_PolicyScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeClusterObservation.
func (in *Namespace_Quota_PolicyScopeClusterObservation) DeepCopy() *Namespace_Quota_PolicyScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeClusterParameters) DeepCopyInto(out *Namespace_Quota_PolicyScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeClusterParameters.
func (in *Namespace_Quota_PolicyScopeClusterParameters) DeepCopy() *Namespace_Quota_PolicyScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeObservation) DeepCopyInto(out *Namespace_Quota_PolicyScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Namespace_Quota_PolicyScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Namespace_Quota_PolicyScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Namespace_Quota_PolicyScopeOrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Namespace_Quota_PolicyScopeWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeObservation.
func (in *Namespace_Quota_PolicyScopeObservation) DeepCopy() *Namespace_Quota_PolicyScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeOrganizationObservation) DeepCopyInto(out *Namespace_Quota_PolicyScopeOrganizationObservation) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeOrganizationObservation.
func (in *Namespace_Quota_PolicyScopeOrganizationObservation) DeepCopy() *Namespace_Quota_PolicyScopeOrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeOrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeOrganizationParameters) DeepCopyInto(out *Namespace_Quota_PolicyScopeOrganizationParameters) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeOrganizationParameters.
func (in *Namespace_Quota_PolicyScopeOrganizationParameters) DeepCopy() *Namespace_Quota_PolicyScopeOrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeOrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeParameters) DeepCopyInto(out *Namespace_Quota_PolicyScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Namespace_Quota_PolicyScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Namespace_Quota_PolicyScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Namespace_Quota_PolicyScopeOrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Namespace_Quota_PolicyScopeWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeParameters.
func (in *Namespace_Quota_PolicyScopeParameters) DeepCopy() *Namespace_Quota_PolicyScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeWorkspaceObservation) DeepCopyInto(out *Namespace_Quota_PolicyScopeWorkspaceObservation) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeWorkspaceObservation.
func (in *Namespace_Quota_PolicyScopeWorkspaceObservation) DeepCopy() *Namespace_Quota_PolicyScopeWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyScopeWorkspaceParameters) DeepCopyInto(out *Namespace_Quota_PolicyScopeWorkspaceParameters) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyScopeWorkspaceParameters.
func (in *Namespace_Quota_PolicyScopeWorkspaceParameters) DeepCopy() *Namespace_Quota_PolicyScopeWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyScopeWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpec) DeepCopyInto(out *Namespace_Quota_PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpec.
func (in *Namespace_Quota_PolicySpec) DeepCopy() *Namespace_Quota_PolicySpec {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpecInputObservation) DeepCopyInto(out *Namespace_Quota_PolicySpecInputObservation) {
	*out = *in
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]InputCustomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Large != nil {
		in, out := &in.Large, &out.Large
		*out = make([]LargeParameters, len(*in))
		copy(*out, *in)
	}
	if in.Medium != nil {
		in, out := &in.Medium, &out.Medium
		*out = make([]MediumParameters, len(*in))
		copy(*out, *in)
	}
	if in.Small != nil {
		in, out := &in.Small, &out.Small
		*out = make([]SmallParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpecInputObservation.
func (in *Namespace_Quota_PolicySpecInputObservation) DeepCopy() *Namespace_Quota_PolicySpecInputObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpecInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpecInputParameters) DeepCopyInto(out *Namespace_Quota_PolicySpecInputParameters) {
	*out = *in
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]InputCustomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Large != nil {
		in, out := &in.Large, &out.Large
		*out = make([]LargeParameters, len(*in))
		copy(*out, *in)
	}
	if in.Medium != nil {
		in, out := &in.Medium, &out.Medium
		*out = make([]MediumParameters, len(*in))
		copy(*out, *in)
	}
	if in.Small != nil {
		in, out := &in.Small, &out.Small
		*out = make([]SmallParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpecInputParameters.
func (in *Namespace_Quota_PolicySpecInputParameters) DeepCopy() *Namespace_Quota_PolicySpecInputParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpecInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpecNamespaceSelectorObservation) DeepCopyInto(out *Namespace_Quota_PolicySpecNamespaceSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]SpecNamespaceSelectorMatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpecNamespaceSelectorObservation.
func (in *Namespace_Quota_PolicySpecNamespaceSelectorObservation) DeepCopy() *Namespace_Quota_PolicySpecNamespaceSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpecNamespaceSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpecNamespaceSelectorParameters) DeepCopyInto(out *Namespace_Quota_PolicySpecNamespaceSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]SpecNamespaceSelectorMatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpecNamespaceSelectorParameters.
func (in *Namespace_Quota_PolicySpecNamespaceSelectorParameters) DeepCopy() *Namespace_Quota_PolicySpecNamespaceSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpecNamespaceSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpecObservation) DeepCopyInto(out *Namespace_Quota_PolicySpecObservation) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]Namespace_Quota_PolicySpecInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]Namespace_Quota_PolicySpecNamespaceSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpecObservation.
func (in *Namespace_Quota_PolicySpecObservation) DeepCopy() *Namespace_Quota_PolicySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicySpecParameters) DeepCopyInto(out *Namespace_Quota_PolicySpecParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]Namespace_Quota_PolicySpecInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]Namespace_Quota_PolicySpecNamespaceSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicySpecParameters.
func (in *Namespace_Quota_PolicySpecParameters) DeepCopy() *Namespace_Quota_PolicySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Quota_PolicyStatus) DeepCopyInto(out *Namespace_Quota_PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Quota_PolicyStatus.
func (in *Namespace_Quota_PolicyStatus) DeepCopy() *Namespace_Quota_PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(Namespace_Quota_PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkClusterObservation) DeepCopyInto(out *NetworkClusterObservation) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]PodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkClusterObservation.
func (in *NetworkClusterObservation) DeepCopy() *NetworkClusterObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkClusterParameters) DeepCopyInto(out *NetworkClusterParameters) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]PodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkClusterParameters.
func (in *NetworkClusterParameters) DeepCopy() *NetworkClusterParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigObservation) DeepCopyInto(out *NetworkConfigObservation) {
	*out = *in
	if in.DNSPrefix != nil {
		in, out := &in.DNSPrefix, &out.DNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.DNSServiceIP != nil {
		in, out := &in.DNSServiceIP, &out.DNSServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigObservation.
func (in *NetworkConfigObservation) DeepCopy() *NetworkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigParameters) DeepCopyInto(out *NetworkConfigParameters) {
	*out = *in
	if in.DNSPrefix != nil {
		in, out := &in.DNSPrefix, &out.DNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.DNSServiceIP != nil {
		in, out := &in.DNSServiceIP, &out.DNSServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigParameters.
func (in *NetworkConfigParameters) DeepCopy() *NetworkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]NetworkClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = make([]ProviderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]NetworkClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = make([]ProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPodsObservation) DeepCopyInto(out *NetworkPodsObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPodsObservation.
func (in *NetworkPodsObservation) DeepCopy() *NetworkPodsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkPodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPodsParameters) DeepCopyInto(out *NetworkPodsParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPodsParameters.
func (in *NetworkPodsParameters) DeepCopy() *NetworkPodsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesObservation) DeepCopyInto(out *NetworkServicesObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesObservation.
func (in *NetworkServicesObservation) DeepCopy() *NetworkServicesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesParameters) DeepCopyInto(out *NetworkServicesParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesParameters.
func (in *NetworkServicesParameters) DeepCopy() *NetworkServicesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_Policy) DeepCopyInto(out *Network_Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_Policy.
func (in *Network_Policy) DeepCopy() *Network_Policy {
	if in == nil {
		return nil
	}
	out := new(Network_Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network_Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyList) DeepCopyInto(out *Network_PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Network_Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyList.
func (in *Network_PolicyList) DeepCopy() *Network_PolicyList {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network_PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyMetaObservation) DeepCopyInto(out *Network_PolicyMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyMetaObservation.
func (in *Network_PolicyMetaObservation) DeepCopy() *Network_PolicyMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyMetaParameters) DeepCopyInto(out *Network_PolicyMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyMetaParameters.
func (in *Network_PolicyMetaParameters) DeepCopy() *Network_PolicyMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyObservation) DeepCopyInto(out *Network_PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Network_PolicyMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Network_PolicyScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Network_PolicySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyObservation.
func (in *Network_PolicyObservation) DeepCopy() *Network_PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyParameters) DeepCopyInto(out *Network_PolicyParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Network_PolicyMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Network_PolicyScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Network_PolicySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyParameters.
func (in *Network_PolicyParameters) DeepCopy() *Network_PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeClusterGroupObservation) DeepCopyInto(out *Network_PolicyScopeClusterGroupObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeClusterGroupObservation.
func (in *Network_PolicyScopeClusterGroupObservation) DeepCopy() *Network_PolicyScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeClusterGroupParameters) DeepCopyInto(out *Network_PolicyScopeClusterGroupParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeClusterGroupParameters.
func (in *Network_PolicyScopeClusterGroupParameters) DeepCopy() *Network_PolicyScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeClusterObservation) DeepCopyInto(out *Network_PolicyScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeClusterObservation.
func (in *Network_PolicyScopeClusterObservation) DeepCopy() *Network_PolicyScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeClusterParameters) DeepCopyInto(out *Network_PolicyScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeClusterParameters.
func (in *Network_PolicyScopeClusterParameters) DeepCopy() *Network_PolicyScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeObservation) DeepCopyInto(out *Network_PolicyScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Network_PolicyScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Network_PolicyScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Network_PolicyScopeOrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Network_PolicyScopeWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeObservation.
func (in *Network_PolicyScopeObservation) DeepCopy() *Network_PolicyScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeOrganizationObservation) DeepCopyInto(out *Network_PolicyScopeOrganizationObservation) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeOrganizationObservation.
func (in *Network_PolicyScopeOrganizationObservation) DeepCopy() *Network_PolicyScopeOrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeOrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeOrganizationParameters) DeepCopyInto(out *Network_PolicyScopeOrganizationParameters) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeOrganizationParameters.
func (in *Network_PolicyScopeOrganizationParameters) DeepCopy() *Network_PolicyScopeOrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeOrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeParameters) DeepCopyInto(out *Network_PolicyScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Network_PolicyScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Network_PolicyScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Network_PolicyScopeOrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Network_PolicyScopeWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeParameters.
func (in *Network_PolicyScopeParameters) DeepCopy() *Network_PolicyScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeWorkspaceObservation) DeepCopyInto(out *Network_PolicyScopeWorkspaceObservation) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeWorkspaceObservation.
func (in *Network_PolicyScopeWorkspaceObservation) DeepCopy() *Network_PolicyScopeWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyScopeWorkspaceParameters) DeepCopyInto(out *Network_PolicyScopeWorkspaceParameters) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyScopeWorkspaceParameters.
func (in *Network_PolicyScopeWorkspaceParameters) DeepCopy() *Network_PolicyScopeWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyScopeWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpec) DeepCopyInto(out *Network_PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpec.
func (in *Network_PolicySpec) DeepCopy() *Network_PolicySpec {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecInputObservation) DeepCopyInto(out *Network_PolicySpecInputObservation) {
	*out = *in
	if in.AllowAll != nil {
		in, out := &in.AllowAll, &out.AllowAll
		*out = make([]AllowAllObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowAllEgress != nil {
		in, out := &in.AllowAllEgress, &out.AllowAllEgress
		*out = make([]AllowAllEgressParameters, len(*in))
		copy(*out, *in)
	}
	if in.AllowAllToPods != nil {
		in, out := &in.AllowAllToPods, &out.AllowAllToPods
		*out = make([]AllowAllToPodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomEgress != nil {
		in, out := &in.CustomEgress, &out.CustomEgress
		*out = make([]CustomEgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomIngress != nil {
		in, out := &in.CustomIngress, &out.CustomIngress
		*out = make([]CustomIngressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenyAll != nil {
		in, out := &in.DenyAll, &out.DenyAll
		*out = make([]DenyAllParameters, len(*in))
		copy(*out, *in)
	}
	if in.DenyAllEgress != nil {
		in, out := &in.DenyAllEgress, &out.DenyAllEgress
		*out = make([]DenyAllEgressParameters, len(*in))
		copy(*out, *in)
	}
	if in.DenyAllToPods != nil {
		in, out := &in.DenyAllToPods, &out.DenyAllToPods
		*out = make([]DenyAllToPodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecInputObservation.
func (in *Network_PolicySpecInputObservation) DeepCopy() *Network_PolicySpecInputObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecInputParameters) DeepCopyInto(out *Network_PolicySpecInputParameters) {
	*out = *in
	if in.AllowAll != nil {
		in, out := &in.AllowAll, &out.AllowAll
		*out = make([]AllowAllParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowAllEgress != nil {
		in, out := &in.AllowAllEgress, &out.AllowAllEgress
		*out = make([]AllowAllEgressParameters, len(*in))
		copy(*out, *in)
	}
	if in.AllowAllToPods != nil {
		in, out := &in.AllowAllToPods, &out.AllowAllToPods
		*out = make([]AllowAllToPodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomEgress != nil {
		in, out := &in.CustomEgress, &out.CustomEgress
		*out = make([]CustomEgressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomIngress != nil {
		in, out := &in.CustomIngress, &out.CustomIngress
		*out = make([]CustomIngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenyAll != nil {
		in, out := &in.DenyAll, &out.DenyAll
		*out = make([]DenyAllParameters, len(*in))
		copy(*out, *in)
	}
	if in.DenyAllEgress != nil {
		in, out := &in.DenyAllEgress, &out.DenyAllEgress
		*out = make([]DenyAllEgressParameters, len(*in))
		copy(*out, *in)
	}
	if in.DenyAllToPods != nil {
		in, out := &in.DenyAllToPods, &out.DenyAllToPods
		*out = make([]DenyAllToPodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecInputParameters.
func (in *Network_PolicySpecInputParameters) DeepCopy() *Network_PolicySpecInputParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecNamespaceSelectorMatchExpressionsObservation) DeepCopyInto(out *Network_PolicySpecNamespaceSelectorMatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecNamespaceSelectorMatchExpressionsObservation.
func (in *Network_PolicySpecNamespaceSelectorMatchExpressionsObservation) DeepCopy() *Network_PolicySpecNamespaceSelectorMatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecNamespaceSelectorMatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecNamespaceSelectorMatchExpressionsParameters) DeepCopyInto(out *Network_PolicySpecNamespaceSelectorMatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecNamespaceSelectorMatchExpressionsParameters.
func (in *Network_PolicySpecNamespaceSelectorMatchExpressionsParameters) DeepCopy() *Network_PolicySpecNamespaceSelectorMatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecNamespaceSelectorMatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecNamespaceSelectorObservation) DeepCopyInto(out *Network_PolicySpecNamespaceSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]Network_PolicySpecNamespaceSelectorMatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecNamespaceSelectorObservation.
func (in *Network_PolicySpecNamespaceSelectorObservation) DeepCopy() *Network_PolicySpecNamespaceSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecNamespaceSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecNamespaceSelectorParameters) DeepCopyInto(out *Network_PolicySpecNamespaceSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]Network_PolicySpecNamespaceSelectorMatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecNamespaceSelectorParameters.
func (in *Network_PolicySpecNamespaceSelectorParameters) DeepCopy() *Network_PolicySpecNamespaceSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecNamespaceSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecObservation) DeepCopyInto(out *Network_PolicySpecObservation) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]Network_PolicySpecInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]Network_PolicySpecNamespaceSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecObservation.
func (in *Network_PolicySpecObservation) DeepCopy() *Network_PolicySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicySpecParameters) DeepCopyInto(out *Network_PolicySpecParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]Network_PolicySpecInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]Network_PolicySpecNamespaceSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicySpecParameters.
func (in *Network_PolicySpecParameters) DeepCopy() *Network_PolicySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Network_PolicySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network_PolicyStatus) DeepCopyInto(out *Network_PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network_PolicyStatus.
func (in *Network_PolicyStatus) DeepCopy() *Network_PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(Network_PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePlacementObservation) DeepCopyInto(out *NodePlacementObservation) {
	*out = *in
	if in.AwsAvailabilityZone != nil {
		in, out := &in.AwsAvailabilityZone, &out.AwsAvailabilityZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePlacementObservation.
func (in *NodePlacementObservation) DeepCopy() *NodePlacementObservation {
	if in == nil {
		return nil
	}
	out := new(NodePlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePlacementParameters) DeepCopyInto(out *NodePlacementParameters) {
	*out = *in
	if in.AwsAvailabilityZone != nil {
		in, out := &in.AwsAvailabilityZone, &out.AwsAvailabilityZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePlacementParameters.
func (in *NodePlacementParameters) DeepCopy() *NodePlacementParameters {
	if in == nil {
		return nil
	}
	out := new(NodePlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsInfoObservation) DeepCopyInto(out *NodePoolsInfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsInfoObservation.
func (in *NodePoolsInfoObservation) DeepCopy() *NodePoolsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsInfoParameters) DeepCopyInto(out *NodePoolsInfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsInfoParameters.
func (in *NodePoolsInfoParameters) DeepCopy() *NodePoolsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsObservation) DeepCopyInto(out *NodePoolsObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]InfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodePoolsSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsObservation.
func (in *NodePoolsObservation) DeepCopy() *NodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsParameters) DeepCopyInto(out *NodePoolsParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]InfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodePoolsSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsParameters.
func (in *NodePoolsParameters) DeepCopy() *NodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsSpecObservation) DeepCopyInto(out *NodePoolsSpecObservation) {
	*out = *in
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]SpecTkgAwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsSpecObservation.
func (in *NodePoolsSpecObservation) DeepCopy() *NodePoolsSpecObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsSpecParameters) DeepCopyInto(out *NodePoolsSpecParameters) {
	*out = *in
	if in.TkgAws != nil {
		in, out := &in.TkgAws, &out.TkgAws
		*out = make([]SpecTkgAwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsSpecParameters.
func (in *NodePoolsSpecParameters) DeepCopy() *NodePoolsSpecParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolInfoObservation) DeepCopyInto(out *NodepoolInfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolInfoObservation.
func (in *NodepoolInfoObservation) DeepCopy() *NodepoolInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NodepoolInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolInfoParameters) DeepCopyInto(out *NodepoolInfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolInfoParameters.
func (in *NodepoolInfoParameters) DeepCopy() *NodepoolInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NodepoolInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolObservation) DeepCopyInto(out *NodepoolObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodepoolSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolObservation.
func (in *NodepoolObservation) DeepCopy() *NodepoolObservation {
	if in == nil {
		return nil
	}
	out := new(NodepoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolParameters) DeepCopyInto(out *NodepoolParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]NodepoolSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolParameters.
func (in *NodepoolParameters) DeepCopy() *NodepoolParameters {
	if in == nil {
		return nil
	}
	out := new(NodepoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolSpecObservation) DeepCopyInto(out *NodepoolSpecObservation) {
	*out = *in
	if in.AutoScalingConfig != nil {
		in, out := &in.AutoScalingConfig, &out.AutoScalingConfig
		*out = make([]AutoScalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(string)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpgradeConfig != nil {
		in, out := &in.UpgradeConfig, &out.UpgradeConfig
		*out = make([]UpgradeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolSpecObservation.
func (in *NodepoolSpecObservation) DeepCopy() *NodepoolSpecObservation {
	if in == nil {
		return nil
	}
	out := new(NodepoolSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodepoolSpecParameters) DeepCopyInto(out *NodepoolSpecParameters) {
	*out = *in
	if in.AutoScalingConfig != nil {
		in, out := &in.AutoScalingConfig, &out.AutoScalingConfig
		*out = make([]AutoScalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(string)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpgradeConfig != nil {
		in, out := &in.UpgradeConfig, &out.UpgradeConfig
		*out = make([]UpgradeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodepoolSpecParameters.
func (in *NodepoolSpecParameters) DeepCopy() *NodepoolSpecParameters {
	if in == nil {
		return nil
	}
	out := new(NodepoolSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationObservation) DeepCopyInto(out *OrganizationObservation) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationObservation.
func (in *OrganizationObservation) DeepCopy() *OrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationParameters) DeepCopyInto(out *OrganizationParameters) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationParameters.
func (in *OrganizationParameters) DeepCopy() *OrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageRefObservation) DeepCopyInto(out *PackageRefObservation) {
	*out = *in
	if in.PackageMetadataName != nil {
		in, out := &in.PackageMetadataName, &out.PackageMetadataName
		*out = new(string)
		**out = **in
	}
	if in.VersionSelection != nil {
		in, out := &in.VersionSelection, &out.VersionSelection
		*out = make([]VersionSelectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageRefObservation.
func (in *PackageRefObservation) DeepCopy() *PackageRefObservation {
	if in == nil {
		return nil
	}
	out := new(PackageRefObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageRefParameters) DeepCopyInto(out *PackageRefParameters) {
	*out = *in
	if in.PackageMetadataName != nil {
		in, out := &in.PackageMetadataName, &out.PackageMetadataName
		*out = new(string)
		**out = **in
	}
	if in.VersionSelection != nil {
		in, out := &in.VersionSelection, &out.VersionSelection
		*out = make([]VersionSelectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageRefParameters.
func (in *PackageRefParameters) DeepCopy() *PackageRefParameters {
	if in == nil {
		return nil
	}
	out := new(PackageRefParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_Install) DeepCopyInto(out *Package_Install) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_Install.
func (in *Package_Install) DeepCopy() *Package_Install {
	if in == nil {
		return nil
	}
	out := new(Package_Install)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Package_Install) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallList) DeepCopyInto(out *Package_InstallList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Package_Install, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallList.
func (in *Package_InstallList) DeepCopy() *Package_InstallList {
	if in == nil {
		return nil
	}
	out := new(Package_InstallList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Package_InstallList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallMetaObservation) DeepCopyInto(out *Package_InstallMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallMetaObservation.
func (in *Package_InstallMetaObservation) DeepCopy() *Package_InstallMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Package_InstallMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallMetaParameters) DeepCopyInto(out *Package_InstallMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallMetaParameters.
func (in *Package_InstallMetaParameters) DeepCopy() *Package_InstallMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Package_InstallMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallObservation) DeepCopyInto(out *Package_InstallObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Package_InstallMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Package_InstallScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Package_InstallSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallObservation.
func (in *Package_InstallObservation) DeepCopy() *Package_InstallObservation {
	if in == nil {
		return nil
	}
	out := new(Package_InstallObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallParameters) DeepCopyInto(out *Package_InstallParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Package_InstallMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Package_InstallScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Package_InstallSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallParameters.
func (in *Package_InstallParameters) DeepCopy() *Package_InstallParameters {
	if in == nil {
		return nil
	}
	out := new(Package_InstallParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallScopeClusterObservation) DeepCopyInto(out *Package_InstallScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallScopeClusterObservation.
func (in *Package_InstallScopeClusterObservation) DeepCopy() *Package_InstallScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Package_InstallScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallScopeClusterParameters) DeepCopyInto(out *Package_InstallScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallScopeClusterParameters.
func (in *Package_InstallScopeClusterParameters) DeepCopy() *Package_InstallScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Package_InstallScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallScopeObservation) DeepCopyInto(out *Package_InstallScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Package_InstallScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallScopeObservation.
func (in *Package_InstallScopeObservation) DeepCopy() *Package_InstallScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Package_InstallScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallScopeParameters) DeepCopyInto(out *Package_InstallScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Package_InstallScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallScopeParameters.
func (in *Package_InstallScopeParameters) DeepCopy() *Package_InstallScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Package_InstallScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallSpec) DeepCopyInto(out *Package_InstallSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallSpec.
func (in *Package_InstallSpec) DeepCopy() *Package_InstallSpec {
	if in == nil {
		return nil
	}
	out := new(Package_InstallSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallSpecObservation) DeepCopyInto(out *Package_InstallSpecObservation) {
	*out = *in
	if in.PackageRef != nil {
		in, out := &in.PackageRef, &out.PackageRef
		*out = make([]PackageRefObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleBindingScope != nil {
		in, out := &in.RoleBindingScope, &out.RoleBindingScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallSpecObservation.
func (in *Package_InstallSpecObservation) DeepCopy() *Package_InstallSpecObservation {
	if in == nil {
		return nil
	}
	out := new(Package_InstallSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallSpecParameters) DeepCopyInto(out *Package_InstallSpecParameters) {
	*out = *in
	if in.InlineValuesSecretRef != nil {
		in, out := &in.InlineValuesSecretRef, &out.InlineValuesSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.PackageRef != nil {
		in, out := &in.PackageRef, &out.PackageRef
		*out = make([]PackageRefParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallSpecParameters.
func (in *Package_InstallSpecParameters) DeepCopy() *Package_InstallSpecParameters {
	if in == nil {
		return nil
	}
	out := new(Package_InstallSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_InstallStatus) DeepCopyInto(out *Package_InstallStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_InstallStatus.
func (in *Package_InstallStatus) DeepCopy() *Package_InstallStatus {
	if in == nil {
		return nil
	}
	out := new(Package_InstallStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_Repository) DeepCopyInto(out *Package_Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_Repository.
func (in *Package_Repository) DeepCopy() *Package_Repository {
	if in == nil {
		return nil
	}
	out := new(Package_Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Package_Repository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryList) DeepCopyInto(out *Package_RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Package_Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryList.
func (in *Package_RepositoryList) DeepCopy() *Package_RepositoryList {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Package_RepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryMetaObservation) DeepCopyInto(out *Package_RepositoryMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryMetaObservation.
func (in *Package_RepositoryMetaObservation) DeepCopy() *Package_RepositoryMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryMetaParameters) DeepCopyInto(out *Package_RepositoryMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryMetaParameters.
func (in *Package_RepositoryMetaParameters) DeepCopy() *Package_RepositoryMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryObservation) DeepCopyInto(out *Package_RepositoryObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Package_RepositoryMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Package_RepositoryScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Package_RepositorySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = make([]StateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryObservation.
func (in *Package_RepositoryObservation) DeepCopy() *Package_RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryParameters) DeepCopyInto(out *Package_RepositoryParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Package_RepositoryMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Package_RepositoryScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Package_RepositorySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryParameters.
func (in *Package_RepositoryParameters) DeepCopy() *Package_RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryScopeClusterObservation) DeepCopyInto(out *Package_RepositoryScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryScopeClusterObservation.
func (in *Package_RepositoryScopeClusterObservation) DeepCopy() *Package_RepositoryScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryScopeClusterParameters) DeepCopyInto(out *Package_RepositoryScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryScopeClusterParameters.
func (in *Package_RepositoryScopeClusterParameters) DeepCopy() *Package_RepositoryScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryScopeObservation) DeepCopyInto(out *Package_RepositoryScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Package_RepositoryScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryScopeObservation.
func (in *Package_RepositoryScopeObservation) DeepCopy() *Package_RepositoryScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryScopeParameters) DeepCopyInto(out *Package_RepositoryScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Package_RepositoryScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryScopeParameters.
func (in *Package_RepositoryScopeParameters) DeepCopy() *Package_RepositoryScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositorySpec) DeepCopyInto(out *Package_RepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositorySpec.
func (in *Package_RepositorySpec) DeepCopy() *Package_RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(Package_RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositorySpecObservation) DeepCopyInto(out *Package_RepositorySpecObservation) {
	*out = *in
	if in.ImgpkgBundle != nil {
		in, out := &in.ImgpkgBundle, &out.ImgpkgBundle
		*out = make([]ImgpkgBundleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositorySpecObservation.
func (in *Package_RepositorySpecObservation) DeepCopy() *Package_RepositorySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Package_RepositorySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositorySpecParameters) DeepCopyInto(out *Package_RepositorySpecParameters) {
	*out = *in
	if in.ImgpkgBundle != nil {
		in, out := &in.ImgpkgBundle, &out.ImgpkgBundle
		*out = make([]ImgpkgBundleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositorySpecParameters.
func (in *Package_RepositorySpecParameters) DeepCopy() *Package_RepositorySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Package_RepositorySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package_RepositoryStatus) DeepCopyInto(out *Package_RepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package_RepositoryStatus.
func (in *Package_RepositoryStatus) DeepCopy() *Package_RepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(Package_RepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersObservation) DeepCopyInto(out *ParametersObservation) {
	*out = *in
	if in.DisallowedSubjects != nil {
		in, out := &in.DisallowedSubjects, &out.DisallowedSubjects
		*out = make([]DisallowedSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersObservation.
func (in *ParametersObservation) DeepCopy() *ParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersParameters) DeepCopyInto(out *ParametersParameters) {
	*out = *in
	if in.DisallowedSubjects != nil {
		in, out := &in.DisallowedSubjects, &out.DisallowedSubjects
		*out = make([]DisallowedSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersParameters.
func (in *ParametersParameters) DeepCopy() *ParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodsObservation) DeepCopyInto(out *PodsObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodsObservation.
func (in *PodsObservation) DeepCopy() *PodsObservation {
	if in == nil {
		return nil
	}
	out := new(PodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodsParameters) DeepCopyInto(out *PodsParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodsParameters.
func (in *PodsParameters) DeepCopy() *PodsParameters {
	if in == nil {
		return nil
	}
	out := new(PodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortsObservation) DeepCopyInto(out *PortsObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortsObservation.
func (in *PortsObservation) DeepCopy() *PortsObservation {
	if in == nil {
		return nil
	}
	out := new(PortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortsParameters) DeepCopyInto(out *PortsParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortsParameters.
func (in *PortsParameters) DeepCopy() *PortsParameters {
	if in == nil {
		return nil
	}
	out := new(PortsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderObservation) DeepCopyInto(out *ProviderObservation) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]SubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderObservation.
func (in *ProviderObservation) DeepCopy() *ProviderObservation {
	if in == nil {
		return nil
	}
	out := new(ProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderParameters) DeepCopyInto(out *ProviderParameters) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]SubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderParameters.
func (in *ProviderParameters) DeepCopy() *ProviderParameters {
	if in == nil {
		return nil
	}
	out := new(ProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesObservation) DeepCopyInto(out *RangesObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesObservation.
func (in *RangesObservation) DeepCopy() *RangesObservation {
	if in == nil {
		return nil
	}
	out := new(RangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesParameters) DeepCopyInto(out *RangesParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesParameters.
func (in *RangesParameters) DeepCopy() *RangesParameters {
	if in == nil {
		return nil
	}
	out := new(RangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefObservation) DeepCopyInto(out *RefObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.Semver != nil {
		in, out := &in.Semver, &out.Semver
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefObservation.
func (in *RefObservation) DeepCopy() *RefObservation {
	if in == nil {
		return nil
	}
	out := new(RefObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefParameters) DeepCopyInto(out *RefParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.Semver != nil {
		in, out := &in.Semver, &out.Semver
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefParameters.
func (in *RefParameters) DeepCopy() *RefParameters {
	if in == nil {
		return nil
	}
	out := new(RefParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteAccessObservation) DeepCopyInto(out *RemoteAccessObservation) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteAccessObservation.
func (in *RemoteAccessObservation) DeepCopy() *RemoteAccessObservation {
	if in == nil {
		return nil
	}
	out := new(RemoteAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteAccessParameters) DeepCopyInto(out *RemoteAccessParameters) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteAccessParameters.
func (in *RemoteAccessParameters) DeepCopy() *RemoteAccessParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_Credential) DeepCopyInto(out *Repository_Credential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_Credential.
func (in *Repository_Credential) DeepCopy() *Repository_Credential {
	if in == nil {
		return nil
	}
	out := new(Repository_Credential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repository_Credential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialList) DeepCopyInto(out *Repository_CredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repository_Credential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialList.
func (in *Repository_CredentialList) DeepCopy() *Repository_CredentialList {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repository_CredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialMetaObservation) DeepCopyInto(out *Repository_CredentialMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialMetaObservation.
func (in *Repository_CredentialMetaObservation) DeepCopy() *Repository_CredentialMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialMetaParameters) DeepCopyInto(out *Repository_CredentialMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialMetaParameters.
func (in *Repository_CredentialMetaParameters) DeepCopy() *Repository_CredentialMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialObservation) DeepCopyInto(out *Repository_CredentialObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Repository_CredentialMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Repository_CredentialScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Repository_CredentialSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialObservation.
func (in *Repository_CredentialObservation) DeepCopy() *Repository_CredentialObservation {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialParameters) DeepCopyInto(out *Repository_CredentialParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Repository_CredentialMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Repository_CredentialScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Repository_CredentialSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialParameters.
func (in *Repository_CredentialParameters) DeepCopy() *Repository_CredentialParameters {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialScopeClusterGroupObservation) DeepCopyInto(out *Repository_CredentialScopeClusterGroupObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialScopeClusterGroupObservation.
func (in *Repository_CredentialScopeClusterGroupObservation) DeepCopy() *Repository_CredentialScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialScopeClusterGroupParameters) DeepCopyInto(out *Repository_CredentialScopeClusterGroupParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialScopeClusterGroupParameters.
func (in *Repository_CredentialScopeClusterGroupParameters) DeepCopy() *Repository_CredentialScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialScopeClusterObservation) DeepCopyInto(out *Repository_CredentialScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialScopeClusterObservation.
func (in *Repository_CredentialScopeClusterObservation) DeepCopy() *Repository_CredentialScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialScopeClusterParameters) DeepCopyInto(out *Repository_CredentialScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialScopeClusterParameters.
func (in *Repository_CredentialScopeClusterParameters) DeepCopy() *Repository_CredentialScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialScopeObservation) DeepCopyInto(out *Repository_CredentialScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Repository_CredentialScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Repository_CredentialScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialScopeObservation.
func (in *Repository_CredentialScopeObservation) DeepCopy() *Repository_CredentialScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialScopeParameters) DeepCopyInto(out *Repository_CredentialScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Repository_CredentialScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Repository_CredentialScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialScopeParameters.
func (in *Repository_CredentialScopeParameters) DeepCopy() *Repository_CredentialScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialSpec) DeepCopyInto(out *Repository_CredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialSpec.
func (in *Repository_CredentialSpec) DeepCopy() *Repository_CredentialSpec {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialSpecObservation) DeepCopyInto(out *Repository_CredentialSpecObservation) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]SpecDataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialSpecObservation.
func (in *Repository_CredentialSpecObservation) DeepCopy() *Repository_CredentialSpecObservation {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialSpecParameters) DeepCopyInto(out *Repository_CredentialSpecParameters) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]SpecDataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialSpecParameters.
func (in *Repository_CredentialSpecParameters) DeepCopy() *Repository_CredentialSpecParameters {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository_CredentialStatus) DeepCopyInto(out *Repository_CredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository_CredentialStatus.
func (in *Repository_CredentialStatus) DeepCopy() *Repository_CredentialStatus {
	if in == nil {
		return nil
	}
	out := new(Repository_CredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireDigestObservation) DeepCopyInto(out *RequireDigestObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireDigestObservation.
func (in *RequireDigestObservation) DeepCopy() *RequireDigestObservation {
	if in == nil {
		return nil
	}
	out := new(RequireDigestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireDigestParameters) DeepCopyInto(out *RequireDigestParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireDigestParameters.
func (in *RequireDigestParameters) DeepCopy() *RequireDigestParameters {
	if in == nil {
		return nil
	}
	out := new(RequireDigestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsObservation) DeepCopyInto(out *RoleBindingsObservation) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsObservation.
func (in *RoleBindingsObservation) DeepCopy() *RoleBindingsObservation {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsParameters) DeepCopyInto(out *RoleBindingsParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsParameters.
func (in *RoleBindingsParameters) DeepCopy() *RoleBindingsParameters {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpecCustomIPObservation) DeepCopyInto(out *RuleSpecCustomIPObservation) {
	*out = *in
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = make([]CustomIPIPBlockObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpecCustomIPObservation.
func (in *RuleSpecCustomIPObservation) DeepCopy() *RuleSpecCustomIPObservation {
	if in == nil {
		return nil
	}
	out := new(RuleSpecCustomIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpecCustomIPParameters) DeepCopyInto(out *RuleSpecCustomIPParameters) {
	*out = *in
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = make([]CustomIPIPBlockParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpecCustomIPParameters.
func (in *RuleSpecCustomIPParameters) DeepCopy() *RuleSpecCustomIPParameters {
	if in == nil {
		return nil
	}
	out := new(RuleSpecCustomIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpecCustomSelectorObservation) DeepCopyInto(out *RuleSpecCustomSelectorObservation) {
	*out = *in
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpecCustomSelectorObservation.
func (in *RuleSpecCustomSelectorObservation) DeepCopy() *RuleSpecCustomSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(RuleSpecCustomSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpecCustomSelectorParameters) DeepCopyInto(out *RuleSpecCustomSelectorParameters) {
	*out = *in
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpecCustomSelectorParameters.
func (in *RuleSpecCustomSelectorParameters) DeepCopy() *RuleSpecCustomSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(RuleSpecCustomSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpecObservation) DeepCopyInto(out *RuleSpecObservation) {
	*out = *in
	if in.CustomIP != nil {
		in, out := &in.CustomIP, &out.CustomIP
		*out = make([]CustomIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSelector != nil {
		in, out := &in.CustomSelector, &out.CustomSelector
		*out = make([]CustomSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpecObservation.
func (in *RuleSpecObservation) DeepCopy() *RuleSpecObservation {
	if in == nil {
		return nil
	}
	out := new(RuleSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpecParameters) DeepCopyInto(out *RuleSpecParameters) {
	*out = *in
	if in.CustomIP != nil {
		in, out := &in.CustomIP, &out.CustomIP
		*out = make([]CustomIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSelector != nil {
		in, out := &in.CustomSelector, &out.CustomSelector
		*out = make([]CustomSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpecParameters.
func (in *RuleSpecParameters) DeepCopy() *RuleSpecParameters {
	if in == nil {
		return nil
	}
	out := new(RuleSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Imagename != nil {
		in, out := &in.Imagename, &out.Imagename
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Imagename != nil {
		in, out := &in.Imagename, &out.Imagename
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesPortsObservation) DeepCopyInto(out *RulesPortsObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesPortsObservation.
func (in *RulesPortsObservation) DeepCopy() *RulesPortsObservation {
	if in == nil {
		return nil
	}
	out := new(RulesPortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesPortsParameters) DeepCopyInto(out *RulesPortsParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesPortsParameters.
func (in *RulesPortsParameters) DeepCopy() *RulesPortsParameters {
	if in == nil {
		return nil
	}
	out := new(RulesPortsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesRuleSpecObservation) DeepCopyInto(out *RulesRuleSpecObservation) {
	*out = *in
	if in.CustomIP != nil {
		in, out := &in.CustomIP, &out.CustomIP
		*out = make([]RuleSpecCustomIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSelector != nil {
		in, out := &in.CustomSelector, &out.CustomSelector
		*out = make([]RuleSpecCustomSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesRuleSpecObservation.
func (in *RulesRuleSpecObservation) DeepCopy() *RulesRuleSpecObservation {
	if in == nil {
		return nil
	}
	out := new(RulesRuleSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesRuleSpecParameters) DeepCopyInto(out *RulesRuleSpecParameters) {
	*out = *in
	if in.CustomIP != nil {
		in, out := &in.CustomIP, &out.CustomIP
		*out = make([]RuleSpecCustomIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSelector != nil {
		in, out := &in.CustomSelector, &out.CustomSelector
		*out = make([]RuleSpecCustomSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesRuleSpecParameters.
func (in *RulesRuleSpecParameters) DeepCopy() *RulesRuleSpecParameters {
	if in == nil {
		return nil
	}
	out := new(RulesRuleSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesTagObservation) DeepCopyInto(out *RulesTagObservation) {
	*out = *in
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesTagObservation.
func (in *RulesTagObservation) DeepCopy() *RulesTagObservation {
	if in == nil {
		return nil
	}
	out := new(RulesTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesTagParameters) DeepCopyInto(out *RulesTagParameters) {
	*out = *in
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesTagParameters.
func (in *RulesTagParameters) DeepCopy() *RulesTagParameters {
	if in == nil {
		return nil
	}
	out := new(RulesTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsGroupObservation) DeepCopyInto(out *RunAsGroupObservation) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RunAsGroupRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsGroupObservation.
func (in *RunAsGroupObservation) DeepCopy() *RunAsGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsGroupParameters) DeepCopyInto(out *RunAsGroupParameters) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RunAsGroupRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsGroupParameters.
func (in *RunAsGroupParameters) DeepCopy() *RunAsGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsGroupRangesObservation) DeepCopyInto(out *RunAsGroupRangesObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsGroupRangesObservation.
func (in *RunAsGroupRangesObservation) DeepCopy() *RunAsGroupRangesObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsGroupRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsGroupRangesParameters) DeepCopyInto(out *RunAsGroupRangesParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsGroupRangesParameters.
func (in *RunAsGroupRangesParameters) DeepCopy() *RunAsGroupRangesParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsGroupRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsUserObservation) DeepCopyInto(out *RunAsUserObservation) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RunAsUserRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsUserObservation.
func (in *RunAsUserObservation) DeepCopy() *RunAsUserObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsUserParameters) DeepCopyInto(out *RunAsUserParameters) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RunAsUserRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsUserParameters.
func (in *RunAsUserParameters) DeepCopy() *RunAsUserParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsUserRangesObservation) DeepCopyInto(out *RunAsUserRangesObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsUserRangesObservation.
func (in *RunAsUserRangesObservation) DeepCopy() *RunAsUserRangesObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsUserRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsUserRangesParameters) DeepCopyInto(out *RunAsUserRangesParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsUserRangesParameters.
func (in *RunAsUserRangesParameters) DeepCopy() *RunAsUserRangesParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsUserRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyObservation) DeepCopyInto(out *SSHKeyObservation) {
	*out = *in
	if in.KnownHosts != nil {
		in, out := &in.KnownHosts, &out.KnownHosts
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyObservation.
func (in *SSHKeyObservation) DeepCopy() *SSHKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SSHKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyParameters) DeepCopyInto(out *SSHKeyParameters) {
	*out = *in
	out.IdentitySecretRef = in.IdentitySecretRef
	if in.KnownHosts != nil {
		in, out := &in.KnownHosts, &out.KnownHosts
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyParameters.
func (in *SSHKeyParameters) DeepCopy() *SSHKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigObservation) DeepCopyInto(out *ScalingConfigObservation) {
	*out = *in
	if in.DesiredSize != nil {
		in, out := &in.DesiredSize, &out.DesiredSize
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigObservation.
func (in *ScalingConfigObservation) DeepCopy() *ScalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigParameters) DeepCopyInto(out *ScalingConfigParameters) {
	*out = *in
	if in.DesiredSize != nil {
		in, out := &in.DesiredSize, &out.DesiredSize
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigParameters.
func (in *ScalingConfigParameters) DeepCopy() *ScalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeClusterGroupObservation) DeepCopyInto(out *ScopeClusterGroupObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeClusterGroupObservation.
func (in *ScopeClusterGroupObservation) DeepCopy() *ScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeClusterGroupParameters) DeepCopyInto(out *ScopeClusterGroupParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeClusterGroupParameters.
func (in *ScopeClusterGroupParameters) DeepCopy() *ScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeClusterObservation) DeepCopyInto(out *ScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeClusterObservation.
func (in *ScopeClusterObservation) DeepCopy() *ScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeClusterParameters) DeepCopyInto(out *ScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeClusterParameters.
func (in *ScopeClusterParameters) DeepCopy() *ScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeObservation) DeepCopyInto(out *ScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]ScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]ClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]OrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ScopeWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeObservation.
func (in *ScopeObservation) DeepCopy() *ScopeObservation {
	if in == nil {
		return nil
	}
	out := new(ScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeOrganizationObservation) DeepCopyInto(out *ScopeOrganizationObservation) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeOrganizationObservation.
func (in *ScopeOrganizationObservation) DeepCopy() *ScopeOrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(ScopeOrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeOrganizationParameters) DeepCopyInto(out *ScopeOrganizationParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeOrganizationParameters.
func (in *ScopeOrganizationParameters) DeepCopy() *ScopeOrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(ScopeOrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeParameters) DeepCopyInto(out *ScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]ScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]ClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]OrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ScopeWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeParameters.
func (in *ScopeParameters) DeepCopy() *ScopeParameters {
	if in == nil {
		return nil
	}
	out := new(ScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeWorkspaceObservation) DeepCopyInto(out *ScopeWorkspaceObservation) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeWorkspaceObservation.
func (in *ScopeWorkspaceObservation) DeepCopy() *ScopeWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(ScopeWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeWorkspaceParameters) DeepCopyInto(out *ScopeWorkspaceParameters) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeWorkspaceParameters.
func (in *ScopeWorkspaceParameters) DeepCopy() *ScopeWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(ScopeWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeccompObservation) DeepCopyInto(out *SeccompObservation) {
	*out = *in
	if in.AllowedLocalhostFiles != nil {
		in, out := &in.AllowedLocalhostFiles, &out.AllowedLocalhostFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedProfiles != nil {
		in, out := &in.AllowedProfiles, &out.AllowedProfiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeccompObservation.
func (in *SeccompObservation) DeepCopy() *SeccompObservation {
	if in == nil {
		return nil
	}
	out := new(SeccompObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeccompParameters) DeepCopyInto(out *SeccompParameters) {
	*out = *in
	if in.AllowedLocalhostFiles != nil {
		in, out := &in.AllowedLocalhostFiles, &out.AllowedLocalhostFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedProfiles != nil {
		in, out := &in.AllowedProfiles, &out.AllowedProfiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeccompParameters.
func (in *SeccompParameters) DeepCopy() *SeccompParameters {
	if in == nil {
		return nil
	}
	out := new(SeccompParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityObservation) DeepCopyInto(out *SecurityObservation) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityObservation.
func (in *SecurityObservation) DeepCopy() *SecurityObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityParameters) DeepCopyInto(out *SecurityParameters) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityParameters.
func (in *SecurityParameters) DeepCopy() *SecurityParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_Policy) DeepCopyInto(out *Security_Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_Policy.
func (in *Security_Policy) DeepCopy() *Security_Policy {
	if in == nil {
		return nil
	}
	out := new(Security_Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Security_Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyList) DeepCopyInto(out *Security_PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Security_Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyList.
func (in *Security_PolicyList) DeepCopy() *Security_PolicyList {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Security_PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyMetaObservation) DeepCopyInto(out *Security_PolicyMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyMetaObservation.
func (in *Security_PolicyMetaObservation) DeepCopy() *Security_PolicyMetaObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyMetaParameters) DeepCopyInto(out *Security_PolicyMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyMetaParameters.
func (in *Security_PolicyMetaParameters) DeepCopy() *Security_PolicyMetaParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyObservation) DeepCopyInto(out *Security_PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Security_PolicyMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Security_PolicyScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Security_PolicySpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyObservation.
func (in *Security_PolicyObservation) DeepCopy() *Security_PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyParameters) DeepCopyInto(out *Security_PolicyParameters) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]Security_PolicyMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]Security_PolicyScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]Security_PolicySpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyParameters.
func (in *Security_PolicyParameters) DeepCopy() *Security_PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeClusterGroupObservation) DeepCopyInto(out *Security_PolicyScopeClusterGroupObservation) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeClusterGroupObservation.
func (in *Security_PolicyScopeClusterGroupObservation) DeepCopy() *Security_PolicyScopeClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeClusterGroupParameters) DeepCopyInto(out *Security_PolicyScopeClusterGroupParameters) {
	*out = *in
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeClusterGroupParameters.
func (in *Security_PolicyScopeClusterGroupParameters) DeepCopy() *Security_PolicyScopeClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeClusterObservation) DeepCopyInto(out *Security_PolicyScopeClusterObservation) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeClusterObservation.
func (in *Security_PolicyScopeClusterObservation) DeepCopy() *Security_PolicyScopeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeClusterParameters) DeepCopyInto(out *Security_PolicyScopeClusterParameters) {
	*out = *in
	if in.ManagementClusterName != nil {
		in, out := &in.ManagementClusterName, &out.ManagementClusterName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvisionerName != nil {
		in, out := &in.ProvisionerName, &out.ProvisionerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeClusterParameters.
func (in *Security_PolicyScopeClusterParameters) DeepCopy() *Security_PolicyScopeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeObservation) DeepCopyInto(out *Security_PolicyScopeObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Security_PolicyScopeClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Security_PolicyScopeClusterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Security_PolicyScopeOrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Security_PolicyScopeWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeObservation.
func (in *Security_PolicyScopeObservation) DeepCopy() *Security_PolicyScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeOrganizationObservation) DeepCopyInto(out *Security_PolicyScopeOrganizationObservation) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeOrganizationObservation.
func (in *Security_PolicyScopeOrganizationObservation) DeepCopy() *Security_PolicyScopeOrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeOrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeOrganizationParameters) DeepCopyInto(out *Security_PolicyScopeOrganizationParameters) {
	*out = *in
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeOrganizationParameters.
func (in *Security_PolicyScopeOrganizationParameters) DeepCopy() *Security_PolicyScopeOrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeOrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeParameters) DeepCopyInto(out *Security_PolicyScopeParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]Security_PolicyScopeClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = make([]Security_PolicyScopeClusterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Organization != nil {
		in, out := &in.Organization, &out.Organization
		*out = make([]Security_PolicyScopeOrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]Security_PolicyScopeWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeParameters.
func (in *Security_PolicyScopeParameters) DeepCopy() *Security_PolicyScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeWorkspaceObservation) DeepCopyInto(out *Security_PolicyScopeWorkspaceObservation) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeWorkspaceObservation.
func (in *Security_PolicyScopeWorkspaceObservation) DeepCopy() *Security_PolicyScopeWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyScopeWorkspaceParameters) DeepCopyInto(out *Security_PolicyScopeWorkspaceParameters) {
	*out = *in
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyScopeWorkspaceParameters.
func (in *Security_PolicyScopeWorkspaceParameters) DeepCopy() *Security_PolicyScopeWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyScopeWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpec) DeepCopyInto(out *Security_PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpec.
func (in *Security_PolicySpec) DeepCopy() *Security_PolicySpec {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecInputObservation) DeepCopyInto(out *Security_PolicySpecInputObservation) {
	*out = *in
	if in.Baseline != nil {
		in, out := &in.Baseline, &out.Baseline
		*out = make([]BaselineObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]SpecInputCustomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = make([]StrictObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecInputObservation.
func (in *Security_PolicySpecInputObservation) DeepCopy() *Security_PolicySpecInputObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecInputParameters) DeepCopyInto(out *Security_PolicySpecInputParameters) {
	*out = *in
	if in.Baseline != nil {
		in, out := &in.Baseline, &out.Baseline
		*out = make([]BaselineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]SpecInputCustomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = make([]StrictParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecInputParameters.
func (in *Security_PolicySpecInputParameters) DeepCopy() *Security_PolicySpecInputParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecNamespaceSelectorMatchExpressionsObservation) DeepCopyInto(out *Security_PolicySpecNamespaceSelectorMatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecNamespaceSelectorMatchExpressionsObservation.
func (in *Security_PolicySpecNamespaceSelectorMatchExpressionsObservation) DeepCopy() *Security_PolicySpecNamespaceSelectorMatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecNamespaceSelectorMatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecNamespaceSelectorMatchExpressionsParameters) DeepCopyInto(out *Security_PolicySpecNamespaceSelectorMatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecNamespaceSelectorMatchExpressionsParameters.
func (in *Security_PolicySpecNamespaceSelectorMatchExpressionsParameters) DeepCopy() *Security_PolicySpecNamespaceSelectorMatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecNamespaceSelectorMatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecNamespaceSelectorObservation) DeepCopyInto(out *Security_PolicySpecNamespaceSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]Security_PolicySpecNamespaceSelectorMatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecNamespaceSelectorObservation.
func (in *Security_PolicySpecNamespaceSelectorObservation) DeepCopy() *Security_PolicySpecNamespaceSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecNamespaceSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecNamespaceSelectorParameters) DeepCopyInto(out *Security_PolicySpecNamespaceSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]Security_PolicySpecNamespaceSelectorMatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecNamespaceSelectorParameters.
func (in *Security_PolicySpecNamespaceSelectorParameters) DeepCopy() *Security_PolicySpecNamespaceSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecNamespaceSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecObservation) DeepCopyInto(out *Security_PolicySpecObservation) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]Security_PolicySpecInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]Security_PolicySpecNamespaceSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecObservation.
func (in *Security_PolicySpecObservation) DeepCopy() *Security_PolicySpecObservation {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicySpecParameters) DeepCopyInto(out *Security_PolicySpecParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]Security_PolicySpecInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = make([]Security_PolicySpecNamespaceSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicySpecParameters.
func (in *Security_PolicySpecParameters) DeepCopy() *Security_PolicySpecParameters {
	if in == nil {
		return nil
	}
	out := new(Security_PolicySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security_PolicyStatus) DeepCopyInto(out *Security_PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security_PolicyStatus.
func (in *Security_PolicyStatus) DeepCopy() *Security_PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(Security_PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkObservation) DeepCopyInto(out *SettingsNetworkObservation) {
	*out = *in
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]NetworkPodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]NetworkServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkObservation.
func (in *SettingsNetworkObservation) DeepCopy() *SettingsNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkParameters) DeepCopyInto(out *SettingsNetworkParameters) {
	*out = *in
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]NetworkPodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]NetworkServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkParameters.
func (in *SettingsNetworkParameters) DeepCopy() *SettingsNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkPodsObservation) DeepCopyInto(out *SettingsNetworkPodsObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkPodsObservation.
func (in *SettingsNetworkPodsObservation) DeepCopy() *SettingsNetworkPodsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkPodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkPodsParameters) DeepCopyInto(out *SettingsNetworkPodsParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkPodsParameters.
func (in *SettingsNetworkPodsParameters) DeepCopy() *SettingsNetworkPodsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkPodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkServicesObservation) DeepCopyInto(out *SettingsNetworkServicesObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkServicesObservation.
func (in *SettingsNetworkServicesObservation) DeepCopy() *SettingsNetworkServicesObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsNetworkServicesParameters) DeepCopyInto(out *SettingsNetworkServicesParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsNetworkServicesParameters.
func (in *SettingsNetworkServicesParameters) DeepCopy() *SettingsNetworkServicesParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsNetworkServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityObservation) DeepCopyInto(out *SettingsSecurityObservation) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityObservation.
func (in *SettingsSecurityObservation) DeepCopy() *SettingsSecurityObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityParameters) DeepCopyInto(out *SettingsSecurityParameters) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityParameters.
func (in *SettingsSecurityParameters) DeepCopy() *SettingsSecurityParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuObservation) DeepCopyInto(out *SkuObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuObservation.
func (in *SkuObservation) DeepCopy() *SkuObservation {
	if in == nil {
		return nil
	}
	out := new(SkuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuParameters) DeepCopyInto(out *SkuParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuParameters.
func (in *SkuParameters) DeepCopy() *SkuParameters {
	if in == nil {
		return nil
	}
	out := new(SkuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmallObservation) DeepCopyInto(out *SmallObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmallObservation.
func (in *SmallObservation) DeepCopy() *SmallObservation {
	if in == nil {
		return nil
	}
	out := new(SmallObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmallParameters) DeepCopyInto(out *SmallParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmallParameters.
func (in *SmallParameters) DeepCopy() *SmallParameters {
	if in == nil {
		return nil
	}
	out := new(SmallParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecConfigObservation) DeepCopyInto(out *SpecConfigObservation) {
	*out = *in
	if in.KubernetesNetworkConfig != nil {
		in, out := &in.KubernetesNetworkConfig, &out.KubernetesNetworkConfig
		*out = make([]KubernetesNetworkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]ConfigVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecConfigObservation.
func (in *SpecConfigObservation) DeepCopy() *SpecConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SpecConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecConfigParameters) DeepCopyInto(out *SpecConfigParameters) {
	*out = *in
	if in.KubernetesNetworkConfig != nil {
		in, out := &in.KubernetesNetworkConfig, &out.KubernetesNetworkConfig
		*out = make([]KubernetesNetworkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]ConfigVPCParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecConfigParameters.
func (in *SpecConfigParameters) DeepCopy() *SpecConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SpecConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecDataObservation) DeepCopyInto(out *SpecDataObservation) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = make([]SSHKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsernamePassword != nil {
		in, out := &in.UsernamePassword, &out.UsernamePassword
		*out = make([]UsernamePasswordObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecDataObservation.
func (in *SpecDataObservation) DeepCopy() *SpecDataObservation {
	if in == nil {
		return nil
	}
	out := new(SpecDataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecDataParameters) DeepCopyInto(out *SpecDataParameters) {
	*out = *in
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = make([]SSHKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsernamePassword != nil {
		in, out := &in.UsernamePassword, &out.UsernamePassword
		*out = make([]UsernamePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecDataParameters.
func (in *SpecDataParameters) DeepCopy() *SpecDataParameters {
	if in == nil {
		return nil
	}
	out := new(SpecDataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInputCustomObservation) DeepCopyInto(out *SpecInputCustomObservation) {
	*out = *in
	if in.AllowHostNamespaceSharing != nil {
		in, out := &in.AllowHostNamespaceSharing, &out.AllowHostNamespaceSharing
		*out = new(bool)
		**out = **in
	}
	if in.AllowHostNetwork != nil {
		in, out := &in.AllowHostNetwork, &out.AllowHostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrivilegeEscalation != nil {
		in, out := &in.AllowPrivilegeEscalation, &out.AllowPrivilegeEscalation
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrivilegedContainers != nil {
		in, out := &in.AllowPrivilegedContainers, &out.AllowPrivilegedContainers
		*out = new(bool)
		**out = **in
	}
	if in.AllowedHostPaths != nil {
		in, out := &in.AllowedHostPaths, &out.AllowedHostPaths
		*out = make([]AllowedHostPathsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedHostPortRange != nil {
		in, out := &in.AllowedHostPortRange, &out.AllowedHostPortRange
		*out = make([]AllowedHostPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedSeLinuxOptions != nil {
		in, out := &in.AllowedSeLinuxOptions, &out.AllowedSeLinuxOptions
		*out = make([]AllowedSeLinuxOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedVolumes != nil {
		in, out := &in.AllowedVolumes, &out.AllowedVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.DisableNativePsp != nil {
		in, out := &in.DisableNativePsp, &out.DisableNativePsp
		*out = new(bool)
		**out = **in
	}
	if in.FsGroup != nil {
		in, out := &in.FsGroup, &out.FsGroup
		*out = make([]FsGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxCapabilities != nil {
		in, out := &in.LinuxCapabilities, &out.LinuxCapabilities
		*out = make([]LinuxCapabilitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadOnlyRootFileSystem != nil {
		in, out := &in.ReadOnlyRootFileSystem, &out.ReadOnlyRootFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.RunAsGroup != nil {
		in, out := &in.RunAsGroup, &out.RunAsGroup
		*out = make([]RunAsGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = make([]RunAsUserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Seccomp != nil {
		in, out := &in.Seccomp, &out.Seccomp
		*out = make([]SeccompObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SupplementalGroups != nil {
		in, out := &in.SupplementalGroups, &out.SupplementalGroups
		*out = make([]SupplementalGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]SysctlsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInputCustomObservation.
func (in *SpecInputCustomObservation) DeepCopy() *SpecInputCustomObservation {
	if in == nil {
		return nil
	}
	out := new(SpecInputCustomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInputCustomParameters) DeepCopyInto(out *SpecInputCustomParameters) {
	*out = *in
	if in.AllowHostNamespaceSharing != nil {
		in, out := &in.AllowHostNamespaceSharing, &out.AllowHostNamespaceSharing
		*out = new(bool)
		**out = **in
	}
	if in.AllowHostNetwork != nil {
		in, out := &in.AllowHostNetwork, &out.AllowHostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrivilegeEscalation != nil {
		in, out := &in.AllowPrivilegeEscalation, &out.AllowPrivilegeEscalation
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrivilegedContainers != nil {
		in, out := &in.AllowPrivilegedContainers, &out.AllowPrivilegedContainers
		*out = new(bool)
		**out = **in
	}
	if in.AllowedHostPaths != nil {
		in, out := &in.AllowedHostPaths, &out.AllowedHostPaths
		*out = make([]AllowedHostPathsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedHostPortRange != nil {
		in, out := &in.AllowedHostPortRange, &out.AllowedHostPortRange
		*out = make([]AllowedHostPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedSeLinuxOptions != nil {
		in, out := &in.AllowedSeLinuxOptions, &out.AllowedSeLinuxOptions
		*out = make([]AllowedSeLinuxOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedVolumes != nil {
		in, out := &in.AllowedVolumes, &out.AllowedVolumes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.DisableNativePsp != nil {
		in, out := &in.DisableNativePsp, &out.DisableNativePsp
		*out = new(bool)
		**out = **in
	}
	if in.FsGroup != nil {
		in, out := &in.FsGroup, &out.FsGroup
		*out = make([]FsGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxCapabilities != nil {
		in, out := &in.LinuxCapabilities, &out.LinuxCapabilities
		*out = make([]LinuxCapabilitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadOnlyRootFileSystem != nil {
		in, out := &in.ReadOnlyRootFileSystem, &out.ReadOnlyRootFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.RunAsGroup != nil {
		in, out := &in.RunAsGroup, &out.RunAsGroup
		*out = make([]RunAsGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = make([]RunAsUserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Seccomp != nil {
		in, out := &in.Seccomp, &out.Seccomp
		*out = make([]SeccompParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SupplementalGroups != nil {
		in, out := &in.SupplementalGroups, &out.SupplementalGroups
		*out = make([]SupplementalGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]SysctlsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInputCustomParameters.
func (in *SpecInputCustomParameters) DeepCopy() *SpecInputCustomParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInputCustomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInputObservation) DeepCopyInto(out *SpecInputObservation) {
	*out = *in
	if in.AllowedNameTag != nil {
		in, out := &in.AllowedNameTag, &out.AllowedNameTag
		*out = make([]AllowedNameTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockLatestTag != nil {
		in, out := &in.BlockLatestTag, &out.BlockLatestTag
		*out = make([]BlockLatestTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]CustomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireDigest != nil {
		in, out := &in.RequireDigest, &out.RequireDigest
		*out = make([]RequireDigestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInputObservation.
func (in *SpecInputObservation) DeepCopy() *SpecInputObservation {
	if in == nil {
		return nil
	}
	out := new(SpecInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInputParameters) DeepCopyInto(out *SpecInputParameters) {
	*out = *in
	if in.AllowedNameTag != nil {
		in, out := &in.AllowedNameTag, &out.AllowedNameTag
		*out = make([]AllowedNameTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockLatestTag != nil {
		in, out := &in.BlockLatestTag, &out.BlockLatestTag
		*out = make([]BlockLatestTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]CustomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireDigest != nil {
		in, out := &in.RequireDigest, &out.RequireDigest
		*out = make([]RequireDigestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInputParameters.
func (in *SpecInputParameters) DeepCopy() *SpecInputParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNamespaceSelectorMatchExpressionsObservation) DeepCopyInto(out *SpecNamespaceSelectorMatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNamespaceSelectorMatchExpressionsObservation.
func (in *SpecNamespaceSelectorMatchExpressionsObservation) DeepCopy() *SpecNamespaceSelectorMatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpecNamespaceSelectorMatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNamespaceSelectorMatchExpressionsParameters) DeepCopyInto(out *SpecNamespaceSelectorMatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNamespaceSelectorMatchExpressionsParameters.
func (in *SpecNamespaceSelectorMatchExpressionsParameters) DeepCopy() *SpecNamespaceSelectorMatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpecNamespaceSelectorMatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNamespaceSelectorObservation) DeepCopyInto(out *SpecNamespaceSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]NamespaceSelectorMatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNamespaceSelectorObservation.
func (in *SpecNamespaceSelectorObservation) DeepCopy() *SpecNamespaceSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(SpecNamespaceSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNamespaceSelectorParameters) DeepCopyInto(out *SpecNamespaceSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]NamespaceSelectorMatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNamespaceSelectorParameters.
func (in *SpecNamespaceSelectorParameters) DeepCopy() *SpecNamespaceSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(SpecNamespaceSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNodepoolObservation) DeepCopyInto(out *SpecNodepoolObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]NodepoolInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecNodepoolSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNodepoolObservation.
func (in *SpecNodepoolObservation) DeepCopy() *SpecNodepoolObservation {
	if in == nil {
		return nil
	}
	out := new(SpecNodepoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNodepoolParameters) DeepCopyInto(out *SpecNodepoolParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]NodepoolInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecNodepoolSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNodepoolParameters.
func (in *SpecNodepoolParameters) DeepCopy() *SpecNodepoolParameters {
	if in == nil {
		return nil
	}
	out := new(SpecNodepoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNodepoolSpecObservation) DeepCopyInto(out *SpecNodepoolSpecObservation) {
	*out = *in
	if in.AMIInfo != nil {
		in, out := &in.AMIInfo, &out.AMIInfo
		*out = make([]AMIInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AMIType != nil {
		in, out := &in.AMIType, &out.AMIType
		*out = new(string)
		**out = **in
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RemoteAccess != nil {
		in, out := &in.RemoteAccess, &out.RemoteAccess
		*out = make([]RemoteAccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RootDiskSize != nil {
		in, out := &in.RootDiskSize, &out.RootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]SpecTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateConfig != nil {
		in, out := &in.UpdateConfig, &out.UpdateConfig
		*out = make([]UpdateConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNodepoolSpecObservation.
func (in *SpecNodepoolSpecObservation) DeepCopy() *SpecNodepoolSpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecNodepoolSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecNodepoolSpecParameters) DeepCopyInto(out *SpecNodepoolSpecParameters) {
	*out = *in
	if in.AMIInfo != nil {
		in, out := &in.AMIInfo, &out.AMIInfo
		*out = make([]AMIInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AMIType != nil {
		in, out := &in.AMIType, &out.AMIType
		*out = new(string)
		**out = **in
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RemoteAccess != nil {
		in, out := &in.RemoteAccess, &out.RemoteAccess
		*out = make([]RemoteAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RootDiskSize != nil {
		in, out := &in.RootDiskSize, &out.RootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]SpecTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateConfig != nil {
		in, out := &in.UpdateConfig, &out.UpdateConfig
		*out = make([]UpdateConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecNodepoolSpecParameters.
func (in *SpecNodepoolSpecParameters) DeepCopy() *SpecNodepoolSpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecNodepoolSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.AgentName != nil {
		in, out := &in.AgentName, &out.AgentName
		*out = new(string)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodepool != nil {
		in, out := &in.Nodepool, &out.Nodepool
		*out = make([]NodepoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.AgentName != nil {
		in, out := &in.AgentName, &out.AgentName
		*out = new(string)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodepool != nil {
		in, out := &in.Nodepool, &out.Nodepool
		*out = make([]NodepoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTaintsObservation) DeepCopyInto(out *SpecTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTaintsObservation.
func (in *SpecTaintsObservation) DeepCopy() *SpecTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTaintsParameters) DeepCopyInto(out *SpecTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTaintsParameters.
func (in *SpecTaintsParameters) DeepCopy() *SpecTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgAwsObservation) DeepCopyInto(out *SpecTkgAwsObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.NodePlacement != nil {
		in, out := &in.NodePlacement, &out.NodePlacement
		*out = make([]NodePlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodepoolSubnetID != nil {
		in, out := &in.NodepoolSubnetID, &out.NodepoolSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgAwsObservation.
func (in *SpecTkgAwsObservation) DeepCopy() *SpecTkgAwsObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgAwsParameters) DeepCopyInto(out *SpecTkgAwsParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.NodePlacement != nil {
		in, out := &in.NodePlacement, &out.NodePlacement
		*out = make([]NodePlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgAwsParameters.
func (in *SpecTkgAwsParameters) DeepCopy() *SpecTkgAwsParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereObservation) DeepCopyInto(out *SpecTkgServiceVsphereObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TkgServiceVsphereVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereObservation.
func (in *SpecTkgServiceVsphereObservation) DeepCopy() *SpecTkgServiceVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereParameters) DeepCopyInto(out *SpecTkgServiceVsphereParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.FailureDomain != nil {
		in, out := &in.FailureDomain, &out.FailureDomain
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TkgServiceVsphereVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereParameters.
func (in *SpecTkgServiceVsphereParameters) DeepCopy() *SpecTkgServiceVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereVolumesObservation) DeepCopyInto(out *SpecTkgServiceVsphereVolumesObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereVolumesObservation.
func (in *SpecTkgServiceVsphereVolumesObservation) DeepCopy() *SpecTkgServiceVsphereVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgServiceVsphereVolumesParameters) DeepCopyInto(out *SpecTkgServiceVsphereVolumesParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgServiceVsphereVolumesParameters.
func (in *SpecTkgServiceVsphereVolumesParameters) DeepCopy() *SpecTkgServiceVsphereVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgServiceVsphereVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereObservation) DeepCopyInto(out *SpecTkgVsphereObservation) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]TkgVsphereVMConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereObservation.
func (in *SpecTkgVsphereObservation) DeepCopy() *SpecTkgVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereParameters) DeepCopyInto(out *SpecTkgVsphereParameters) {
	*out = *in
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]TkgVsphereVMConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereParameters.
func (in *SpecTkgVsphereParameters) DeepCopy() *SpecTkgVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereVMConfigObservation) DeepCopyInto(out *SpecTkgVsphereVMConfigObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereVMConfigObservation.
func (in *SpecTkgVsphereVMConfigObservation) DeepCopy() *SpecTkgVsphereVMConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereVMConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecTkgVsphereVMConfigParameters) DeepCopyInto(out *SpecTkgVsphereVMConfigParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecTkgVsphereVMConfigParameters.
func (in *SpecTkgVsphereVMConfigParameters) DeepCopy() *SpecTkgVsphereVMConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SpecTkgVsphereVMConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateObservation) DeepCopyInto(out *StateObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.PackageRepositoryPhase != nil {
		in, out := &in.PackageRepositoryPhase, &out.PackageRepositoryPhase
		*out = new(string)
		**out = **in
	}
	if in.Subscribed != nil {
		in, out := &in.Subscribed, &out.Subscribed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateObservation.
func (in *StateObservation) DeepCopy() *StateObservation {
	if in == nil {
		return nil
	}
	out := new(StateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateParameters) DeepCopyInto(out *StateParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateParameters.
func (in *StateParameters) DeepCopy() *StateParameters {
	if in == nil {
		return nil
	}
	out := new(StateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.GeneratedResources != nil {
		in, out := &in.GeneratedResources, &out.GeneratedResources
		*out = make([]GeneratedResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.PackageInstallPhase != nil {
		in, out := &in.PackageInstallPhase, &out.PackageInstallPhase
		*out = new(string)
		**out = **in
	}
	if in.ReferredBy != nil {
		in, out := &in.ReferredBy, &out.ReferredBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResolvedVersion != nil {
		in, out := &in.ResolvedVersion, &out.ResolvedVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigObservation) DeepCopyInto(out *StorageConfigObservation) {
	*out = *in
	if in.EnableDiskCsiDriver != nil {
		in, out := &in.EnableDiskCsiDriver, &out.EnableDiskCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableFileCsiDriver != nil {
		in, out := &in.EnableFileCsiDriver, &out.EnableFileCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableSnapshotController != nil {
		in, out := &in.EnableSnapshotController, &out.EnableSnapshotController
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigObservation.
func (in *StorageConfigObservation) DeepCopy() *StorageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StorageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigParameters) DeepCopyInto(out *StorageConfigParameters) {
	*out = *in
	if in.EnableDiskCsiDriver != nil {
		in, out := &in.EnableDiskCsiDriver, &out.EnableDiskCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableFileCsiDriver != nil {
		in, out := &in.EnableFileCsiDriver, &out.EnableFileCsiDriver
		*out = new(bool)
		**out = **in
	}
	if in.EnableSnapshotController != nil {
		in, out := &in.EnableSnapshotController, &out.EnableSnapshotController
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigParameters.
func (in *StorageConfigParameters) DeepCopy() *StorageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageObservation) DeepCopyInto(out *StorageObservation) {
	*out = *in
	if in.Classes != nil {
		in, out := &in.Classes, &out.Classes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultClass != nil {
		in, out := &in.DefaultClass, &out.DefaultClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageObservation.
func (in *StorageObservation) DeepCopy() *StorageObservation {
	if in == nil {
		return nil
	}
	out := new(StorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageParameters) DeepCopyInto(out *StorageParameters) {
	*out = *in
	if in.Classes != nil {
		in, out := &in.Classes, &out.Classes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultClass != nil {
		in, out := &in.DefaultClass, &out.DefaultClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageParameters.
func (in *StorageParameters) DeepCopy() *StorageParameters {
	if in == nil {
		return nil
	}
	out := new(StorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrictObservation) DeepCopyInto(out *StrictObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.DisableNativePsp != nil {
		in, out := &in.DisableNativePsp, &out.DisableNativePsp
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrictObservation.
func (in *StrictObservation) DeepCopy() *StrictObservation {
	if in == nil {
		return nil
	}
	out := new(StrictObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrictParameters) DeepCopyInto(out *StrictParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.DisableNativePsp != nil {
		in, out := &in.DisableNativePsp, &out.DisableNativePsp
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrictParameters.
func (in *StrictParameters) DeepCopy() *StrictParameters {
	if in == nil {
		return nil
	}
	out := new(StrictParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsObservation) DeepCopyInto(out *SubjectsObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsObservation.
func (in *SubjectsObservation) DeepCopy() *SubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsParameters) DeepCopyInto(out *SubjectsParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsParameters.
func (in *SubjectsParameters) DeepCopy() *SubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetsObservation) DeepCopyInto(out *SubnetsObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CidrBlockSubnet != nil {
		in, out := &in.CidrBlockSubnet, &out.CidrBlockSubnet
		*out = new(string)
		**out = **in
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetsObservation.
func (in *SubnetsObservation) DeepCopy() *SubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetsParameters) DeepCopyInto(out *SubnetsParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CidrBlockSubnet != nil {
		in, out := &in.CidrBlockSubnet, &out.CidrBlockSubnet
		*out = new(string)
		**out = **in
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetsParameters.
func (in *SubnetsParameters) DeepCopy() *SubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupplementalGroupsObservation) DeepCopyInto(out *SupplementalGroupsObservation) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SupplementalGroupsRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupplementalGroupsObservation.
func (in *SupplementalGroupsObservation) DeepCopy() *SupplementalGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(SupplementalGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupplementalGroupsParameters) DeepCopyInto(out *SupplementalGroupsParameters) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SupplementalGroupsRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupplementalGroupsParameters.
func (in *SupplementalGroupsParameters) DeepCopy() *SupplementalGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(SupplementalGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupplementalGroupsRangesObservation) DeepCopyInto(out *SupplementalGroupsRangesObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupplementalGroupsRangesObservation.
func (in *SupplementalGroupsRangesObservation) DeepCopy() *SupplementalGroupsRangesObservation {
	if in == nil {
		return nil
	}
	out := new(SupplementalGroupsRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupplementalGroupsRangesParameters) DeepCopyInto(out *SupplementalGroupsRangesParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupplementalGroupsRangesParameters.
func (in *SupplementalGroupsRangesParameters) DeepCopy() *SupplementalGroupsRangesParameters {
	if in == nil {
		return nil
	}
	out := new(SupplementalGroupsRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlsObservation) DeepCopyInto(out *SysctlsObservation) {
	*out = *in
	if in.ForbiddenSysctls != nil {
		in, out := &in.ForbiddenSysctls, &out.ForbiddenSysctls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlsObservation.
func (in *SysctlsObservation) DeepCopy() *SysctlsObservation {
	if in == nil {
		return nil
	}
	out := new(SysctlsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlsParameters) DeepCopyInto(out *SysctlsParameters) {
	*out = *in
	if in.ForbiddenSysctls != nil {
		in, out := &in.ForbiddenSysctls, &out.ForbiddenSysctls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlsParameters.
func (in *SysctlsParameters) DeepCopy() *SysctlsParameters {
	if in == nil {
		return nil
	}
	out := new(SysctlsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetKubernetesResourcesObservation) DeepCopyInto(out *TargetKubernetesResourcesObservation) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetKubernetesResourcesObservation.
func (in *TargetKubernetesResourcesObservation) DeepCopy() *TargetKubernetesResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TargetKubernetesResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetKubernetesResourcesParameters) DeepCopyInto(out *TargetKubernetesResourcesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetKubernetesResourcesParameters.
func (in *TargetKubernetesResourcesParameters) DeepCopy() *TargetKubernetesResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TargetKubernetesResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgAwsObservation) DeepCopyInto(out *TkgAwsObservation) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]AdvancedConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]DistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TopologyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgAwsObservation.
func (in *TkgAwsObservation) DeepCopy() *TkgAwsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgAwsParameters) DeepCopyInto(out *TkgAwsParameters) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]AdvancedConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]DistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TopologyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgAwsParameters.
func (in *TkgAwsParameters) DeepCopy() *TkgAwsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereDistributionObservation) DeepCopyInto(out *TkgServiceVsphereDistributionObservation) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereDistributionObservation.
func (in *TkgServiceVsphereDistributionObservation) DeepCopy() *TkgServiceVsphereDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereDistributionParameters) DeepCopyInto(out *TkgServiceVsphereDistributionParameters) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereDistributionParameters.
func (in *TkgServiceVsphereDistributionParameters) DeepCopy() *TkgServiceVsphereDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereObservation) DeepCopyInto(out *TkgServiceVsphereObservation) {
	*out = *in
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgServiceVsphereDistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgServiceVsphereSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgServiceVsphereTopologyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereObservation.
func (in *TkgServiceVsphereObservation) DeepCopy() *TkgServiceVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereParameters) DeepCopyInto(out *TkgServiceVsphereParameters) {
	*out = *in
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgServiceVsphereDistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgServiceVsphereSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgServiceVsphereTopologyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereParameters.
func (in *TkgServiceVsphereParameters) DeepCopy() *TkgServiceVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereSettingsObservation) DeepCopyInto(out *TkgServiceVsphereSettingsObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SettingsNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereSettingsObservation.
func (in *TkgServiceVsphereSettingsObservation) DeepCopy() *TkgServiceVsphereSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereSettingsParameters) DeepCopyInto(out *TkgServiceVsphereSettingsParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SettingsNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereSettingsParameters.
func (in *TkgServiceVsphereSettingsParameters) DeepCopy() *TkgServiceVsphereSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereTopologyObservation) DeepCopyInto(out *TkgServiceVsphereTopologyObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TopologyControlPlaneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TopologyNodePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereTopologyObservation.
func (in *TkgServiceVsphereTopologyObservation) DeepCopy() *TkgServiceVsphereTopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereTopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereTopologyParameters) DeepCopyInto(out *TkgServiceVsphereTopologyParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TopologyControlPlaneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TopologyNodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereTopologyParameters.
func (in *TkgServiceVsphereTopologyParameters) DeepCopy() *TkgServiceVsphereTopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereTopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereVolumesObservation) DeepCopyInto(out *TkgServiceVsphereVolumesObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereVolumesObservation.
func (in *TkgServiceVsphereVolumesObservation) DeepCopy() *TkgServiceVsphereVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgServiceVsphereVolumesParameters) DeepCopyInto(out *TkgServiceVsphereVolumesParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgServiceVsphereVolumesParameters.
func (in *TkgServiceVsphereVolumesParameters) DeepCopy() *TkgServiceVsphereVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(TkgServiceVsphereVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereAdvancedConfigsObservation) DeepCopyInto(out *TkgVsphereAdvancedConfigsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereAdvancedConfigsObservation.
func (in *TkgVsphereAdvancedConfigsObservation) DeepCopy() *TkgVsphereAdvancedConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereAdvancedConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereAdvancedConfigsParameters) DeepCopyInto(out *TkgVsphereAdvancedConfigsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereAdvancedConfigsParameters.
func (in *TkgVsphereAdvancedConfigsParameters) DeepCopy() *TkgVsphereAdvancedConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereAdvancedConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereDistributionObservation) DeepCopyInto(out *TkgVsphereDistributionObservation) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereDistributionObservation.
func (in *TkgVsphereDistributionObservation) DeepCopy() *TkgVsphereDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereDistributionParameters) DeepCopyInto(out *TkgVsphereDistributionParameters) {
	*out = *in
	if in.OsArch != nil {
		in, out := &in.OsArch, &out.OsArch
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereDistributionParameters.
func (in *TkgVsphereDistributionParameters) DeepCopy() *TkgVsphereDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereObservation) DeepCopyInto(out *TkgVsphereObservation) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]TkgVsphereAdvancedConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgVsphereDistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgVsphereSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgVsphereTopologyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereObservation.
func (in *TkgVsphereObservation) DeepCopy() *TkgVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereParameters) DeepCopyInto(out *TkgVsphereParameters) {
	*out = *in
	if in.AdvancedConfigs != nil {
		in, out := &in.AdvancedConfigs, &out.AdvancedConfigs
		*out = make([]TkgVsphereAdvancedConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]TkgVsphereDistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]TkgVsphereSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = make([]TkgVsphereTopologyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereParameters.
func (in *TkgVsphereParameters) DeepCopy() *TkgVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsNetworkObservation) DeepCopyInto(out *TkgVsphereSettingsNetworkObservation) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.ControlPlaneEndPoint != nil {
		in, out := &in.ControlPlaneEndPoint, &out.ControlPlaneEndPoint
		*out = new(string)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]SettingsNetworkPodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]SettingsNetworkServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsNetworkObservation.
func (in *TkgVsphereSettingsNetworkObservation) DeepCopy() *TkgVsphereSettingsNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsNetworkParameters) DeepCopyInto(out *TkgVsphereSettingsNetworkParameters) {
	*out = *in
	if in.APIServerPort != nil {
		in, out := &in.APIServerPort, &out.APIServerPort
		*out = new(float64)
		**out = **in
	}
	if in.ControlPlaneEndPoint != nil {
		in, out := &in.ControlPlaneEndPoint, &out.ControlPlaneEndPoint
		*out = new(string)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]SettingsNetworkPodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]SettingsNetworkServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsNetworkParameters.
func (in *TkgVsphereSettingsNetworkParameters) DeepCopy() *TkgVsphereSettingsNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsObservation) DeepCopyInto(out *TkgVsphereSettingsObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]TkgVsphereSettingsNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SettingsSecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsObservation.
func (in *TkgVsphereSettingsObservation) DeepCopy() *TkgVsphereSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereSettingsParameters) DeepCopyInto(out *TkgVsphereSettingsParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]TkgVsphereSettingsNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SettingsSecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereSettingsParameters.
func (in *TkgVsphereSettingsParameters) DeepCopy() *TkgVsphereSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyControlPlaneObservation) DeepCopyInto(out *TkgVsphereTopologyControlPlaneObservation) {
	*out = *in
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]VMConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyControlPlaneObservation.
func (in *TkgVsphereTopologyControlPlaneObservation) DeepCopy() *TkgVsphereTopologyControlPlaneObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyControlPlaneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyControlPlaneParameters) DeepCopyInto(out *TkgVsphereTopologyControlPlaneParameters) {
	*out = *in
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.VMConfig != nil {
		in, out := &in.VMConfig, &out.VMConfig
		*out = make([]VMConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyControlPlaneParameters.
func (in *TkgVsphereTopologyControlPlaneParameters) DeepCopy() *TkgVsphereTopologyControlPlaneParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyControlPlaneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsObservation) DeepCopyInto(out *TkgVsphereTopologyNodePoolsObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]TopologyNodePoolsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TkgVsphereTopologyNodePoolsSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsObservation.
func (in *TkgVsphereTopologyNodePoolsObservation) DeepCopy() *TkgVsphereTopologyNodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsParameters) DeepCopyInto(out *TkgVsphereTopologyNodePoolsParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]TopologyNodePoolsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TkgVsphereTopologyNodePoolsSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsParameters.
func (in *TkgVsphereTopologyNodePoolsParameters) DeepCopy() *TkgVsphereTopologyNodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsSpecObservation) DeepCopyInto(out *TkgVsphereTopologyNodePoolsSpecObservation) {
	*out = *in
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]SpecTkgVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsSpecObservation.
func (in *TkgVsphereTopologyNodePoolsSpecObservation) DeepCopy() *TkgVsphereTopologyNodePoolsSpecObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyNodePoolsSpecParameters) DeepCopyInto(out *TkgVsphereTopologyNodePoolsSpecParameters) {
	*out = *in
	if in.TkgVsphere != nil {
		in, out := &in.TkgVsphere, &out.TkgVsphere
		*out = make([]SpecTkgVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyNodePoolsSpecParameters.
func (in *TkgVsphereTopologyNodePoolsSpecParameters) DeepCopy() *TkgVsphereTopologyNodePoolsSpecParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyNodePoolsSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyObservation) DeepCopyInto(out *TkgVsphereTopologyObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TkgVsphereTopologyControlPlaneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TkgVsphereTopologyNodePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyObservation.
func (in *TkgVsphereTopologyObservation) DeepCopy() *TkgVsphereTopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereTopologyParameters) DeepCopyInto(out *TkgVsphereTopologyParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]TkgVsphereTopologyControlPlaneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]TkgVsphereTopologyNodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereTopologyParameters.
func (in *TkgVsphereTopologyParameters) DeepCopy() *TkgVsphereTopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereTopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereVMConfigObservation) DeepCopyInto(out *TkgVsphereVMConfigObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereVMConfigObservation.
func (in *TkgVsphereVMConfigObservation) DeepCopy() *TkgVsphereVMConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereVMConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkgVsphereVMConfigParameters) DeepCopyInto(out *TkgVsphereVMConfigParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkgVsphereVMConfigParameters.
func (in *TkgVsphereVMConfigParameters) DeepCopy() *TkgVsphereVMConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TkgVsphereVMConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockNodeportServiceObservation) DeepCopyInto(out *TmcBlockNodeportServiceObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TargetKubernetesResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockNodeportServiceObservation.
func (in *TmcBlockNodeportServiceObservation) DeepCopy() *TmcBlockNodeportServiceObservation {
	if in == nil {
		return nil
	}
	out := new(TmcBlockNodeportServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockNodeportServiceParameters) DeepCopyInto(out *TmcBlockNodeportServiceParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TargetKubernetesResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockNodeportServiceParameters.
func (in *TmcBlockNodeportServiceParameters) DeepCopy() *TmcBlockNodeportServiceParameters {
	if in == nil {
		return nil
	}
	out := new(TmcBlockNodeportServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockResourcesObservation) DeepCopyInto(out *TmcBlockResourcesObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcBlockResourcesTargetKubernetesResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockResourcesObservation.
func (in *TmcBlockResourcesObservation) DeepCopy() *TmcBlockResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TmcBlockResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockResourcesParameters) DeepCopyInto(out *TmcBlockResourcesParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcBlockResourcesTargetKubernetesResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockResourcesParameters.
func (in *TmcBlockResourcesParameters) DeepCopy() *TmcBlockResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TmcBlockResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockResourcesTargetKubernetesResourcesObservation) DeepCopyInto(out *TmcBlockResourcesTargetKubernetesResourcesObservation) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockResourcesTargetKubernetesResourcesObservation.
func (in *TmcBlockResourcesTargetKubernetesResourcesObservation) DeepCopy() *TmcBlockResourcesTargetKubernetesResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TmcBlockResourcesTargetKubernetesResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockResourcesTargetKubernetesResourcesParameters) DeepCopyInto(out *TmcBlockResourcesTargetKubernetesResourcesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockResourcesTargetKubernetesResourcesParameters.
func (in *TmcBlockResourcesTargetKubernetesResourcesParameters) DeepCopy() *TmcBlockResourcesTargetKubernetesResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TmcBlockResourcesTargetKubernetesResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockRolebindingSubjectsObservation) DeepCopyInto(out *TmcBlockRolebindingSubjectsObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockRolebindingSubjectsObservation.
func (in *TmcBlockRolebindingSubjectsObservation) DeepCopy() *TmcBlockRolebindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(TmcBlockRolebindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockRolebindingSubjectsParameters) DeepCopyInto(out *TmcBlockRolebindingSubjectsParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockRolebindingSubjectsParameters.
func (in *TmcBlockRolebindingSubjectsParameters) DeepCopy() *TmcBlockRolebindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(TmcBlockRolebindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation) DeepCopyInto(out *TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation.
func (in *TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation) DeepCopy() *TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TmcBlockRolebindingSubjectsTargetKubernetesResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters) DeepCopyInto(out *TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters.
func (in *TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters) DeepCopy() *TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TmcBlockRolebindingSubjectsTargetKubernetesResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcExternalIpsObservation) DeepCopyInto(out *TmcExternalIpsObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]TmcExternalIpsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcExternalIpsTargetKubernetesResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcExternalIpsObservation.
func (in *TmcExternalIpsObservation) DeepCopy() *TmcExternalIpsObservation {
	if in == nil {
		return nil
	}
	out := new(TmcExternalIpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcExternalIpsParameters) DeepCopyInto(out *TmcExternalIpsParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]TmcExternalIpsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcExternalIpsTargetKubernetesResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcExternalIpsParameters.
func (in *TmcExternalIpsParameters) DeepCopy() *TmcExternalIpsParameters {
	if in == nil {
		return nil
	}
	out := new(TmcExternalIpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcExternalIpsParametersObservation) DeepCopyInto(out *TmcExternalIpsParametersObservation) {
	*out = *in
	if in.AllowedIps != nil {
		in, out := &in.AllowedIps, &out.AllowedIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcExternalIpsParametersObservation.
func (in *TmcExternalIpsParametersObservation) DeepCopy() *TmcExternalIpsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(TmcExternalIpsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcExternalIpsParametersParameters) DeepCopyInto(out *TmcExternalIpsParametersParameters) {
	*out = *in
	if in.AllowedIps != nil {
		in, out := &in.AllowedIps, &out.AllowedIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcExternalIpsParametersParameters.
func (in *TmcExternalIpsParametersParameters) DeepCopy() *TmcExternalIpsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(TmcExternalIpsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcExternalIpsTargetKubernetesResourcesObservation) DeepCopyInto(out *TmcExternalIpsTargetKubernetesResourcesObservation) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcExternalIpsTargetKubernetesResourcesObservation.
func (in *TmcExternalIpsTargetKubernetesResourcesObservation) DeepCopy() *TmcExternalIpsTargetKubernetesResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TmcExternalIpsTargetKubernetesResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcExternalIpsTargetKubernetesResourcesParameters) DeepCopyInto(out *TmcExternalIpsTargetKubernetesResourcesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcExternalIpsTargetKubernetesResourcesParameters.
func (in *TmcExternalIpsTargetKubernetesResourcesParameters) DeepCopy() *TmcExternalIpsTargetKubernetesResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TmcExternalIpsTargetKubernetesResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcHTTPSIngressObservation) DeepCopyInto(out *TmcHTTPSIngressObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcHTTPSIngressTargetKubernetesResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcHTTPSIngressObservation.
func (in *TmcHTTPSIngressObservation) DeepCopy() *TmcHTTPSIngressObservation {
	if in == nil {
		return nil
	}
	out := new(TmcHTTPSIngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcHTTPSIngressParameters) DeepCopyInto(out *TmcHTTPSIngressParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcHTTPSIngressTargetKubernetesResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcHTTPSIngressParameters.
func (in *TmcHTTPSIngressParameters) DeepCopy() *TmcHTTPSIngressParameters {
	if in == nil {
		return nil
	}
	out := new(TmcHTTPSIngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcHTTPSIngressTargetKubernetesResourcesObservation) DeepCopyInto(out *TmcHTTPSIngressTargetKubernetesResourcesObservation) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcHTTPSIngressTargetKubernetesResourcesObservation.
func (in *TmcHTTPSIngressTargetKubernetesResourcesObservation) DeepCopy() *TmcHTTPSIngressTargetKubernetesResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TmcHTTPSIngressTargetKubernetesResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcHTTPSIngressTargetKubernetesResourcesParameters) DeepCopyInto(out *TmcHTTPSIngressTargetKubernetesResourcesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcHTTPSIngressTargetKubernetesResourcesParameters.
func (in *TmcHTTPSIngressTargetKubernetesResourcesParameters) DeepCopy() *TmcHTTPSIngressTargetKubernetesResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TmcHTTPSIngressTargetKubernetesResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcRequireLabelsObservation) DeepCopyInto(out *TmcRequireLabelsObservation) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]TmcRequireLabelsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcRequireLabelsTargetKubernetesResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcRequireLabelsObservation.
func (in *TmcRequireLabelsObservation) DeepCopy() *TmcRequireLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(TmcRequireLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcRequireLabelsParameters) DeepCopyInto(out *TmcRequireLabelsParameters) {
	*out = *in
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]TmcRequireLabelsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetKubernetesResources != nil {
		in, out := &in.TargetKubernetesResources, &out.TargetKubernetesResources
		*out = make([]TmcRequireLabelsTargetKubernetesResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcRequireLabelsParameters.
func (in *TmcRequireLabelsParameters) DeepCopy() *TmcRequireLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(TmcRequireLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcRequireLabelsParametersObservation) DeepCopyInto(out *TmcRequireLabelsParametersObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcRequireLabelsParametersObservation.
func (in *TmcRequireLabelsParametersObservation) DeepCopy() *TmcRequireLabelsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(TmcRequireLabelsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcRequireLabelsParametersParameters) DeepCopyInto(out *TmcRequireLabelsParametersParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcRequireLabelsParametersParameters.
func (in *TmcRequireLabelsParametersParameters) DeepCopy() *TmcRequireLabelsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(TmcRequireLabelsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcRequireLabelsTargetKubernetesResourcesObservation) DeepCopyInto(out *TmcRequireLabelsTargetKubernetesResourcesObservation) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcRequireLabelsTargetKubernetesResourcesObservation.
func (in *TmcRequireLabelsTargetKubernetesResourcesObservation) DeepCopy() *TmcRequireLabelsTargetKubernetesResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(TmcRequireLabelsTargetKubernetesResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TmcRequireLabelsTargetKubernetesResourcesParameters) DeepCopyInto(out *TmcRequireLabelsTargetKubernetesResourcesParameters) {
	*out = *in
	if in.APIGroups != nil {
		in, out := &in.APIGroups, &out.APIGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kinds != nil {
		in, out := &in.Kinds, &out.Kinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TmcRequireLabelsTargetKubernetesResourcesParameters.
func (in *TmcRequireLabelsTargetKubernetesResourcesParameters) DeepCopy() *TmcRequireLabelsTargetKubernetesResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(TmcRequireLabelsTargetKubernetesResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyControlPlaneObservation) DeepCopyInto(out *TopologyControlPlaneObservation) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyControlPlaneObservation.
func (in *TopologyControlPlaneObservation) DeepCopy() *TopologyControlPlaneObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyControlPlaneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyControlPlaneParameters) DeepCopyInto(out *TopologyControlPlaneParameters) {
	*out = *in
	if in.Class != nil {
		in, out := &in.Class, &out.Class
		*out = new(string)
		**out = **in
	}
	if in.HighAvailability != nil {
		in, out := &in.HighAvailability, &out.HighAvailability
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyControlPlaneParameters.
func (in *TopologyControlPlaneParameters) DeepCopy() *TopologyControlPlaneParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyControlPlaneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsInfoObservation) DeepCopyInto(out *TopologyNodePoolsInfoObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsInfoObservation.
func (in *TopologyNodePoolsInfoObservation) DeepCopy() *TopologyNodePoolsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsInfoParameters) DeepCopyInto(out *TopologyNodePoolsInfoParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsInfoParameters.
func (in *TopologyNodePoolsInfoParameters) DeepCopy() *TopologyNodePoolsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsObservation) DeepCopyInto(out *TopologyNodePoolsObservation) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]NodePoolsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TopologyNodePoolsSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsObservation.
func (in *TopologyNodePoolsObservation) DeepCopy() *TopologyNodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsParameters) DeepCopyInto(out *TopologyNodePoolsParameters) {
	*out = *in
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = make([]NodePoolsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]TopologyNodePoolsSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsParameters.
func (in *TopologyNodePoolsParameters) DeepCopy() *TopologyNodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsSpecObservation) DeepCopyInto(out *TopologyNodePoolsSpecObservation) {
	*out = *in
	if in.CloudLabel != nil {
		in, out := &in.CloudLabel, &out.CloudLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabel != nil {
		in, out := &in.NodeLabel, &out.NodeLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]SpecTkgServiceVsphereObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsSpecObservation.
func (in *TopologyNodePoolsSpecObservation) DeepCopy() *TopologyNodePoolsSpecObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyNodePoolsSpecParameters) DeepCopyInto(out *TopologyNodePoolsSpecParameters) {
	*out = *in
	if in.CloudLabel != nil {
		in, out := &in.CloudLabel, &out.CloudLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeLabel != nil {
		in, out := &in.NodeLabel, &out.NodeLabel
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TkgServiceVsphere != nil {
		in, out := &in.TkgServiceVsphere, &out.TkgServiceVsphere
		*out = make([]SpecTkgServiceVsphereParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNodeCount != nil {
		in, out := &in.WorkerNodeCount, &out.WorkerNodeCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyNodePoolsSpecParameters.
func (in *TopologyNodePoolsSpecParameters) DeepCopy() *TopologyNodePoolsSpecParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyNodePoolsSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyObservation) DeepCopyInto(out *TopologyObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]ControlPlaneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]NodePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyObservation.
func (in *TopologyObservation) DeepCopy() *TopologyObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyParameters) DeepCopyInto(out *TopologyParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = make([]ControlPlaneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]NodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyParameters.
func (in *TopologyParameters) DeepCopy() *TopologyParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateConfigObservation) DeepCopyInto(out *UpdateConfigObservation) {
	*out = *in
	if in.MaxUnavailableNodes != nil {
		in, out := &in.MaxUnavailableNodes, &out.MaxUnavailableNodes
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailablePercentage != nil {
		in, out := &in.MaxUnavailablePercentage, &out.MaxUnavailablePercentage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateConfigObservation.
func (in *UpdateConfigObservation) DeepCopy() *UpdateConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UpdateConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateConfigParameters) DeepCopyInto(out *UpdateConfigParameters) {
	*out = *in
	if in.MaxUnavailableNodes != nil {
		in, out := &in.MaxUnavailableNodes, &out.MaxUnavailableNodes
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailablePercentage != nil {
		in, out := &in.MaxUnavailablePercentage, &out.MaxUnavailablePercentage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateConfigParameters.
func (in *UpdateConfigParameters) DeepCopy() *UpdateConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UpdateConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeConfigObservation) DeepCopyInto(out *UpgradeConfigObservation) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeConfigObservation.
func (in *UpgradeConfigObservation) DeepCopy() *UpgradeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeConfigParameters) DeepCopyInto(out *UpgradeConfigParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeConfigParameters.
func (in *UpgradeConfigParameters) DeepCopy() *UpgradeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernamePasswordObservation) DeepCopyInto(out *UsernamePasswordObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernamePasswordObservation.
func (in *UsernamePasswordObservation) DeepCopy() *UsernamePasswordObservation {
	if in == nil {
		return nil
	}
	out := new(UsernamePasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernamePasswordParameters) DeepCopyInto(out *UsernamePasswordParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernamePasswordParameters.
func (in *UsernamePasswordParameters) DeepCopy() *UsernamePasswordParameters {
	if in == nil {
		return nil
	}
	out := new(UsernamePasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMConfigObservation) DeepCopyInto(out *VMConfigObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMConfigObservation.
func (in *VMConfigObservation) DeepCopy() *VMConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VMConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMConfigParameters) DeepCopyInto(out *VMConfigParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMConfigParameters.
func (in *VMConfigParameters) DeepCopy() *VMConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VMConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCObservation) DeepCopyInto(out *VPCObservation) {
	*out = *in
	if in.CidrBlockVPC != nil {
		in, out := &in.CidrBlockVPC, &out.CidrBlockVPC
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCObservation.
func (in *VPCObservation) DeepCopy() *VPCObservation {
	if in == nil {
		return nil
	}
	out := new(VPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCParameters) DeepCopyInto(out *VPCParameters) {
	*out = *in
	if in.CidrBlockVPC != nil {
		in, out := &in.CidrBlockVPC, &out.CidrBlockVPC
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCParameters.
func (in *VPCParameters) DeepCopy() *VPCParameters {
	if in == nil {
		return nil
	}
	out := new(VPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionSelectionObservation) DeepCopyInto(out *VersionSelectionObservation) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionSelectionObservation.
func (in *VersionSelectionObservation) DeepCopy() *VersionSelectionObservation {
	if in == nil {
		return nil
	}
	out := new(VersionSelectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionSelectionParameters) DeepCopyInto(out *VersionSelectionParameters) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionSelectionParameters.
func (in *VersionSelectionParameters) DeepCopy() *VersionSelectionParameters {
	if in == nil {
		return nil
	}
	out := new(VersionSelectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PvcStorageClass != nil {
		in, out := &in.PvcStorageClass, &out.PvcStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workspace) DeepCopyInto(out *Workspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workspace.
func (in *Workspace) DeepCopy() *Workspace {
	if in == nil {
		return nil
	}
	out := new(Workspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceList) DeepCopyInto(out *WorkspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceList.
func (in *WorkspaceList) DeepCopy() *WorkspaceList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceMetaObservation) DeepCopyInto(out *WorkspaceMetaObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersion != nil {
		in, out := &in.ResourceVersion, &out.ResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceMetaObservation.
func (in *WorkspaceMetaObservation) DeepCopy() *WorkspaceMetaObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceMetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceMetaParameters) DeepCopyInto(out *WorkspaceMetaParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceMetaParameters.
func (in *WorkspaceMetaParameters) DeepCopy() *WorkspaceMetaParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceMetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceNetwork != nil {
		in, out := &in.WorkspaceNetwork, &out.WorkspaceNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation_2) DeepCopyInto(out *WorkspaceObservation_2) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]WorkspaceMetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation_2.
func (in *WorkspaceObservation_2) DeepCopy() *WorkspaceObservation_2 {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceNetwork != nil {
		in, out := &in.WorkspaceNetwork, &out.WorkspaceNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters_2) DeepCopyInto(out *WorkspaceParameters_2) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]WorkspaceMetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters_2.
func (in *WorkspaceParameters_2) DeepCopy() *WorkspaceParameters_2 {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceSpec) DeepCopyInto(out *WorkspaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceSpec.
func (in *WorkspaceSpec) DeepCopy() *WorkspaceSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceStatus) DeepCopyInto(out *WorkspaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceStatus.
func (in *WorkspaceStatus) DeepCopy() *WorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}
