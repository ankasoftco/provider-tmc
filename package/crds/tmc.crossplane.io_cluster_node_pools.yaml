---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: cluster_node_pools.tmc.crossplane.io
spec:
  group: tmc.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tmc
    kind: Cluster_Node_Pool
    listKind: Cluster_Node_PoolList
    plural: cluster_node_pools
    singular: cluster_node_pool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster_Node_Pool is the Schema for the Cluster_Node_Pools API.
          <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Cluster_Node_PoolSpec defines the desired state of Cluster_Node_Pool
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterName:
                    description: Name of the cluster
                    type: string
                  managementClusterName:
                    description: Name of the management cluster
                    type: string
                  meta:
                    description: Metadata for the resource
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations for the resource
                          type: object
                        description:
                          description: Description of the resource
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels for the resource
                          type: object
                      type: object
                    type: array
                  name:
                    description: Name of this nodepool
                    type: string
                  provisionerName:
                    description: Provisioner of the cluster
                    type: string
                  readyWaitTimeout:
                    description: Wait timeout duration until nodepool resource reaches
                      READY state. Accepted timeout duration values like 5s, 45m,
                      or 3h, higher than zero.
                    type: string
                  spec:
                    description: Spec for the cluster nodepool
                    items:
                      properties:
                        cloudLabels:
                          additionalProperties:
                            type: string
                          description: Cloud labels
                          type: object
                        nodeLabels:
                          additionalProperties:
                            type: string
                          description: Node labels
                          type: object
                        tkgAws:
                          description: TKGAWSNodepool is the nodepool spec for TKG
                            AWS cluster
                          items:
                            properties:
                              class:
                                description: Nodepool instance type
                                type: string
                              storageClass:
                                description: Storage Class to be used for storage
                                  of the disks which store the root filesystem of
                                  the nodes
                                type: string
                            type: object
                          type: array
                        tkgServiceVsphere:
                          description: TKGServiceVsphereNodepool is the nodepool spec
                            for TKG service vsphere cluster
                          items:
                            properties:
                              class:
                                description: Nodepool instance type
                                type: string
                              failureDomain:
                                description: Configure the failure domain of node
                                  pool. The potential values could be found using
                                  cluster:options api. This parameter will be ignored
                                  by the backend if the TKG service vsphere cluster
                                  doesn't support.
                                type: string
                              storageClass:
                                description: Storage Class to be used for storage
                                  of the disks which store the root filesystem of
                                  the nodes
                                type: string
                              volumes:
                                description: Configurable volumes for nodepool nodes
                                items:
                                  properties:
                                    capacity:
                                      description: Volume capacity is in gib
                                      type: number
                                    mountPath:
                                      description: It is the directory where the volume
                                        device is to be mounted
                                      type: string
                                    name:
                                      description: It is the volume name
                                      type: string
                                    pvcStorageClass:
                                      description: This is the storage class for PVC
                                        which in case omitted, default storage class
                                        will be used for the disks
                                      type: string
                                  type: object
                                type: array
                            required:
                            - class
                            - storageClass
                            type: object
                          type: array
                        tkgVsphere:
                          description: TkgVsphereNodepool is the nodepool config for
                            the TKG vsphere cluster
                          items:
                            properties:
                              vmConfig:
                                description: VM specific configuration
                                items:
                                  properties:
                                    cpu:
                                      description: Number of CPUs per node
                                      type: string
                                    diskSize:
                                      description: Root disk size in gigabytes for
                                        the VM
                                      type: string
                                    memory:
                                      description: Memory associated with the node
                                        in megabytes
                                      type: string
                                  type: object
                                type: array
                            required:
                            - vmConfig
                            type: object
                          type: array
                        workerNodeCount:
                          description: Count is the number of nodes
                          type: string
                      required:
                      - workerNodeCount
                      type: object
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: clusterName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.clusterName)
            - message: managementClusterName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.managementClusterName)
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
            - message: provisionerName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.provisionerName)
          status:
            description: Cluster_Node_PoolStatus defines the observed state of Cluster_Node_Pool.
            properties:
              atProvider:
                properties:
                  clusterName:
                    description: Name of the cluster
                    type: string
                  id:
                    type: string
                  managementClusterName:
                    description: Name of the management cluster
                    type: string
                  meta:
                    description: Metadata for the resource
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations for the resource
                          type: object
                        description:
                          description: Description of the resource
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels for the resource
                          type: object
                        resourceVersion:
                          description: Resource version of the resource
                          type: string
                        uid:
                          description: UID of the resource
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of this nodepool
                    type: string
                  provisionerName:
                    description: Provisioner of the cluster
                    type: string
                  readyWaitTimeout:
                    description: Wait timeout duration until nodepool resource reaches
                      READY state. Accepted timeout duration values like 5s, 45m,
                      or 3h, higher than zero.
                    type: string
                  spec:
                    description: Spec for the cluster nodepool
                    items:
                      properties:
                        cloudLabels:
                          additionalProperties:
                            type: string
                          description: Cloud labels
                          type: object
                        nodeLabels:
                          additionalProperties:
                            type: string
                          description: Node labels
                          type: object
                        tkgAws:
                          description: TKGAWSNodepool is the nodepool spec for TKG
                            AWS cluster
                          items:
                            properties:
                              class:
                                description: Nodepool instance type
                                type: string
                              storageClass:
                                description: Storage Class to be used for storage
                                  of the disks which store the root filesystem of
                                  the nodes
                                type: string
                            type: object
                          type: array
                        tkgServiceVsphere:
                          description: TKGServiceVsphereNodepool is the nodepool spec
                            for TKG service vsphere cluster
                          items:
                            properties:
                              class:
                                description: Nodepool instance type
                                type: string
                              failureDomain:
                                description: Configure the failure domain of node
                                  pool. The potential values could be found using
                                  cluster:options api. This parameter will be ignored
                                  by the backend if the TKG service vsphere cluster
                                  doesn't support.
                                type: string
                              storageClass:
                                description: Storage Class to be used for storage
                                  of the disks which store the root filesystem of
                                  the nodes
                                type: string
                              volumes:
                                description: Configurable volumes for nodepool nodes
                                items:
                                  properties:
                                    capacity:
                                      description: Volume capacity is in gib
                                      type: number
                                    mountPath:
                                      description: It is the directory where the volume
                                        device is to be mounted
                                      type: string
                                    name:
                                      description: It is the volume name
                                      type: string
                                    pvcStorageClass:
                                      description: This is the storage class for PVC
                                        which in case omitted, default storage class
                                        will be used for the disks
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        tkgVsphere:
                          description: TkgVsphereNodepool is the nodepool config for
                            the TKG vsphere cluster
                          items:
                            properties:
                              vmConfig:
                                description: VM specific configuration
                                items:
                                  properties:
                                    cpu:
                                      description: Number of CPUs per node
                                      type: string
                                    diskSize:
                                      description: Root disk size in gigabytes for
                                        the VM
                                      type: string
                                    memory:
                                      description: Memory associated with the node
                                        in megabytes
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        workerNodeCount:
                          description: Count is the number of nodes
                          type: string
                      type: object
                    type: array
                  status:
                    additionalProperties:
                      type: string
                    description: Status of node pool resource
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
