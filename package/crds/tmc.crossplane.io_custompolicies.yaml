---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: custompolicies.tmc.crossplane.io
spec:
  group: tmc.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tmc
    kind: CustomPolicy
    listKind: CustomPolicyList
    plural: custompolicies
    singular: custompolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CustomPolicy is the Schema for the CustomPolicys API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CustomPolicySpec defines the desired state of CustomPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  meta:
                    description: Metadata for the resource
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations for the resource
                          type: object
                        description:
                          description: Description of the resource
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels for the resource
                          type: object
                      type: object
                    type: array
                  name:
                    description: Name of the custom policy
                    type: string
                  scope:
                    description: 'Scope for the custom, security, image, network and
                      namespace quota policy, having one of the valid scopes for custom,
                      security and namespace quota policy: cluster, cluster_group
                      or organization and valid scopes for image and network policy:
                      workspace or organization.'
                    items:
                      properties:
                        cluster:
                          description: The schema for cluster policy full name
                          items:
                            properties:
                              managementClusterName:
                                description: Name of the management cluster
                                type: string
                              name:
                                description: Name of this cluster
                                type: string
                              provisionerName:
                                description: Provisioner of the cluster
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        clusterGroup:
                          description: The schema for cluster group policy full name
                          items:
                            properties:
                              clusterGroup:
                                description: Name of this cluster group
                                type: string
                            required:
                            - clusterGroup
                            type: object
                          type: array
                        organization:
                          description: The schema for organization policy full name
                          items:
                            properties:
                              organization:
                                description: ID of this organization
                                type: string
                            required:
                            - organization
                            type: object
                          type: array
                        workspace:
                          description: The schema for workspace policy full name
                          items:
                            properties:
                              workspace:
                                description: Name of this workspace
                                type: string
                            required:
                            - workspace
                            type: object
                          type: array
                      type: object
                    type: array
                  spec:
                    description: Spec for the custom policy
                    items:
                      properties:
                        input:
                          description: 'Input for the custom policy, having one of
                            the valid recipes: tmc_block_nodeport_service, tmc_block_resources,
                            tmc_block_rolebinding_subjects, tmc_external_ips, tmc_https_ingress
                            or tmc_require_labels.'
                          items:
                            properties:
                              tmcBlockNodeportService:
                                description: The input schema for custom policy tmc_block_nodeport_service
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - apiGroups
                                        - kinds
                                        type: object
                                      type: array
                                  required:
                                  - targetKubernetesResources
                                  type: object
                                type: array
                              tmcBlockResources:
                                description: The input schema for custom policy tmc_block_resources
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - apiGroups
                                        - kinds
                                        type: object
                                      type: array
                                  required:
                                  - targetKubernetesResources
                                  type: object
                                type: array
                              tmcBlockRolebindingSubjects:
                                description: The input schema for custom policy tmc_block_rolebinding_subjects
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    parameters:
                                      description: Parameters.
                                      items:
                                        properties:
                                          disallowedSubjects:
                                            description: Disallowed Subjects.
                                            items:
                                              properties:
                                                kind:
                                                  description: The kind of subject
                                                    to disallow, can be User/Group/ServiceAccount.
                                                  type: string
                                                name:
                                                  description: The name of the subject
                                                    to disallow.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            type: array
                                        required:
                                        - disallowedSubjects
                                        type: object
                                      type: array
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - apiGroups
                                        - kinds
                                        type: object
                                      type: array
                                  required:
                                  - parameters
                                  - targetKubernetesResources
                                  type: object
                                type: array
                              tmcExternalIps:
                                description: The input schema for custom policy tmc_external_ips
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    parameters:
                                      description: Parameters.
                                      items:
                                        properties:
                                          allowedIps:
                                            description: Allowed IPs.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - allowedIps
                                        type: object
                                      type: array
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - apiGroups
                                        - kinds
                                        type: object
                                      type: array
                                  required:
                                  - parameters
                                  - targetKubernetesResources
                                  type: object
                                type: array
                              tmcHttpsIngress:
                                description: The input schema for custom policy tmc_https_ingress
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - apiGroups
                                        - kinds
                                        type: object
                                      type: array
                                  required:
                                  - targetKubernetesResources
                                  type: object
                                type: array
                              tmcRequireLabels:
                                description: The input schema for custom policy tmc_require_labels
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    parameters:
                                      description: Parameters.
                                      items:
                                        properties:
                                          labels:
                                            description: Labels.
                                            items:
                                              properties:
                                                key:
                                                  description: The label key to enforce.
                                                  type: string
                                                value:
                                                  description: Optional label value
                                                    to enforce (if left empty, only
                                                    key will be enforced).
                                                  type: string
                                              required:
                                              - key
                                              type: object
                                            type: array
                                        required:
                                        - labels
                                        type: object
                                      type: array
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - apiGroups
                                        - kinds
                                        type: object
                                      type: array
                                  required:
                                  - parameters
                                  - targetKubernetesResources
                                  type: object
                                type: array
                            type: object
                          type: array
                        namespaceSelector:
                          description: Label based Namespace Selector for the policy
                          items:
                            properties:
                              matchExpressions:
                                description: Match expressions is a list of label
                                  selector requirements, the requirements are ANDed
                                items:
                                  properties:
                                    key:
                                      description: Key is the label key that the selector
                                        applies to
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to a set of values
                                      type: string
                                    values:
                                      description: Values is an array of string values
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - values
                                  type: object
                                type: array
                            required:
                            - matchExpressions
                            type: object
                          type: array
                      required:
                      - input
                      type: object
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
            - message: scope is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.scope)
            - message: spec is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.spec)
          status:
            description: CustomPolicyStatus defines the observed state of CustomPolicy.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  meta:
                    description: Metadata for the resource
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations for the resource
                          type: object
                        description:
                          description: Description of the resource
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels for the resource
                          type: object
                        resourceVersion:
                          description: Resource version of the resource
                          type: string
                        uid:
                          description: UID of the resource
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of the custom policy
                    type: string
                  scope:
                    description: 'Scope for the custom, security, image, network and
                      namespace quota policy, having one of the valid scopes for custom,
                      security and namespace quota policy: cluster, cluster_group
                      or organization and valid scopes for image and network policy:
                      workspace or organization.'
                    items:
                      properties:
                        cluster:
                          description: The schema for cluster policy full name
                          items:
                            properties:
                              managementClusterName:
                                description: Name of the management cluster
                                type: string
                              name:
                                description: Name of this cluster
                                type: string
                              provisionerName:
                                description: Provisioner of the cluster
                                type: string
                            type: object
                          type: array
                        clusterGroup:
                          description: The schema for cluster group policy full name
                          items:
                            properties:
                              clusterGroup:
                                description: Name of this cluster group
                                type: string
                            type: object
                          type: array
                        organization:
                          description: The schema for organization policy full name
                          items:
                            properties:
                              organization:
                                description: ID of this organization
                                type: string
                            type: object
                          type: array
                        workspace:
                          description: The schema for workspace policy full name
                          items:
                            properties:
                              workspace:
                                description: Name of this workspace
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  spec:
                    description: Spec for the custom policy
                    items:
                      properties:
                        input:
                          description: 'Input for the custom policy, having one of
                            the valid recipes: tmc_block_nodeport_service, tmc_block_resources,
                            tmc_block_rolebinding_subjects, tmc_external_ips, tmc_https_ingress
                            or tmc_require_labels.'
                          items:
                            properties:
                              tmcBlockNodeportService:
                                description: The input schema for custom policy tmc_block_nodeport_service
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              tmcBlockResources:
                                description: The input schema for custom policy tmc_block_resources
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              tmcBlockRolebindingSubjects:
                                description: The input schema for custom policy tmc_block_rolebinding_subjects
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    parameters:
                                      description: Parameters.
                                      items:
                                        properties:
                                          disallowedSubjects:
                                            description: Disallowed Subjects.
                                            items:
                                              properties:
                                                kind:
                                                  description: The kind of subject
                                                    to disallow, can be User/Group/ServiceAccount.
                                                  type: string
                                                name:
                                                  description: The name of the subject
                                                    to disallow.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              tmcExternalIps:
                                description: The input schema for custom policy tmc_external_ips
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    parameters:
                                      description: Parameters.
                                      items:
                                        properties:
                                          allowedIps:
                                            description: Allowed IPs.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              tmcHttpsIngress:
                                description: The input schema for custom policy tmc_https_ingress
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              tmcRequireLabels:
                                description: The input schema for custom policy tmc_require_labels
                                  recipe version v1
                                items:
                                  properties:
                                    audit:
                                      description: Audit (dry-run).
                                      type: boolean
                                    parameters:
                                      description: Parameters.
                                      items:
                                        properties:
                                          labels:
                                            description: Labels.
                                            items:
                                              properties:
                                                key:
                                                  description: The label key to enforce.
                                                  type: string
                                                value:
                                                  description: Optional label value
                                                    to enforce (if left empty, only
                                                    key will be enforced).
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    targetKubernetesResources:
                                      description: A list of kubernetes api resources
                                        on which the policy will be enforced, identified
                                        using apiGroups and kinds.
                                      items:
                                        properties:
                                          apiGroups:
                                            description: APIGroup is a group containing
                                              the resource type.
                                            items:
                                              type: string
                                            type: array
                                          kinds:
                                            description: Kind is the name of the object
                                              schema (resource type).
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        namespaceSelector:
                          description: Label based Namespace Selector for the policy
                          items:
                            properties:
                              matchExpressions:
                                description: Match expressions is a list of label
                                  selector requirements, the requirements are ANDed
                                items:
                                  properties:
                                    key:
                                      description: Key is the label key that the selector
                                        applies to
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to a set of values
                                      type: string
                                    values:
                                      description: Values is an array of string values
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
